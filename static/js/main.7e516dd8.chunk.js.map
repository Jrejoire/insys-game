{"version":3,"sources":["gameStats/armies.js","store/AppStore.js","components/Scene/SceneComponent.jsx","components/Scene/Scene.js","components/Nav/GameNav.js","components/Nav/Footer.js","components/Sidebar/Player.js","components/Sidebar/History.js","components/Sidebar/UnitCard.js","components/Sidebar/InfoBar.js","App.js","serviceWorker.js","index.js"],"names":["armies","tabForces","units","STLRW","name","image","army","class","color","specials","equipment","range","melee","move","defense","roll","success","mods","s","m","l","xl","maxRange","maxInGame","undefined","cost","sysTroops","WBORK","rebels","OTTMK","outerRing","SKNCK","voidWarriors","BACRC","StoreContext","React","createContext","api","require","Client","app","callbackURL","accessToken","scope","StoreProvider","children","store","useLocalStore","canvasHeight","userDetail","loginLink","fullScreen","generateTableNumber","Math","floor","random","Date","now","setTimer","setInterval","gameInfo","players","currentPlayer","team","timeLeft","setCanvasHeight","height","toggleFullScreen","this","history","teamWhite","minis","startActions","turnActions","teamBlack","gameUpdate","setCurrentPlayer","log","string","push","addImportedMini","mini","removeTurnAction","resetTurnActions","removePlayerMini","id","filter","temporalLogin","a","requestOptions","method","headers","body","JSON","stringify","username","fetch","then","res","text","response","runInAction","ipfsState","logOut","revokeToken","err","document","location","href","localStorage","setItem","console","initHSLogin","link","getLoginURL","login","user","params","token","getUserDetail","localAccess","localUser","access_token","URLSearchParams","search","get","setAccessToken","me","Provider","value","props","useContext","reactCanvas","useRef","sceneOptions","antialias","engineOptions","adaptToDeviceRatio","onRender","rest","onSceneReady","useState","loaded","setLoaded","scene","setScene","useEffect","window","resize","getEngine","addEventListener","removeEventListener","engine","Engine","current","stencil","Scene","isReady","onReadyObservable","addOnce","runRenderLoop","render","onwheel","event","preventDefault","onmousewheel","dispose","tabIndex","ref","BABYLON","AllowMatricesInterpolation","canvas","getRenderingCanvas","advancedTexture","AdvancedDynamicTexture","CreateFullscreenUI","isForeground","camera","ToRadians","attachControl","angularsensibility","checkCollisions","ellipsoid","light","intensity","shadowGenerator","usePoissonSampling","hl","innerGlow","invisibleMaterial","alpha","transparentMaterial","skybox","CreateSphere","diameter","diameterX","skyboxMaterial","backFaceCulling","material","receiveShadows","background","CreateCylinder","tessellation","backgroundMaterial","opacityTexture","translate","Y","visibility","boardMaterial","diffuseTexture","bumpTexture","ambientTexture","groundMaterial","specularTexture","miniMaterial","diffuseColor","tokenMaterialBlack","tokenMaterialWhite","Black","White","diceMatWhite","diceMatBlack","diceMatRed","gameAreaTemplate","moveAreaMat","CustomMaterial","Fragment_Custom_Diffuse","lineOfSightMatW","lineOfSightMMatW","lineOfSightLMatW","lineOfSightXLMatW","lineOfSightMatB","lineOfSightMMatB","lineOfSightLMatB","lineOfSightXLMatB","actionToken","dice1","dice2","dice3","dice4","dice5","dice6","armyStats","enemyPlayer","mapActionManager","moveActionManager","teamBlackActionManager","teamWhiteActionManager","importActionTokens","ImportMesh","newMeshes","MergeMeshes","position","scaling","actionClone","dx","x","NB_CLONES","nbclone","clone","randomX","z","dice","X","Z","getShadowMap","renderList","collisionGroup","collisionMask","setEnabled","rotation","y","rotate","LOS","LOSM","LOSL","parent","los","FromMesh","losM","losL","slicer","CreateBox","width","depth","slicerCSG","subtract","lineOfSight","toMesh","lineOfSightM","lineOfSightL","isPickable","shield","getLosColor","unit","losColorBad","losColorMalus","losColorZero","losColorBonus","getHeight","mesh","getBoundingInfo","boundingBox","extendSize","getWidth","getLength","getControlByName","_rootContainer","_children","control","asyncForEach","array","callback","index","length","clonedMini","targetFurthestMini","miniPosition","map","furthestMiniIndex","indexOf","min","max","furthestMini","furthestTarget","size","setTarget","setTimeout","importMiniModel","miniUnit","toLowerCase","actionManager","enablePointerMoveEvents","base","createBase","miniLOS","losMat","createLOS","miniShield","createShield","forEach","miniName","obstacles","container","redMat","greyMat","greenMat","container0","container2","container02","container3","container4","container5","container6","container7","container8","container78","container9","container10","container11","container12","moveArea","miniWidth","board","moveArea2","switchPlayer","selected","targets","inAttack","previous","cancelTargeting","target","removeMesh","getMeshByName","removeDiceStat","diceAssigned","removeControl","rollButton","selection","evt","sourceEvent","which","currentMesh","meshUnderPointer","hoverCursor","moveAction","skip","includes","addMesh","cancelSelection","rotateOnMouseMove","isInCover","mini1","mini2","originLeft","originRight","directionLeft","Normalize","directionRight","rayLeft","rayRight","hitsLeft","multiPickWithRay","hitsRight","some","hit","pickedMesh","isInAngle","forward","forwardDirection","origin","directionTarget","acos","Dot","PI","whatIsUnderneath","origin2","origin3","origin4","direction","ray","ray2","ray3","ray4","hits","hits2","hits3","hits4","removeCoverLogo","handleLineOfSight","ev","enemyTarget","rangeToTarget","calculateSuccess","intersectsMesh","cancelLineOfSight","diceRoll","rolls","arrayResult","i","cloneDice","delay","save","dicePosition1","dicePosition2","dicePosition3","diceOddPosition3","dicePosition4","dicePosition5","diceOddPosition5","dicePositions","diceIndex","compareRolls","mini1Rolls","mini1Mod","mini2Rolls","mini2Mod","mini1Success","mini2Success","toString","j","splice","rangeResult","distance","Distance","mini1MaxRange","targetLeft","targetRight","noObstacle","isTheGameOver","winner","getMods","higherMod","isHigher","onAttack","mini1CoverMod","mini1Mods","mini2CoverMod","mini2Mods","meleeRoll","mini2MeleeRoll","modedRolls","toUpperCase","defenseRoll","clearTarget","attackTargets","waitFor","ms","Promise","r","enemyResponse","onWayResponse","enemy","GUI","CreateSimpleButton","left","top","cornerRadius","zIndex","onPointerClickObservable","add","obstacleTemplateArea","round","highMat","getMaterialByName","child","getDirection","normalize","getGroundPosition","diffX","diffY","atan2","rotateAction","onMouseMove","obstacle","currentObstacle","pickinfo","pick","pointerX","pointerY","pickedPoint","addTarget","addControl","updateDiceStat","targetColor","createDirectLOS","createDiceStat","targetResponse","diceStat","fontFamily","fontSize","linkWithMesh","linkOffsetY","assignTarget","whoHasMoreDice","reduce","acc","every","removedTarget","colorArray1","CreateLines","points","colors","updatable","colorArray2","registerAction","OnPointerOverTrigger","OnPointerOutTrigger","OnPickUpTrigger","OnLeftPickTrigger","onDispose","SceneComponent","className","GameNav","menuOpen","setMenuOpen","sound","PlayerTurn","useObserver","toJS","Progression","percentWhiteLeft","percentBlackLeft","Timer","time","minutes","seconds","tableNumber","type","viewBox","fill","fillRule","d","clipRule","onClick","Footer","rel","title","Player","playerName","actionsLeft","minisLeft","isCurrentPlayer","src","alt","History","events","result","arr","split","key","unshift","style","UnitCard","InfoBar","cards","App","handleFirstTab","e","keyCode","classList","SideBar","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"2UAAaA,EAAS,CACpBC,UAAW,CACTC,MAAO,CACLC,MAAO,CACLC,KAAM,cACNC,MAAO,qFACPC,KAAK,gBACLC,MAAO,QACPC,MAAM,QACNC,SAAU,MACVC,UAAW,CAACC,MAAO,YAAcC,MAAO,aACxCC,KAAM,EACNC,QAAS,CAAEC,KAAM,EAAGC,QAAS,GAC7BJ,MAAO,CAAEG,KAAM,EAAGC,QAAS,GAC3BL,MAAO,CAAEI,KAAM,EAAGC,QAAS,EAAGC,KAAM,CAAEC,GAAI,EAAGC,EAAG,EAAGC,EAAG,EAAGC,IAAK,IAC9DC,SAAU,KACVC,eAAWC,EACXC,KAAM,KAIZC,UAAW,CACTxB,MAAO,CACLyB,MAAO,CACLvB,KAAM,kBACNE,KAAK,aACLC,MAAO,QACPC,MAAO,OACPC,SAAU,MACVC,UAAW,CAACC,MAAO,gBAAkBC,MAAO,SAC5CC,KAAM,EACNC,QAAS,CAAEC,KAAM,EAAGC,QAAS,GAC7BJ,MAAO,CAAEG,KAAM,EAAGC,QAAS,GAC3BL,MAAO,CAAEI,KAAM,EAAGC,QAAS,EAAGC,KAAM,CAAEC,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGC,IAAK,IAC9DC,SAAU,KACVC,eAAWC,EACXC,KAAM,KAIZG,OAAQ,CACN1B,MAAO,CACL2B,MAAO,CACLzB,KAAM,aACNC,MAAO,qFACPC,KAAK,gBACLC,MAAO,QACPC,MAAO,SACPC,SAAU,MACVC,UAAW,CAACC,MAAO,cAAgBC,MAAO,WAC1CC,KAAM,EACNC,QAAS,CAAEC,KAAM,EAAGC,QAAS,GAC7BJ,MAAO,CAAEG,KAAM,EAAGC,QAAS,GAC3BL,MAAO,CAAEI,KAAM,EAAGC,QAAS,EAAGC,KAAM,CAAEC,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGC,IAAK,IAC9DC,SAAU,KACVC,eAAWC,EACXC,KAAM,KAIZK,UAAW,CACT5B,MAAO,CACL6B,MAAO,CACL3B,KAAM,iBACNC,MAAO,mFACPC,KAAK,qBACLC,MAAO,QACPC,MAAO,SACPC,SAAU,MACVC,UAAW,CAACC,MAAO,WAAaC,MAAO,SACvCC,KAAM,EACNC,QAAS,CAAEC,KAAM,EAAGC,QAAS,GAC7BJ,MAAO,CAAEG,KAAM,EAAGC,QAAS,GAC3BL,MAAO,CAAEI,KAAM,EAAGC,QAAS,EAAGC,KAAM,CAAEC,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGC,IAAK,IAC9DC,SAAU,KACVC,eAAWC,EACXC,KAAM,KAIZO,aAAc,CACZ9B,MAAO,CACL+B,MAAO,CACL7B,KAAM,cACNE,KAAK,gBACLC,MAAO,aACPC,MAAO,SACPC,SAAU,MACVC,UAAW,CAACC,MAAO,gBAAkBC,MAAO,uBAC5CC,KAAM,EACNC,QAAS,CAAEC,KAAM,EAAGC,QAAS,GAC7BJ,MAAO,CAAEG,KAAM,EAAGC,QAAS,GAC3BL,MAAO,CAAEI,KAAM,EAAGC,QAAS,EAAGC,KAAM,CAAEC,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGC,IAAK,IAC9DC,SAAU,KACVC,eAAWC,EACXC,KAAM,MC1FRS,EAAeC,IAAMC,gBAevBC,EAAM,IAFOC,EAAQ,KAEAC,QAAO,CAC5BC,IAAK,aACLC,YAAa,mCACbC,YAAa,eACbC,MAAO,CAAC,OAAQ,aAGb,SAASC,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SACtBC,EAAQC,aAAc,iBAAO,CAE/BC,aAAc,IACdC,WAAY,GACZC,UAAW,GACXC,YAAY,EACZC,oBAAqB,WACjB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMD,KAAKE,SAAWC,KAAKC,SAEtEC,SAAU,WACNC,aAAY,WACRb,EAAMc,SAASC,QAAQf,EAAMc,SAASE,cAAcC,MAAMC,UAAY,IACvE,MAEPC,gBAAiB,SAACC,GACfpB,EAAME,aAAekB,GAExBC,iBAAkB,WACdrB,EAAMK,YAAcL,EAAMK,YAE9BS,SAAU,CACN,kBAAoB,OAAOd,EAAMM,uBACjCU,cAAe,CACX,WAAa,OAAOhB,EAAMc,SAASC,QAAQO,KAAKL,MAAM3D,MACtD2D,KAAM,aAEVM,QAAS,GACTR,QAAS,CACLS,UAAW,CACPlE,KAAM,OACNE,KAAM,SACN,gBAAkB,OAAON,EAAOoE,KAAK9D,OACrCJ,MAAO,CAAC,QAAS,QAAS,SAC1BqE,MAAO,GACPC,aAAc,EACdC,YAAa,EACbT,SAAU,MAIdU,UAAW,CACPtE,KAAM,SACNE,KAAM,YACN,gBAAkB,OAAON,EAAOoE,KAAK9D,OACrCJ,MAAO,CAAC,QAAS,QAAS,SAC1BqE,MAAO,GACPC,aAAc,EACdC,YAAa,EACbT,SAAU,QAMtBW,WAAY,CACRC,iBAAkB,SAACd,GACfhB,EAAMc,SAASE,cAAgBA,GAEnCe,IAAK,SAACC,GACFhC,EAAMc,SAASS,QAAQU,KAAKD,IAEhCE,gBAAkB,SAACC,EAAMlB,GACrBjB,EAAMc,SAASC,QAAQE,GAAMQ,MAAMQ,KAAKE,IAE5CC,iBAAkB,SAACnB,GACfjB,EAAMc,SAASC,QAAQE,GAAMU,aAAe,GAEhDU,iBAAmB,SAACpB,GAChBjB,EAAMc,SAASC,QAAQE,GAAMU,YAAc3B,EAAMc,SAASC,QAAQE,GAAMS,cAE5EY,iBAAkB,SAACC,EAAItB,GAGnBjB,EAAMc,SAASC,QAAQE,GAAMQ,MAAQzB,EAAMc,SAASC,QAAQE,GAAMQ,MAAMe,QAAO,SAAAL,GAAI,OAAIA,EAAKI,KAAOA,KACnGvC,EAAMc,SAASC,QAAQE,GAAMS,cAAgB,IAIrDe,cAAc,WAAD,4BAAE,8BAAAC,EAAA,6DACPC,EAAiB,CACjBC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEC,SAAU,OAAQvD,IAAK,YAPvC,SASYwD,MAAM,0CAA2CP,GAAgBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAT7F,OASLC,EATK,OAUXC,uBAAY,WAEJvD,EAAMwD,UADO,YAAbF,KAXG,2CAAF,kDAAC,GAkBdG,OAAQ,WAaJ,OAZAlE,EAAImE,aAAY,SAAUC,EAAKP,GACvBA,GAAOA,EAAIlF,UACX8B,EAAMG,WAAa,GACnByD,SAASC,SAASC,KAAO,KAE7BC,aAAaC,QAAQ,eAAgB,IACrCD,aAAaC,QAAQ,QAAS,IAC9BhE,EAAMG,WAAa,GACfwD,GACAM,QAAQlC,IAAI4B,OAGb,GAEXO,YAAa,WACT,IAAIC,EAAO5E,EAAI6E,cACfb,uBAAY,WACRvD,EAAMI,UAAY+D,MAG1BE,MAAO,SAACC,GACJ,IAAIC,EAAS,CAAEtB,SAAUqB,GAEzB/E,EAAI8E,MAAME,GAAQ,SAAUZ,EAAKa,GACzBA,EACAxE,EAAMyE,cAAcD,EAAOF,GACpBX,GACPM,QAAQlC,IAAI4B,OAIxBc,cAAe,SAACC,EAAaC,GAGzB,GAFA3E,EAAMG,WAAa,GAEfuE,GAAeC,EACf,IAAIC,EAAeF,EACfzB,EAAW0B,OAGfC,EAAe,IAAIC,gBAAgBjB,SAASC,SAASiB,QAAQC,IAAI,gBACjE9B,EAAW,IAAI4B,gBAAgBjB,SAASC,SAASiB,QAAQC,IAAI,YAG7DH,IAEArF,EAAIyF,eAAeJ,GAEnBrF,EAAI0F,IAAG,SAACtB,EAAKP,GACLA,GACAG,uBAAY,WACRvD,EAAMG,WAAaiD,EACfwB,GACAb,aAAaC,QAAQ,eAAgBjB,KAAKC,UAAU4B,IAEpD3B,GACAc,aAAaC,QAAQ,QAASjB,KAAKC,UAAUC,OAIrDU,GACAM,QAAQlC,IAAI4B,YAMhC,OAAO,kBAACvE,EAAa8F,SAAd,CAAuBC,MAAOnF,GAAQD,GAGlCX,Q,sEC9LA,WAACgG,GACZ,IAAMpF,EAAQX,IAAMgG,WAAWjG,GACzBkG,EAAcC,iBAAO,MAC2BC,GAAkDJ,EAAhGK,UAAgGL,EAArFM,cAAqFN,EAAtEO,mBAAsEP,EAAlDI,cAAcI,EAAoCR,EAApCQ,SAA2BC,GAAST,EAA1BU,aAHxD,YAGkFV,EAHlF,gGAIMW,oBAAS,GAJf,mBAIfC,EAJe,KAIPC,EAJO,OAKIF,mBAAS,MALb,mBAKfG,EALe,KAKRC,EALQ,KA0DtB,OAnDAC,qBAAU,WACN,GAAIC,OAAQ,CACR,IAAMC,EAAS,WACPJ,GACAA,EAAMK,YAAYD,UAK1B,OAFAD,OAAOG,iBAAiB,SAAUF,GAE3B,WACHD,OAAOI,oBAAoB,SAAUH,OAG9C,CAACJ,IAEJE,qBAAU,WACN,IAAKJ,EAAQ,CACTC,GAAU,GACV,IAAMS,EAAS,IAAIC,IAAOrB,EAAYsB,SAAS,EAAM,CAAEC,SAAS,IAC1DX,EAAQ,IAAIY,IAAMJ,EAAQlB,GAChCW,EAASD,GACLA,EAAMa,UACN3B,EAAMU,aAAaI,EAAOlG,EAAMc,SAASC,QAASf,EAAM6B,YAExDqE,EAAMc,kBAAkBC,SAAQ,SAAAf,GAAK,OAAId,EAAMU,aAAaI,EAAOlG,EAAMc,SAASC,QAASf,EAAM6B,eAGrG6E,EAAOQ,eAAc,WACO,oBAAbtB,GACPA,EAASM,GAEbA,EAAMiB,YAYd,OATA7B,EAAYsB,QAAQQ,QAAU,SAASC,GACnCA,EAAMC,kBAGVhC,EAAYsB,QAAQW,aAAe,SAASF,GACxCA,EAAMC,kBAEVtH,EAAMmB,gBAAgBmE,EAAYsB,QAAQxF,QAEnC,WACW,OAAV8E,GACAA,EAAMsB,aAGf,CAACxB,EAAQR,EAAcJ,EAAOQ,EAAUM,EAAOlG,EAAOA,EAAMc,SAASC,QAASf,EAAM6B,aAInF,0CAAQU,GAAG,SAASkF,SAAS,IAAIC,IAAKpC,GAAiBO,KCxD/D8B,IAAkBC,4BAA6B,EAO/C,IAAM9B,EAAe,SAACI,EAAOnF,EAASc,GACpC,IAAMgG,EAAS3B,EAAMK,YAAYuB,qBAC7BC,EAAkBC,IAAuBC,mBAC3C,WAEFF,EAAgBG,cAAe,EAC/B,IAAIC,EAAS,IAAIR,IAAwB,YACvCA,IAAcS,UAAU,GACxBT,IAAcS,UAAU,KACxB,IAAK,IAAIT,KAAiB,GAAI,IAAK,GAAIzB,GAGzCiC,EAAOE,cAAcR,GAAQ,GAC7BM,EAAOG,qBAAuB,EAC9BH,EAAOI,iBAAkB,EACzBJ,EAAOK,UAAY,IAAIb,IAAgB,IAAK,EAAG,KAG/C,IAAIc,EAAQ,IAAId,IAAmB,aAAc,IAAIA,IAAgB,GAAI,IAAK,KAAMzB,GACpFuC,EAAMC,UAAY,EAClBD,EAAM5K,MAAQ,IAED,IAAI8J,IAAyB,YAAa,IAAIA,IAAgB,GAAI,KAAM,GAAIzB,GAGlFwC,UAAY,GAEnB,IAAIC,EAAkB,IAAIhB,IAAwB,KAAMc,GACxDE,EAAgBC,oBAAqB,EAErC,IAAIC,EAAK,IAAIlB,IAAuB,MAAOzB,GAC3C2C,EAAGC,WAAY,EAGf,IAAIC,EAAoB,IAAIpB,IAAyB,oBAAqBzB,GAC1E6C,EAAkBC,MAAQ,EAE1B,IAAIC,EAAsB,IAAItB,IAAyB,sBAAuBzB,GAC9E+C,EAAoBD,MAAQ,GAE5B,IAAIE,EAASvB,IAAoBwB,aAAa,SAAU,CAAEC,SAAU,KAAMC,UAAW,MAAQnD,GACzFoD,EAAiB,IAAI3B,IAAyB,SAAUzB,GAC5DoD,EAAeC,iBAAkB,EACjCL,EAAOM,SAAWF,EAClBJ,EAAOO,gBAAiB,EAExB,IAAIC,EAAa/B,IAAoBgC,eAAe,aAAc,CAAEvI,OAAQ,EAAGgI,SAAU,IAAMQ,aAAc,KAAQ1D,GACjH2D,EAAqB,IAAIlC,IAAyB,aAAczB,GACpE2D,EAAmBC,eAAiB,IAAInC,IAAJ,WArDtB,GAqDsB,iCAAkEzB,GACtG2D,EAAmBN,iBAAkB,EACrCG,EAAWF,SAAWK,EACtBH,EAAWK,UAAUpC,IAAaqC,GAAI,EAAG9D,GACzCwD,EAAWO,WAAa,GACxBP,EAAWD,gBAAiB,EAE5B,IAAIS,EAAgB,IAAIvC,IAAyB,gBAAiBzB,GAClEgE,EAAcC,eAAiB,IAAIxC,IAAJ,WA7DjB,GA6DiB,yCAA0EzB,GACzGgE,EAAcE,YAAc,IAAIzC,IAAJ,WA9Dd,GA8Dc,sCAAuEzB,GACnGgE,EAAcG,eAAiB,IAAI1C,IAAJ,WA/DjB,GA+DiB,gDAAiFzB,GAEhH,IAAIoE,EAAiB,IAAI3C,IAAyB,kBAAmBzB,GACrEoE,EAAeH,eAAiB,IAAIxC,IAAJ,WAlElB,GAkEkB,2CAA4EzB,GAC5GoE,EAAeF,YAAc,IAAIzC,IAAJ,WAnEf,GAmEe,yCAA0EzB,GACvGoE,EAAeC,gBAAkB,IAAI5C,IAAJ,WApEnB,GAoEmB,0CAA2EzB,GAC5GoE,EAAeD,eAAiB,IAAI1C,IAAJ,WArElB,GAqEkB,yCAA0EzB,GAE1G,IAAIsE,EAAe,IAAI7C,IAAyB,kBAAmBzB,GACnEsE,EAAaC,aAAe,IAAI9C,IAAe,IAAM,IAAK,IAAM,IAAK,IAAM,KAE3E,IAAI+C,EAAqB,IAAI/C,IAAyB,gBAAiBzB,GACvEwE,EAAmBP,eAAiB,IAAIxC,IAAJ,WA3EtB,GA2EsB,yDAA0FzB,GAC9HwE,EAAmBN,YAAc,IAAIzC,IAAJ,WA5EnB,GA4EmB,qDAAsFzB,GAEvH,IAAIyE,EAAqB,IAAIhD,IAAyB,gBAAiBzB,GACvEyE,EAAmBR,eAAiB,IAAIxC,IAAJ,WA/EtB,GA+EsB,wDAAyFzB,GAC7HyE,EAAmBP,YAAc,IAAIzC,IAAJ,WAhFnB,GAgFmB,qDAAsFzB,GAE/F,IAAIyB,IAAyB,eAAgBzB,GACnDuE,aAAe,IAAI9C,IAAeiD,MAE5B,IAAIjD,IAAyB,eAAgBzB,GACnDuE,aAAe,IAAI9C,IAAekD,MAEpD,IAAIC,EAAe,IAAInD,IAAyB,eAAgBzB,GAChE4E,EAAaL,aAAe,IAAI9C,IAAekD,MAE/C,IAAIE,EAAe,IAAIpD,IAAyB,eAAgBzB,GAEhE6E,EAAaN,aAAe,IAAI9C,IAAeiD,MAE/C,IAAII,EAAa,IAAIrD,IAAyB,aAAczB,GAC5D8E,EAAWP,aAAe,IAAI9C,IAAe,IAAM,IAAK,GAAK,IAAK,EAAI,KAEtE,IAAIsD,EAAmB,4JAEnBC,EAAc,IAAIC,IAAe,cAAejF,GACpDgF,EAAYlC,MAAQ,IACpBkC,EAAYE,wBAAwBH,GAEpC,IAEII,EAAkB,IAAIF,IAAe,WAAYjF,GACrDmF,EAAgBrC,MAHc,IAI9BqC,EAAgBD,wBAAwBH,GAExC,IAAIK,EAAmB,IAAIH,IAAe,WAAYjF,GACtDoF,EAAiBtC,MAPa,IAQ9BsC,EAAiBF,wBAAwBH,GAEzC,IAAIM,EAAmB,IAAIJ,IAAe,WAAYjF,GACtDqF,EAAiBvC,MAXa,IAY9BuC,EAAiBH,wBAAwBH,GAEzC,IAAIO,EAAoB,IAAIL,IAAe,YAAajF,GACxDsF,EAAkBxC,MAfY,IAgB9BwC,EAAkBJ,wBAAwBH,GAE1C,IAAIQ,EAAkB,IAAIN,IAAe,WAAYjF,GACrDuF,EAAgBzC,MAnBc,IAoB9ByC,EAAgBL,wBAAwBH,GAExC,IAAIS,EAAmB,IAAIP,IAAe,WAAYjF,GACtDwF,EAAiB1C,MAvBa,IAwB9B0C,EAAiBN,wBAAwBH,GAEzC,IAAIU,EAAmB,IAAIR,IAAe,WAAYjF,GACtDyF,EAAiB3C,MA3Ba,IA4B9B2C,EAAiBP,wBAAwBH,GAEzC,IAAIW,EAAoB,IAAIT,IAAe,YAAajF,GACxD0F,EAAkB5C,MA/BY,IAgC9B4C,EAAkBR,wBAAwBH,GAO1C,IAoBIY,EAiCAC,EACAC,EACAC,EACAC,EACAC,EACAC,EA1DAnL,EAAgB,CAClBC,KAAM,YACN,WAAa,OAAOF,EAAQO,KAAKL,MAAM3D,MACvC,WAAa,OAAOyD,EAAQO,KAAKL,MAAMmL,WACvC,mBAAqB,OAAOrL,EAAQO,KAAKL,MAAMS,cAC/C,kBAAoB,OAAOX,EAAQO,KAAKL,MAAMU,cAG5C0K,EAAc,CAChB,WAAa,MAA8B,cAAvBrL,EAAcC,KAAuB,YAAc,aACvE,WAAa,OAAOF,EAA+B,cAAvBC,EAAcC,KAAuB,YAAc,aAAa3D,MAC5F,WAAa,OAAOyD,EAA+B,cAAvBC,EAAcC,KAAuB,YAAc,aAAamL,YAI1FE,EAAmB,IAAI3E,IAAsBzB,GAC7CqG,EAAoB,IAAI5E,IAAsBzB,GAC9CsG,EAAyB,IAAI7E,IAAsBzB,GACnDuG,EAAyB,IAAI9E,IAAsBzB,GAIjDwG,EAAqB,WACzB/E,IAAoBgF,WAClB,GADF,WAtKY,GAsKZ,YAGE,gBACAzG,GACA,SAAU0G,IACRf,EAAclE,IAAakF,YAAYD,IAC3BE,SAAW,IAAInF,IAAgB,KAAM,GAAI,KACrDkE,EAAYkB,QAAU,IAAIpF,IAAgB,IAAK,IAAK,KACpDkE,EAAYvO,KAAO,QACnBuO,EAAYtJ,GAAK,SACjBsJ,EAAYrC,SAAkC,cAAvBxI,EAAcC,KAAuB0J,EAAqBD,EAKjF,IAHA,IAEIsC,EAFAC,EAAKpB,EAAYiB,SAASI,EAC1BC,EAAYnM,EAAcU,aAAe,EAEpC0L,EAAU,EAAGA,EAAUD,EAAWC,IAAW,EACpDJ,EAAcnB,EAAYwB,MAAZ,eAA0BD,EAAU,KACtC9P,KAAO,QACnB,IAAIgQ,EAAU/M,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAC/CuM,EAAYF,SAASI,EAAID,EAAKK,EAC9BN,EAAYF,SAASS,EAAI1B,EAAYiB,SAASS,EAAIhN,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GACnFwM,GAAUK,EAEZzL,EAAWQ,iBAAiBrB,EAAcC,UAIhDyL,IAQA,IAAIc,GAAO,GACX7F,IAAoBgF,WAClB,GADF,WA3Mc,GA2Md,YAGE,eACAzG,GACA,SAAU0G,IACRd,EAAQnE,IAAakF,YAAYD,IAC3BG,QAAU,IAAIpF,IAAgB,GAAI,GAAI,IAC5CmE,EAAM/B,UAAUpC,IAAaqC,EAAG,GAAI9D,GACpC4F,EAAM/B,UAAUpC,IAAa8F,EAAG,IAAKvH,GACrC4F,EAAM/B,UAAUpC,IAAa+F,EAAG,GAAIxH,GACpCyC,EAAgBgF,eAAeC,WAAW3L,KAAK6J,GAC/CA,EAAMvJ,GAAK,QACXuJ,EAAMxO,KAAO,OACbwO,EAAMvD,iBAAkB,EACxBuD,EAAM+B,eAAiB,EACvB/B,EAAMgC,cAAgB,EAEtBhC,EAAMiC,YAAW,GACjBP,GAAKvL,KAAK6J,MAIdnE,IAAoBgF,WAClB,GADF,WAlOc,GAkOd,YAGE,gBACAzG,GACA,SAAU0G,IACRb,EAAQpE,IAAakF,YAAYD,IAC3BG,QAAU,IAAIpF,IAAgB,GAAI,GAAI,IAC5CoE,EAAMiC,SAASC,EAAItG,IAAcS,UAAU,IAC3C2D,EAAMiC,SAASd,EAAIvF,IAAcS,UAAU,IAC3C2D,EAAMhC,UAAUpC,IAAaqC,EAAG,GAAI9D,GACpC6F,EAAMhC,UAAUpC,IAAa8F,EAAG,IAAKvH,GACrC6F,EAAMhC,UAAUpC,IAAa+F,EAAG,GAAIxH,GACpCyC,EAAgBgF,eAAeC,WAAW3L,KAAK8J,GAC/CA,EAAMxJ,GAAK,QACXwJ,EAAMzO,KAAO,OACbyO,EAAMxD,iBAAkB,EACxBwD,EAAM8B,eAAiB,EACvB9B,EAAM+B,cAAgB,EAEtB/B,EAAMgC,YAAW,GACjBP,GAAKvL,KAAK8J,MAIdpE,IAAoBgF,WAClB,GADF,WA3Pc,GA2Pd,YAGE,gBACAzG,GACA,SAAU0G,IACRZ,EAAQrE,IAAakF,YAAYD,IAC3BG,QAAU,IAAIpF,IAAgB,GAAI,GAAI,IAC5CqE,EAAMjC,UAAUpC,IAAaqC,EAAG,GAAI9D,GACpC8F,EAAMjC,UAAUpC,IAAa8F,EAAG,IAAKvH,GACrC8F,EAAMjC,UAAUpC,IAAa+F,EAAG,GAAIxH,GACpCyC,EAAgBgF,eAAeC,WAAW3L,KAAK+J,GAC/CA,EAAMzJ,GAAK,QACXyJ,EAAM1O,KAAO,OACb0O,EAAMzD,iBAAkB,EACxByD,EAAM6B,eAAiB,EACvB7B,EAAM8B,cAAgB,EAEtB9B,EAAM+B,YAAW,GACjBP,GAAKvL,KAAK+J,MAIdrE,IAAoBgF,WAClB,GADF,WAlRc,GAkRd,YAGE,gBACAzG,GACA,SAAU0G,IACRX,EAAQtE,IAAakF,YAAYD,IAC3BG,QAAU,IAAIpF,IAAgB,GAAI,GAAI,IAC5CsE,EAAMlC,UAAUpC,IAAaqC,EAAG,GAAI9D,GACpC+F,EAAMlC,UAAUpC,IAAa8F,EAAG,IAAKvH,GACrC+F,EAAMlC,UAAUpC,IAAa+F,EAAG,GAAIxH,GACpCyC,EAAgBgF,eAAeC,WAAW3L,KAAKgK,GAC/CA,EAAM1J,GAAK,QACX0J,EAAM3O,KAAO,OACb2O,EAAM1D,iBAAkB,EACxB0D,EAAM4B,eAAiB,EACvB5B,EAAM6B,cAAgB,EAEtB7B,EAAM8B,YAAW,GACjBP,GAAKvL,KAAKgK,MAIdtE,IAAoBgF,WAClB,GADF,WAzSc,GAySd,YAGE,gBACAzG,GACA,SAAU0G,IACRV,EAAQvE,IAAakF,YAAYD,IAC3BG,QAAU,IAAIpF,IAAgB,GAAI,GAAI,IAC5CuE,EAAM8B,SAASd,EAAIvF,IAAcS,UAAU,KAC3C8D,EAAMnC,UAAUpC,IAAaqC,EAAG,GAAI9D,GACpCgG,EAAMnC,UAAUpC,IAAa8F,EAAG,IAAKvH,GACrCgG,EAAMnC,UAAUpC,IAAa+F,EAAG,GAAIxH,GACpCyC,EAAgBgF,eAAeC,WAAW3L,KAAKiK,GAC/CA,EAAM3J,GAAK,QACX2J,EAAM5O,KAAO,OACb4O,EAAM3D,iBAAkB,EACxB2D,EAAM2B,eAAiB,EACvB3B,EAAM4B,cAAgB,EAEtB5B,EAAM6B,YAAW,GACjBP,GAAKvL,KAAKiK,MAIdvE,IAAoBgF,WAClB,GADF,WAjUc,GAiUd,YAGE,gBACAzG,GACA,SAAU0G,IACRT,EAAQxE,IAAakF,YAAYD,IAC3BG,QAAU,IAAIpF,IAAgB,GAAI,GAAI,IAC5CwE,EAAMpC,UAAUpC,IAAaqC,EAAG,GAAI9D,GACpCiG,EAAMpC,UAAUpC,IAAa8F,EAAG,IAAKvH,GACrCiG,EAAMpC,UAAUpC,IAAa+F,EAAG,GAAIxH,GACpCiG,EAAM+B,OAAOvG,IAAaqC,EAAGrC,IAAcS,UAAU,IAAKlC,GAC1DyC,EAAgBgF,eAAeC,WAAW3L,KAAKkK,GAC/CA,EAAM5J,GAAK,QACX4J,EAAM7O,KAAO,OACb6O,EAAM5D,iBAAkB,EACxB4D,EAAM0B,eAAiB,EACvB1B,EAAM2B,cAAgB,EAEtB3B,EAAM4B,YAAW,GACjBP,GAAKvL,KAAKkK,MAId,IAEIgC,GAAMxG,IAAoBgC,eAAe,eAAgB,CAAEvI,OAAQ,GAAKgI,SAAU,OAAqBQ,aAAc,KAAO1D,GAChIiI,GAAIrB,SAAW,IAAInF,IAAgB,GAAI,IAAK,GAC5C,IAAIyG,GAAOzG,IAAoBgC,eAAe,eAAgB,CAAEvI,OAAQ,GAAKgI,SAAU,OAAqBQ,aAAc,KAAO1D,GAC7HmI,GAAO1G,IAAoBgC,eAAe,eAAgB,CAAEvI,OAAQ,GAAKgI,SAAU,QAAqBQ,aAAc,KAAO1D,GAE9GmI,GAAKC,OAASF,GAAKE,OAASH,GAE/C,IAAII,GAAM5G,IAAY6G,SAASL,IAC3BM,GAAO9G,IAAY6G,SAASJ,IAC5BM,GAAO/G,IAAY6G,SAASH,IAG5BM,GAAShH,IAAoBiH,UAAU,cAAe,CAAEC,MAAO,KAAMzN,OAAQ,KAAM0N,MAAO,GAAK5I,GACnGyI,GAAOT,OAAOvG,IAAa8F,EAAG9F,IAAcS,UAAU,IAAKlC,GAC3DyI,GAAO7B,SAAW,IAAInF,IAAgB,MAAO,IAAK,GAClDgH,GAAO1E,WAAa,EACpB,IAAI8E,GAAYpH,IAAY6G,SAASG,IAIrCD,GAAOA,GAAKM,SAASD,IAAWC,SAASP,IAAMO,SAAST,IAExDE,GAAOA,GAAKO,SAASD,IAAWC,SAAST,IAIzC,IAAIU,IAFJV,GAAMA,GAAIS,SAASD,KAEGG,OAAO,gBACzBC,GAAeV,GAAKS,OAAO,gBAC3BE,GAAeV,GAAKQ,OAAO,gBAGJE,GAAad,OAASa,GAAab,OAASW,GACxCG,GAAaC,WAAaF,GAAaE,WAAaJ,GAAYI,YAAa,EAE5GJ,GAAYlB,YAAW,GACvBY,GAAOnH,UACP2G,GAAI3G,UACJ4G,GAAK5G,UACL6G,GAAK7G,UAIL,IAuCI8H,GAvCEC,GAAc,SAACC,EAAMvO,EAAMpD,GAC/B,IAAI4R,EAAc,IAAI9H,IAAe,IAAM,IAAK,GAAK,IAAK,EAAI,KAC1D+H,EAAgB,IAAI/H,IAAe,IAAM,IAAK,IAAM,IAAK,GAAK,KAC9DgI,EAAe,IAAIhI,IAAe,EAAI,IAAK,GAAK,IAAK,IAAM,KAC3DiI,EAAgB,IAAIjI,IAAe,EAAI,IAAK,IAAM,IAAK,GAAK,KAEhE,OAAI5G,EAAQE,GAAMmL,UAAUhP,MAAMoS,GAAM3R,MAAMM,KAAKN,GAAS,EACnD+R,EAC4D,IAA1D7O,EAAQE,GAAMmL,UAAUhP,MAAMoS,GAAM3R,MAAMM,KAAKN,GACjD8R,GAC6D,IAA3D5O,EAAQE,GAAMmL,UAAUhP,MAAMoS,GAAM3R,MAAMM,KAAKN,GACjD6R,EACE3O,EAAQE,GAAMmL,UAAUhP,MAAMoS,GAAM3R,MAAMM,KAAKN,KAAW,EAC5D4R,OADF,GAKHI,GAAY,SAACC,GACjB,OAAyD,EAAlDA,EAAKC,kBAAkBC,YAAYC,WAAWhC,EAAQ6B,EAAK/C,QAAQkB,GAGtEiC,GAAW,SAACJ,GAChB,OAAyD,EAAlDA,EAAKC,kBAAkBC,YAAYC,WAAW/C,EAAQ4C,EAAK/C,QAAQG,GAGtEiD,GAAY,SAACL,GACjB,OAAyD,EAAlDA,EAAKC,kBAAkBC,YAAYC,WAAW1C,EAAQuC,EAAK/C,QAAQQ,GAGtE6C,GAAmB,SAAC9S,GACxB,OAAOyK,EAAgBsI,eAAeC,UAAU9N,QAAO,SAAA+N,GAAO,OAAIA,EAAQjT,OAASA,KAAM,IA9ZxC,SAiapCkT,GAjaoC,mFAianD,WAA4BC,EAAOC,GAAnC,eAAAhO,EAAA,sDACWiO,EAAQ,EADnB,YACsBA,EAAQF,EAAMG,QADpC,gCAEUF,EAASD,EAAME,GAAQA,EAAOF,GAFxC,OAC4CE,IAD5C,2DAjamD,sBAwanDhJ,IAAoBgF,WAClB,GADF,WA7ac,GA6ad,YAGE,iBACAzG,GACA,SAAU0G,IACR0C,GAAS3H,IAAakF,YAAYD,IAC3BG,QAAU,IAAIpF,IAAgB,EAAG,EAAG,IAC3C2H,GAAOvF,UAAUpC,IAAaqC,EAAG,GAAI9D,GACrCyC,EAAgBgF,eAAeC,WAAW3L,KAAKqN,IAC/CA,GAAO/M,GAAK,SACZ+M,GAAOhS,KAAO,SAEdgS,GAAOvB,YAAW,MActB,IA8CI8C,GAGAC,GAAqB,WACvB,GAAI/P,EAAQC,EAAcC,MAAMQ,OAASV,EAAQC,EAAcC,MAAMQ,MAAMmP,OAAS,EAAG,CACrF,IAAIG,EAAehQ,EAAQC,EAAcC,MAAMQ,MAAMuP,KAAI,SAAA7O,GAAI,OAAIA,EAAK2K,SAASI,KAC3E+D,EAA2C,cAAvBjQ,EAAcC,KAAuB8P,EAAaG,QAAQ3Q,KAAK4Q,IAAL,MAAA5Q,KAAI,YAAQwQ,KAAiBA,EAAaG,QAAQ3Q,KAAK6Q,IAAL,MAAA7Q,KAAI,YAAQwQ,KAC5IM,EAAetQ,EAAQC,EAAcC,MAAMQ,MAAMwP,GACjDK,EAAiB3J,IAAawB,aAAa,eAAgB,CAAEoI,KAAM,IAAMrL,GAC7EoL,EAAevD,YAAW,GAC1BuD,EAAexE,SAAW,IAAInF,IAAgB0J,EAAavE,SAASI,EAAGmE,EAAavE,SAASmB,EAAI,GAAI,GACrG9F,EAAOqJ,UAAUF,GACjBG,YAAW,WACTH,EAAe9J,YACd,QAIDkK,GAAkB,SAACC,EAAU1Q,EAAM0P,GACvChJ,IAAoBgF,WAClB,GADF,WAzgBY,GAygBZ,sBAGKgF,EAHL,YAIEzL,GACA,SAAU0G,GACR,IAAIzK,EAAOwF,IAAakF,YAAYD,GACpCzK,EAAK4H,UAAUpC,IAAaqC,EAAG,GAAI9D,GACnC/D,EAAK4H,UAAUpC,IAAa8F,EAAY,UAATxM,GAAoB,IAAM,IAAKiF,GAC9D/D,EAAK4H,UAAUpC,IAAa+F,EAAU,IAAMiD,EAAZ,IAAmBzK,GACnD/D,EAAKI,GAAL,UAAatB,EAAK2Q,cAAlB,eAAsCjB,EAAQ,GAC9CxO,EAAKqN,KAAOmC,EACZxP,EAAKlB,KAAL,cAAmBA,GACnBkB,EAAK1E,MAAQsD,EAAQoB,EAAKlB,MAAMmL,UAAUhP,MAAMuU,GAAUlU,MAC1D0E,EAAK7E,KAAOyD,EAAQoB,EAAKlB,MAAMmL,UAAUhP,MAAMuU,GAAUrU,KACzD6E,EAAK6L,SAASC,EAAa,UAAThN,EAAmB0G,IAAcS,WAAW,IAAMT,IAAcS,UAAU,IAC5FjG,EAAKqH,SAAWgB,EAChBrI,EAAK0P,cAAyB,UAAT5Q,EAAmBuL,EAAyBC,EACjEtK,EAAK2P,yBAA0B,EAE/B3P,EAAK0M,MAAQqB,GAAS/N,GACtBA,EAAKf,OAASyO,GAAU1N,GAtFX,SAACA,EAAMlB,GACxB,IAAI8Q,EAAOpK,IAAoBgC,eAApB,UAAsCxH,EAAKI,GAA3C,QAAqD,CAAEnB,OAAQ,IAAKgI,SAAU,GAAIQ,aAAc,KAAO1D,GAClH6L,EAAKvI,SAAW,IAAI7B,IAAJ,sBAA4CxF,EAAKI,IAAM2D,GACvE6L,EAAKvI,SAASiB,aAAwB,UAATxJ,EAAmB,IAAI0G,IAAeiD,MAAU,IAAIjD,IAAekD,MAChGkH,EAAKjF,SAAW,IAAInF,IAAgB,EAAG,IAAK,GAC5CoK,EAAKzD,OAASnM,EAmFV6P,CAAW7P,EAAMlB,GA/EL,SAACkB,EAAMlB,GACvB,IAAIgR,EAAUhD,GAAY5B,QAC1B4E,EAAQ1P,GAAR,UAAgBJ,EAAKI,GAArB,eACA0P,EAAQ3U,KAAR,UAAkB6E,EAAKI,GAAvB,eACA0P,EAAQ3D,OAASnM,EACjB8P,EAAQnF,SAAW,IAAInF,IAAgB,EAAG,EAAG,GAC7CsK,EAAQjE,SAASC,EAAItG,IAAcS,WAAW,IAC9C6J,EAAQlE,YAAW,GACnBkE,EAAQzI,SAAoB,UAATvI,EAAmBwK,EAAkBJ,EACxD4G,EAAQ3B,UAAU,GAAG9G,SAAoB,UAATvI,EAAmByK,EAAmBJ,EACtE2G,EAAQ3B,UAAU,GAAG9G,SAAoB,UAATvI,EAAmB0K,EAAmBJ,EAEzD,UAATtK,GACFkB,EAAK+P,OAAS,CAACzG,EAAgBnO,KAAMoO,EAAiBpO,KAAMqO,EAAiBrO,KAAMsO,EAAkBtO,MACrGmO,EAAgBhB,aAAe8E,GAAYpN,EAAKqN,KAAN,cAAmBvO,GAAQ,KACrEyK,EAAiBjB,aAAe8E,GAAYpN,EAAKqN,KAAN,cAAmBvO,GAAQ,KACtE0K,EAAiBlB,aAAe8E,GAAYpN,EAAKqN,KAAN,cAAmBvO,GAAQ,OAGtEkB,EAAK+P,OAAS,CAAC7G,EAAgB/N,KAAMgO,EAAiBhO,KAAMiO,EAAiBjO,KAAMkO,EAAkBlO,MACrG+N,EAAgBZ,aAAe8E,GAAYpN,EAAKqN,KAAN,cAAmBvO,GAAQ,KACrEqK,EAAiBb,aAAe8E,GAAYpN,EAAKqN,KAAN,cAAmBvO,GAAQ,KACtEsK,EAAiBd,aAAe8E,GAAYpN,EAAKqN,KAAN,cAAmBvO,GAAQ,MA0DpEkR,CAAUhQ,EAAMlB,GApDD,SAACkB,EAAMlB,GAC1B,IAAImR,EAAa9C,GAAOjC,MAAP,UAAgBlL,EAAKI,GAArB,WACjB6P,EAAW5I,SAAW,IAAI7B,IAAJ,wBAA8CxF,EAAKI,IAAM2D,GAC/EkM,EAAW5I,SAASiB,aAAwB,UAATxJ,EAAmB,IAAI0G,IAAeiD,MAAU,IAAIjD,IAAekD,MACtGuH,EAAW9D,OAASnM,EACpBiQ,EAAWtF,SAAW,IAAInF,IAAgB,EAAG,GAAI,GACjDyK,EAAWrE,YAAW,GA+ClBsE,CAAalQ,EAAMlB,GAGnB0H,EAAgBgF,eAAeC,WAAW3L,KAAKE,GAC/CN,EAAWK,gBAAgBC,EAA3B,cAAuClB,IACnCF,EAAQS,UAAUC,OAASV,EAAQS,UAAUC,MAAMmP,SAAW7P,EAAQS,UAAUpE,MAAMwT,QACxFE,SAON/P,EAAQa,UAAUxE,MAAMkV,SAAQ,SAACC,EAAU5B,GAAX,OAAqBe,GAAgBa,EAAU,QAAS5B,MACxF5P,EAAQS,UAAUpE,MAAMkV,SAAQ,SAACC,EAAU5B,GAAX,OAAqBe,GAAgBa,EAAU,QAAS5B,MAI1F,IAAI6B,GAAY,GAChB7K,IAAoBgF,WAClB,GADF,WArjBc,GAqjBd,YAGE,oBACAzG,GACA,SAAU0G,GACR,IAAI6F,EAAY9K,IAAakF,YAAYD,GAGzC6F,EAAU1F,QAAU,IAAIpF,IAAgB,EAAG,EAAG,GAC9C8K,EAAUlQ,GAAK,YACfkQ,EAAUnV,KAAO,WACjBmV,EAAUhJ,gBAAiB,EAE3BgJ,EAAU5D,MAAQqB,GAASuC,GAC3BA,EAAU7B,OAAST,GAAUsC,GAC7BA,EAAUrR,OAASyO,GAAU4C,GAE7B,IAAIC,EAAS,IAAI/K,IAAyBzB,GAC1CwM,EAAOjI,aAAe,IAAI9C,IAAe,KAAO,KAAO,MAEvD,IAAIgL,EAAU,IAAIhL,IAAyBzB,GAC3CyM,EAAQlI,aAAe,IAAI9C,IAAe,KAAO,KAAO,MAExD,IAAIiL,EAAW,IAAIjL,IAAyBzB,GAC5C0M,EAASnI,aAAe,IAAI9C,IAAe,KAAO,KAAO,KAEzD,IAAIkL,EAAaJ,EAAUpF,MAAM,YACjCwF,EAAW/F,SAAW,IAAInF,IAAgB,GAAI,EAAG,KACjD,IAAImL,EAAaL,EAAUpF,MAAM,YACjCyF,EAAWhG,SAAW,IAAInF,KAAiB,GAAI,EAAG,KAElD,IAAIoL,EAAcpL,IAAakF,YAAY,CAACgG,EAAYC,IACxDC,EAAYvJ,SAAWkJ,EACvBK,EAAYzV,KAAOyV,EAAYxQ,GAAK,WACpCwQ,EAAYjG,SAAW,IAAInF,IAAgB,IAAK,GAAI,KACpDkL,EAAWrL,UACXsL,EAAWtL,UAEX,IAAIwL,EAAaP,EAAUpF,MAAM,YACjC2F,EAAWlG,SAAW,IAAInF,IAAgB,IAAK,IAAK,KACpDqL,EAAWxJ,SAAWkJ,EAEtB,IAAIO,EAAaR,EAAUpF,MAAM,YACjC4F,EAAWnG,SAAW,IAAInF,IAAgB,IAAK,IAAK,KAEpD,IAAIuL,EAAaT,EAAUpF,MAAM,YACjC6F,EAAWpG,SAAW,IAAInF,KAAiB,IAAK,GAAI,KAEpD,IAAIwL,EAAaV,EAAUpF,MAAM,YACjC8F,EAAWrG,SAAW,IAAInF,KAAiB,IAAK,GAAI,KACpDwL,EAAW3J,SAAWkJ,EAEtB,IAAIU,EAAaX,EAAUpF,MAAM,YACjC+F,EAAWtG,SAAW,IAAInF,IAAgB,GAAI,EAAG,KAEjD,IAAI0L,EAAaZ,EAAUpF,MAAM,YACjCgG,EAAWvG,SAAW,IAAInF,KAAiB,GAAI,EAAG,KAElD,IAAI2L,EAAc3L,IAAakF,YAAY,CAACuG,EAAYC,IACxDC,EAAY9J,SAAWoJ,EACvBU,EAAYhW,KAAOgW,EAAY/Q,GAAK,WACpC+Q,EAAYxG,SAAW,IAAInF,KAAiB,IAAK,IAAK,KACtDyL,EAAW5L,UACX6L,EAAW7L,UAEX,IAAI+L,EAAad,EAAUpF,MAAM,YACjCkG,EAAWzG,SAAW,IAAInF,KAAiB,IAAK,KAAM,KACtD4L,EAAWxG,QAAQQ,EAAI,EAEvB,IAAIiG,EAAcf,EAAUpF,MAAM,YAClCmG,EAAY1G,SAAW,IAAInF,IAAgB,IAAK,IAAK,KACrD6L,EAAYzG,QAAQQ,EAAI,EACxBiG,EAAYhK,SAAWmJ,EAEvB,IAAIc,EAAchB,EAAUpF,MAAM,YAClCoG,EAAY3G,SAAW,IAAInF,IAAgB,IAAK,GAAI,KACpD8L,EAAY1G,QAAQQ,EAAI,EACxBkG,EAAY1G,QAAQkB,EAAI,EACxBwF,EAAYjK,SAAWoJ,EAEvB,IAAIc,EAAcjB,EAAUpF,MAAM,YAClCqG,EAAY5G,SAAW,IAAInF,KAAiB,IAAK,IAAK,KACtD+L,EAAY3G,QAAQQ,EAAI,EACxBmG,EAAY3G,QAAQkB,EAAI,EACxByF,EAAYlK,SAAWkJ,EAEvB/J,EAAgBgF,eAAeC,WAAW3L,KAAK8Q,EAAaC,EAAYC,EAAYC,EAAYC,EAAYG,EAAaC,EAAYC,EAAaC,EAAaC,GAC/JlB,GAAUvQ,KAAK8Q,EAAaC,EAAYC,EAAYC,EAAYC,EAAYG,EAAaC,EAAYC,EAAaC,EAAaC,GAE/HjB,EAAU1E,YAAW,MAIzB,IAAI4F,GAAWhM,IAAoBgC,eAAe,WAAY,CAAEvI,OAAQ,IAAMgI,SAAUwK,IAAehK,aAAc,KAAO1D,GAC5HyN,GAASnK,SAAWT,EACpB4K,GAAS9B,cAAgBtF,EACzBoH,GAAS5F,YAAW,GACpB4F,GAAS7G,SAAW,IAAInF,IAAgB,EAAG,GAAI,GAE/C,IAIIkM,GACA7C,GALA8C,GAAYnM,IAAoBgC,eAAe,WAAY,CAAEvI,OAAQ,IAAMgI,SAAUwK,OAA2BhK,aAAc,KAAO1D,GACzI4N,GAAUtK,SAAW0B,EACrB4I,GAAUxF,OAASqF,GAInBhM,IAAoBgF,WAClB,GACA,GAFF,WA/pBc,GA+pBd,2BAIEzG,GACA,SAAU0G,IACRiH,GAAQjH,EAAU,IACZG,QAAU,IAAIpF,IAAgB,KAAM,KAAM,KAChDkM,GAAMrK,SAAWU,EACjBvB,EAAgBgF,eAAeC,WAAW3L,KAAK4R,KAE/C7C,GAAMrJ,IAAoBiH,UAAU,MAAO,CAAEC,MAAO,IAAKzN,OAAQ,IAAK0N,MAAO,GAAK5I,IAC9EgI,OAAOvG,IAAa8F,EAAG9F,IAAcS,UAAU,IAAKlC,GACxD8K,GAAIxH,SAAWc,EACf0G,GAAIvH,gBAAiB,EACrBuH,GAAIjH,UAAUpC,IAAaqC,EAAG,GAAI9D,GAClC8K,GAAIa,cAAgBvF,KAMxB,IAAIyH,GAAe,WACU,cAAvB/S,EAAcC,MAChBD,EAAcC,KAAO,YACrBkH,EAAO2E,SAAW,IAAInF,KAAiB,IAAK,IAAK,GACjDmJ,MACgC,cAAvB9P,EAAcC,OACvBD,EAAcC,KAAO,YACrBkH,EAAO2E,SAAW,IAAInF,IAAgB,IAAK,IAAK,GAChDmJ,MAEFpE,IACA7K,EAAWC,iBAAiB,CAACxE,KAAM0D,EAAc1D,KAAM2D,KAAMD,EAAcC,QAIzE+S,GAAW,GACXC,GAAU,GACVC,IAAW,EACXhG,IAAS,EACTiG,GAAW,CACbrH,SAAU,KACVkB,SAAU,MAGNoG,GAAkB,WACtBH,GAAQ3B,SAAQ,SAAA+B,GACdxL,EAAGyL,WAAWD,GACVnO,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,aAAuC8R,EAAO9R,MAChD2D,EAAMoO,WAAWpO,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,aAAuC8R,EAAO9R,SAGnE0R,GAAU,GACN/N,EAAMqO,cAAc,cACtBrO,EAAMqO,cAAc,aAAa/M,UAEnCzG,EAAQsL,EAAYpL,MAAMQ,MAAM6Q,SAAQ,SAAAnQ,GAClC+D,EAAMqO,cAAN,UAAuBpS,EAAKI,GAA5B,aAAmCyR,GAASzR,MAC9C2D,EAAMoO,WAAWpO,EAAMqO,cAAN,UAAuBpS,EAAKI,GAA5B,aAAmCyR,GAASzR,MAE/DiS,GAAerS,GACfA,EAAKsS,aAAe,KAEtB1M,EAAgB2M,cAAcC,KAG5BC,GAAY,SAAUC,GAExB,GAA8B,IAA1BA,EAAIC,YAAYC,MAAa,CAC/B,IAAIC,EAAcH,EAAII,iBACtB/O,EAAMgP,YAAc,UAChBlB,KAAagB,EACQ,IAAnBf,GAAQrD,QACVuE,GAAW,CAAEC,MAAM,IAGZJ,EAAYzS,GAAG8S,SAAS,UAC7BrB,IACFnL,EAAGyL,WAAWN,IAEZhT,EAAcW,YAAc,IAC9ByS,KACAvL,EAAGyM,QAAQN,EAAarN,IAAekD,SACvChC,EAAGyM,QAAQ3B,GAAUhM,IAAekD,SACpCmJ,GAAWgB,EACXb,GAASrH,SAAWkH,GAASlH,SAC7B6G,GAAS7G,SAAW,IAAInF,IAAgBqN,EAAYlI,SAASI,EAAG,GAAI8H,EAAYlI,SAASS,GACzFoG,GAAS5F,YAAW,OAMxBwH,GAAkB,WAChBvB,IAAY9F,KAAWgG,IACrBC,GAASrH,WACXkH,GAASlH,SAAWqH,GAASrH,SAC7BkH,GAAShG,SAAWmG,GAASnG,SAC7B2F,GAAS5F,YAAW,GACpB4F,GAAS7G,SAAW,IAAInF,IAAgBwM,GAASrH,SAASI,EAAG,GAAIiH,GAASrH,SAASS,GACnFrH,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiDwL,YAAW,GACxD7H,EAAMqO,cAAN,mBAAgCP,GAASzR,MAC3C2D,EAAMqO,cAAN,mBAAgCP,GAASzR,KAAMwL,YAAW,IAG9DlG,EAAOpB,oBAAoB,YAAa+O,IACxCtH,IAAS,GACA8F,KAAa9F,KACtByF,GAAS5F,YAAW,GACpBlF,EAAGyL,WAAWN,IACdnL,EAAGyL,WAAWX,IACdS,KACAlO,EAAMoO,WAAWzD,IACjB3K,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiDwL,YAAW,GACxD7H,EAAMqO,cAAN,mBAAgCP,GAASzR,MAC3C2D,EAAMqO,cAAN,mBAAgCP,GAASzR,KAAMwL,YAAW,GAE5D+C,KACAkD,GAAW,GACX9N,EAAMgP,YAAc,UAChBrE,IACFA,GAAWrJ,YAqCXiO,GAAY,SAACC,EAAOC,GACxB,IAAIC,EAAa,IAAIjO,IAAgB+N,EAAM5I,SAASI,EAAGwI,EAAM5I,SAASmB,EAAI,EAAGyH,EAAM5I,SAASS,EAAImI,EAAM7G,MAAQ,GAC1GgH,EAAc,IAAIlO,IAAgB+N,EAAM5I,SAASI,EAAGwI,EAAM5I,SAASmB,EAAI,EAAGyH,EAAM5I,SAASS,EAAImI,EAAM7G,MAAQ,GAE3GwF,EAAS,IAAI1M,IAAgBgO,EAAM7I,SAASI,EAAGyI,EAAM7I,SAASmB,EAAI,EAAG0H,EAAM7I,SAASS,GAEpFuI,EAAgBzB,EAAOrF,SAAS4G,GACpCE,EAAgBnO,IAAgBoO,UAAUD,GAE1C,IAAIE,EAAiB3B,EAAOrF,SAAS6G,GACrCG,EAAiBrO,IAAgBoO,UAAUC,GAE3C,IAAIpF,EAASV,GAASwF,GAAS,EAAIxF,GAASwF,GAExCO,EAAU,IAAItO,IAAYiO,EAAYE,EAAelF,GACrDsF,EAAW,IAAIvO,IAAYkO,EAAaG,EAAgBpF,GAOxDuF,EAAWjQ,EAAMkQ,iBAAiBH,GAClCI,EAAYnQ,EAAMkQ,iBAAiBF,GAEvC,QAAIC,EAASG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,kBAE3CgB,EAAUC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,gBAO1DoB,GAAY,SAACf,EAAOC,GAExB,IAAIe,EAAUC,GAAiBjB,GAE3BkB,EAAS,IAAIjP,IAAgB+N,EAAM5I,SAASI,EAAG,GAAIwI,EAAM5I,SAASS,GAIlEsJ,EAFS,IAAIlP,IAAgBgO,EAAM7I,SAASI,EAAG,GAAIyI,EAAM7I,SAASS,GAEzCyB,SAAS4H,GAGtC,OAFAC,EAAkBlP,IAAgBoO,UAAUc,KAEmB,IAA3DtW,KAAKuW,KAAKnP,IAAgBoP,IAAIL,EAASG,IAA0BtW,KAAKyW,GAAK,KAe3EC,GAAmB,SAAC9U,GACxB,IAAIyU,EAAS,IAAIjP,IAAgBxF,EAAK2K,SAASI,EAAG/K,EAAK2K,SAASmB,EAAG9L,EAAK2K,SAASS,EAAI2C,GAAS/N,GAAQ,GAClG+U,EAAU,IAAIvP,IAAgBxF,EAAK2K,SAASI,EAAG/K,EAAK2K,SAASmB,EAAG9L,EAAK2K,SAASS,EAAI2C,GAAS/N,GAAQ,GACnGgV,EAAU,IAAIxP,IAAgBxF,EAAK2K,SAASI,EAAIgD,GAAS/N,GAAQ,EAAGA,EAAK2K,SAASmB,EAAG9L,EAAK2K,SAASS,GACnG6J,EAAU,IAAIzP,IAAgBxF,EAAK2K,SAASI,EAAIgD,GAAS/N,GAAQ,EAAGA,EAAK2K,SAASmB,EAAG9L,EAAK2K,SAASS,GAEnG8J,EAAY,IAAI1P,IAAgB,GAAI,EAAG,GAEvCiJ,EAASf,GAAU1N,GAAQ,EAE3BmV,EAAM,IAAI3P,IAAYiP,EAAQS,EAAWzG,GACzC2G,EAAO,IAAI5P,IAAYuP,EAASG,EAAWzG,GAC3C4G,EAAO,IAAI7P,IAAYwP,EAASE,EAAWzG,GAC3C6G,EAAO,IAAI9P,IAAYyP,EAASC,EAAWzG,GAE3C8G,EAAOxR,EAAMkQ,iBAAiBkB,GAC9BK,EAAQzR,EAAMkQ,iBAAiBmB,GAC/BK,EAAQ1R,EAAMkQ,iBAAiBoB,GAC/BK,EAAQ3R,EAAMkQ,iBAAiBqB,GAEnC,OAAIC,EAAKpB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,eACzCqC,EAAKlV,QAAO,SAAA+T,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,eAAarE,KAAI,SAAAuF,GAAG,OAAIA,EAAIC,cAAY,GACtFmB,EAAMrB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,eACjDsC,EAAMnV,QAAO,SAAA+T,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,eAAarE,KAAI,SAAAuF,GAAG,OAAIA,EAAIC,cAAY,GACvFoB,EAAMtB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,eACjDuC,EAAMpV,QAAO,SAAA+T,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,eAAarE,KAAI,SAAAuF,GAAG,OAAIA,EAAIC,cAAY,GACvFqB,EAAMvB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,eACjDwC,EAAMrV,QAAO,SAAA+T,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,eAAarE,KAAI,SAAAuF,GAAG,OAAIA,EAAIC,cAAY,GACvFkB,EAAKpB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,UAChDqC,EAAKlV,QAAO,SAAA+T,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,UAAQrE,KAAI,SAAAuF,GAAG,OAAIA,EAAIC,cAAY,QADrF,GAsBLsB,GAAkB,SAAC3V,GACjB+D,EAAMqO,cAAN,UAAuBpS,EAAKI,GAA5B,YACF2D,EAAMqO,cAAN,UAAuBpS,EAAKI,GAA5B,WAAwCwL,YAAW,IAInDgK,GAAoB,SAACC,GACvB,IAxBqBtC,EAAOC,EAwBxBsC,EAAcD,EAAG/C,iBACjBjB,IAAYkE,GAAclE,GAAUiE,IAAgBE,GAAiBnE,GAAUiE,IAAgB,IAxB/FxC,GADiBC,EA0BH1B,GA1BU2B,EA0BAsC,GAxB1B/R,EAAMqO,cAAN,UAAuBmB,EAAMnT,GAA7B,WAAyCwL,YAAW,GAEhD7H,EAAMqO,cAAN,UAAuBmB,EAAMnT,GAA7B,YACF2D,EAAMqO,cAAN,UAAuBmB,EAAMnT,GAA7B,WAAyCwL,YAAW,GAGpD0H,GAAUE,EAAOD,GACnBxP,EAAMqO,cAAN,UAAuBoB,EAAMpT,GAA7B,WAAyCwL,YAAW,GAEhD7H,EAAMqO,cAAN,UAAuBoB,EAAMpT,GAA7B,YACF2D,EAAMqO,cAAN,UAAuBoB,EAAMpT,GAA7B,WAAyCwL,YAAW,GAelDkK,EAAYG,eAAepE,IAAU,KAI9BkE,GAAclE,GAAUiE,IACjC/R,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiDwL,YAAW,GACxD7H,EAAMqO,cAAN,mBAAgCP,GAASzR,MAC3C2D,EAAMqO,cAAN,mBAAgCP,GAASzR,KAAMwL,YAAW,GAE5D4F,GAAS5F,YAAW,IAIVkK,EAAYG,eAAepE,IAAU,IAAWkE,GAAclE,GAAUiE,KAElFtE,GAAS5F,YAAW,GACpB7H,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiDwL,YAAW,GACxD7H,EAAMqO,cAAN,mBAAgCP,GAASzR,MAC3C2D,EAAMqO,cAAN,mBAAgCP,GAASzR,KAAMwL,YAAW,OAM9DsK,GAAoB,WAClBrE,KACF9N,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiDwL,YAAW,GAC5D7H,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,WAA4CwL,YAAW,GACvDhN,EAAQsL,EAAYpL,MAAMQ,MAAM6Q,SAAQ,SAAAnQ,GAAI,OAAI+D,EAAMqO,cAAN,UAAuBpS,EAAKI,GAA5B,gBAA6CwL,YAAW,MACpG7H,EAAMqO,cAAN,mBAAgCP,GAASzR,MAC3C2D,EAAMqO,cAAN,mBAAgCP,GAASzR,KAAMwL,YAAW,GAEvDG,IAA6B,IAAnB+F,GAAQrD,QACrB+C,GAAS5F,YAAW,GAEtB+J,GAAgB9D,IAChBjT,EAAQsL,EAAYpL,MAAMQ,MAAM6Q,SAAQ,SAAAnQ,GACtC2V,GAAgB3V,OAGpB+D,EAAMgP,YAAc,WAGlBoD,GAAW,SAACC,GAEd,IADA,IAAIC,EAAc,GACTC,EAAI,EAAGA,EAAIF,EAAOE,IACzBD,EAAYvW,KAAK1B,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,GAGnD,OAAO+X,GAGLE,GAAY,SAACH,EAAOpW,EAAMwW,EAAOC,GAcnC,IAbA,IAAIC,EAAgB,IAAIlR,IAAgBxF,EAAK2K,SAASI,EAAI,GAAI/K,EAAK2K,SAASmB,EAAI,EAAG9L,EAAK2K,SAASS,EAAI,IACjGuL,EAAgB,IAAInR,IAAgBxF,EAAK2K,SAASI,EAAI,GAAI/K,EAAK2K,SAASmB,EAAI,EAAG9L,EAAK2K,SAASS,EAAI,IACjGwL,EAAgB,IAAIpR,IAAgBxF,EAAK2K,SAASI,GAAK,EAAG/K,EAAK2K,SAASmB,EAAI,EAAG9L,EAAK2K,SAASS,EAAI,IACjGyL,EAAmB,IAAIrR,IAAgBxF,EAAK2K,SAASI,GAAK,EAAG/K,EAAK2K,SAASmB,EAAI,EAAG9L,EAAK2K,SAASS,EAAI,MAEpG0L,EAAgB,IAAItR,IAAgBxF,EAAK2K,SAASI,GAAK,EAAG/K,EAAK2K,SAASmB,EAAI,EAAG9L,EAAK2K,SAASS,EAAI,IACjG2L,EAAgB,IAAIvR,IAAgBxF,EAAK2K,SAASI,GAAK,GAAI/K,EAAK2K,SAASmB,EAAI,EAAG9L,EAAK2K,SAASS,EAAI,IAClG4L,EAAmB,IAAIxR,IAAgBxF,EAAK2K,SAASI,GAAK,GAAI/K,EAAK2K,SAASmB,EAAI,EAAG9L,EAAK2K,SAASS,EAAI,MAIrG6L,EAAgB,CAACP,EAAeC,EAAeC,EAAeE,EAAeC,EAF7D,IAAIvR,IAAgBxF,EAAK2K,SAASI,GAAK,GAAI/K,EAAK2K,SAASmB,EAAI,EAAG9L,EAAK2K,SAASS,EAAI,KAV1D,WAcnCkL,GACHY,EAAYZ,EAAI,EAChBG,EACFpL,GAAK+K,EAAME,GAAK,GAAGjP,SAAWwB,EACrB7I,EAAKlB,KAAKoU,SAAS,SAC5B7H,GAAK+K,EAAME,GAAK,GAAGjP,SAAWsB,EACrB3I,EAAKlB,KAAKoU,SAAS,WAC5B7H,GAAK+K,EAAME,GAAK,GAAGjP,SAAWuB,GAGX,IAAjBwN,EAAM3H,QAA8B,IAAdyI,EACxB7L,GAAK+K,EAAME,GAAK,GAAGpL,MAAnB,mBAAqCoL,IAAK3L,SAAWkM,EAC3B,IAAjBT,EAAM3H,QAA8B,IAAdyI,EAC/B7L,GAAK+K,EAAME,GAAK,GAAGpL,MAAnB,mBAAqCoL,IAAK3L,SAAWqM,EAErD3L,GAAK+K,EAAME,GAAK,GAAGpL,MAAnB,mBAAqCoL,IAAK3L,SAAWsM,EAAcX,GAGrEhH,YAAW,WACTvL,EAAMoO,WAAWpO,EAAMqO,cAAN,mBAAgCkE,OAChDE,IApBIF,EAAI,EAAGA,EAAIF,EAAM3H,OAAQ6H,IAAK,CAAC,IAClCY,EADiC,EAA9BZ,KAwBPa,GAAe,SAAC5D,EAAO6D,EAAYC,EAAU7D,EAAO8D,EAAYC,GAElE,IAAIC,EAAeJ,EAAW/W,QAAO,SAAAvE,GAAI,OAAIA,EAAOub,GAAYzY,EAAQ2U,EAAMzU,MAAMmL,UAAUhP,MAAMsY,EAAMlG,MAAM3R,MAAMK,WAClH0b,EAAeH,EAAWjX,QAAO,SAAAvE,GAAI,OAAIA,EAAOyb,GAAY3Y,EAAQ4U,EAAM1U,MAAMmL,UAAUhP,MAAMuY,EAAMnG,MAAMxR,QAAQE,WAExH2D,EAAWE,IAAX,UAAkBf,EAAc1D,KAAhC,kBAA8Cic,EAAWM,WAAzD,iBAAyF,IAAbL,EAAiB,KAAOA,EAAW,EAAX,cAAsBA,GAAtB,YAAwCA,GAA5I,4BAEIG,EAAa/I,OAAS,EACxB/O,EAAWE,IAAX,UAAkBf,EAAc1D,KAAhC,sBAAkDqc,EAAa/I,OAAS,EAAI,YAAc,UAA1F,YAAuG+I,EAAaE,WAApH,MAEAhY,EAAWE,IAAX,UAAkBf,EAAc1D,KAAhC,8BAGFuE,EAAWE,IAAX,UAAkBsK,EAAY/O,KAA9B,kBAA4Cmc,EAAWI,WAAvD,iBAAuF,IAAbH,EAAiB,KAAOA,EAAW,EAAX,cAAsBA,GAAtB,YAAwCA,GAA1I,4BAEIE,EAAahJ,OAAS,EACxB/O,EAAWE,IAAX,UAAkBsK,EAAY/O,KAA9B,sBAAgDsc,EAAahJ,OAAS,EAAI,YAAc,UAAxF,YAAqGgJ,EAAaC,WAAlH,MAEAhY,EAAWE,IAAX,UAAkBsK,EAAY/O,KAA9B,8BAIF,IAAK,IAAImb,EAAI,EAAGA,EAAIkB,EAAa/I,OAAQ6H,IACvC,IAAK,IAAIqB,EAAI,EAAGA,EAAIF,EAAahJ,OAAQkJ,IACnCH,EAAalB,KAAOmB,EAAaE,KACnCH,EAAaI,OAAOtB,EAAG,GACvBmB,EAAaG,OAAOD,EAAG,IAK7B,OAAIvZ,KAAK6Q,IAAL,MAAA7Q,KAAI,YAAQoZ,IAAgBpZ,KAAK6Q,IAAL,MAAA7Q,KAAI,YAAQqZ,KAE1C/X,EAAWE,IAAX,UAAkBf,EAAc1D,KAAhC,8BACOoY,EAAMnT,IACJhC,KAAK6Q,IAAL,MAAA7Q,KAAI,YAAQqZ,IAAgBrZ,KAAK6Q,IAAL,MAAA7Q,KAAI,YAAQoZ,KACjD9X,EAAWE,IAAX,UAAkBsK,EAAY/O,KAA9B,8BACOqY,EAAMpT,IAGN,MAIP2V,GAAgB,SAACxC,EAAOC,GAC1B,IAAIqE,EAEAC,EAAWtS,IAAgBuS,SAASxE,EAAM5I,SAAU6I,EAAM7I,UAAY6I,EAAM9G,MAAQ,EACpFsL,EAAgBpZ,EAAQ2U,EAAMzU,MAAMmL,UAAUhP,MAAMsY,EAAMlG,MAAMhR,SAsBpE,OApBIyb,GAAYvE,EAAM7G,MAAQ,EAAI8G,EAAM9G,MAAQ,EAC9CmL,EAAc,IAELC,GAAY,IACrBD,EAAc,IAELC,EAAW,KAAOA,GAAY,IACvCD,EAAc,IAELC,EAAW,KAAOA,GAAY,IACvCD,EAAc,IAELC,EAAW,KAAOA,GAAYE,EACvCH,EAAc,KACLC,EAAWE,IACpBH,EAAc,MAnTC,SAACtE,EAAOC,GACzB,IAAIiB,EAAS,IAAIjP,IAAgB+N,EAAM5I,SAASI,EAAGwI,EAAM5I,SAASmB,EAAuB,IAAnB4B,GAAU6F,GAAeA,EAAM5I,SAASS,GAE1G6M,EAAa,IAAIzS,IAAgBgO,EAAM7I,SAASI,EAAGyI,EAAM7I,SAASmB,EAAuB,IAAnB4B,GAAU8F,GAAeA,EAAM7I,SAASS,EAAIoI,EAAM9G,MAAQ,EAAkB,IAAd8G,EAAM9G,OAC1IwL,EAAc,IAAI1S,IAAgBgO,EAAM7I,SAASI,EAAGyI,EAAM7I,SAASmB,EAAuB,IAAnB4B,GAAU8F,GAAeA,EAAM7I,SAASS,EAAIoI,EAAM9G,MAAQ,EAAkB,IAAd8G,EAAM9G,OAE3IiH,EAAgBsE,EAAWpL,SAAS4H,GACxCd,EAAgBnO,IAAgBoO,UAAUD,GAE1C,IAAIE,EAAiBqE,EAAYrL,SAAS4H,GAC1CZ,EAAiBrO,IAAgBoO,UAAUC,GAE3C,IAAIpF,EAASjJ,IAAgBuS,SAASxE,EAAM5I,SAAU6I,EAAM7I,UAAYoD,GAASyF,GAAS,EAEtFM,EAAU,IAAItO,IAAYiP,EAAQd,EAAelF,GACjDsF,EAAW,IAAIvO,IAAYiP,EAAQZ,EAAgBpF,GAOnDuF,EAAWjQ,EAAMkQ,iBAAiBH,GAClCI,EAAYnQ,EAAMkQ,iBAAiBF,GAEvC,OAAIC,EAASG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,iBAAgBgB,EAAUC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAWlZ,KAAK+X,SAAS,eA+RrHiF,CAAW5E,EAAOC,IAAUc,GAAUf,EAAOC,GACxCqE,EAEA,MAIPO,GAAgB,WAClB,IAAIC,EAAS,GAcb,OAbuC,IAAnCzZ,EAAQa,UAAUF,cAAyD,IAAnCX,EAAQS,UAAUE,cAC5D8Y,EAAS,KACT3Y,EAAWE,IAAX,iDAC4C,IAAnChB,EAAQa,UAAUF,cAC3B8Y,EAAS,aACT3Y,EAAWE,IAAX,qBAA6BhB,EAAQS,UAAUlE,KAA/C,YAC4C,IAAnCyD,EAAQS,UAAUE,cAC3B8Y,EAAS,aACT3Y,EAAWE,IAAX,qBAA6BhB,EAAQa,UAAUtE,KAA/C,YAEAkd,OAAS9b,EAGJ8b,GAGLC,GAAU,SAAC/E,EAAOC,GACpB,IAAI9X,EAAQqa,GAAcxC,EAAOC,GAC7B+E,EA/PW,SAAChF,EAAOC,GACvB,OAAID,EAAM5I,SAASmB,EAAI0H,EAAM7I,SAASmB,EAAI4B,GAAU8F,GA8PpCgF,CAASjF,EAAOC,GAAS,EAAI,EAG7C,OAFeF,GAAUE,EAAOD,IAAU,EAAI,GACxBgF,EAAY3Z,EAAQ2U,EAAMzU,MAAMmL,UAAUhP,MAAMsY,EAAMlG,MAAM3R,MAAMM,KAAKN,IAI3F+c,GAAW,SAAClF,EAAOC,EAAOrS,GAC5B,IAAIkX,EAAS,GACb,GAAI9E,EAAO,CACT,IAAI7X,EAAQqa,GAAcxC,EAAOC,GAC7BkF,EAAgBpF,GAAUC,EAAOC,GAAS,EAAI,EAC9CmF,EAAYL,GAAQ/E,EAAOC,GAE3BoF,EAAgBtF,GAAUE,EAAOD,GAAS,EAAI,EAC9CsF,EAAYP,GAAQ9E,EAAOD,GAE/B,GAAI7X,GAAS4Y,GAAUf,EAAOC,GAAQ,CACpC,GAAIA,EAAMyC,eAAe1C,GAAO,IAAoB,MAAV7X,EAAe,CAEvDgE,EAAWE,IAAX,8BAAsC2T,EAAMpY,KAA5C,mBAA2DqY,EAAMrY,KAAjE,MACAuE,EAAWE,IAAX,UAAkBf,EAAc1D,KAAhC,6BAAyD0D,EAAcxD,KAAKJ,MAAMsY,EAAMlG,MAAM1R,MAAMI,QAApG,OACA,IAAI+c,EAAY3C,GAAStX,EAAcxD,KAAKJ,MAAMsY,EAAMlG,MAAM1R,MAAMG,MAGpEya,GAAUuC,EAAWvF,EAAO,KAE5B7T,EAAWE,IAAX,UAAkBsK,EAAY/O,KAA9B,6BAAuD+O,EAAY7O,KAAKJ,MAAMsY,EAAMlG,MAAM1R,MAAMI,QAAhG,OACA,IAAIgd,EAAiB5C,GAAS,GAE9BI,GAAUwC,EAAgBvF,EAAO,KAEjC6E,EAASlB,GAAa5D,EAAOuF,EAAW,EAAGtF,EAAOuF,EAAgB,OAE7D,CAEL,IAAI3B,EAAa,GACb4B,EAAa,GACb1B,EAAa,GAEjB5X,EAAWE,IAAX,UAAkBhB,EAAQ2U,EAAMzU,MAAM3D,KAAtC,4BAA8DqY,EAAMrY,MAApE,OAA2EgG,EAAU,eAAiB,GAAtG,qBAAqHoS,EAAMpY,KAA3H,qBAA4IO,EAAMud,cAAlJ,MACAvZ,EAAWE,IAAX,UAAkBhB,EAAQ2U,EAAMzU,MAAM3D,KAAtC,6BAA+D0D,EAAcxD,KAAKJ,MAAMsY,EAAMlG,MAAM3R,MAAMK,QAA1G,OAMEqb,EAAajB,GAHVhV,EAGmB,EAFAqS,EAAMlB,cAM9BiE,GAAUa,EAAY7D,EAAO,KAE7ByF,EAAa5B,EAAWvI,KAAI,SAAA/S,GAAI,OAAIA,EAAO6c,KAGvC5C,GAAcvC,EAAOD,KAAWpS,IAClCzB,EAAWE,IAAX,UAAkBsK,EAAY/O,KAA9B,6BAAuD+O,EAAY7O,KAAKJ,MAAMuY,EAAMnG,MAAMxR,QAAQE,QAAlG,OAEAub,EAAanB,GAAS,GAEtBI,GAAUe,EAAY9D,EAAO,KAE7B6E,EAASlB,GAAa5D,EAAO6D,EAAYuB,EAAWnF,EAAO8D,EAAYuB,IAIpER,GACCW,EAAW7E,MAAK,SAAArY,GAAI,OAAIA,GAAQ+C,EAAcxD,KAAKJ,MAAMsY,EAAMlG,MAAM3R,MAAMK,aACxEoF,EAGHzB,EAAWE,IAAX,UAAkBsK,EAAY/O,KAA9B,kBAA4Cic,EAAWM,WAAvD,2BAAoFlE,EAAMrY,KAA1F,eAFAuE,EAAWE,IAAX,UAAkBf,EAAc1D,KAAhC,kBAA8Cic,EAAWM,WAAzD,+CAA0GlE,EAAMrY,KAAhH,MAIFkd,EAAS9E,EAAMnT,IAMrB,GAAIiY,IAAW9E,EAAMnT,GAAI,CACvBV,EAAWE,IAAX,UAAkBhB,EAAQ4U,EAAM1U,MAAM3D,KAAtC,cAAgDqY,EAAMrY,KAAtD,2CAA6FyD,EAAQ4U,EAAM1U,MAAMmL,UAAUhP,MAAMuY,EAAMnG,MAAMxR,QAAQE,QAArJ,MAEI6c,EAAgB,GAClBlZ,EAAWE,IAAX,UAAkBhB,EAAQ4U,EAAM1U,MAAM3D,KAAtC,oCAAsEqY,EAAMpT,GAA5E,wBAEF,IAAI8Y,EAAc/C,GAASvX,EAAQ4U,EAAM1U,MAAMmL,UAAUhP,MAAMuY,EAAMnG,MAAMxR,QAAQC,MACnF4D,EAAWE,IAAX,UAAkBhB,EAAQ4U,EAAM1U,MAAM3D,KAAtC,kBAAoD+d,EAAYxB,WAAhE,MAEApI,YAAW,WACTiH,GAAU2C,EAAa1F,EAAO,MAAM,KACnC,MAEC0F,EAAY/E,MAAK,SAAArY,GAAI,OAAIA,EAAO8c,GAAiBha,EAAQ4U,EAAM1U,MAAMmL,UAAUhP,MAAMuY,EAAMnG,MAAMxR,QAAQE,WAC3G2D,EAAWE,IAAX,uCAA+C4T,EAAMrY,KAArD,gBAEAuE,EAAWE,IAAX,cAAsB4T,EAAMrY,KAA5B,gBACAmU,YAAW,WACTkE,EAAM7I,SAAW,IAAInF,IAAgBpH,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,IAAK,GAAI,IAAMF,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IACvHkV,EAAMrY,KAAO,QACbqY,EAAMtG,YAAa,EACfnJ,EAAMqO,cAAN,UAAuBoB,EAAMpT,GAA7B,aAAoCmT,EAAMnT,MAC5C2D,EAAMoO,WAAWpO,EAAMqO,cAAN,UAAuBoB,EAAMpT,GAA7B,aAAoCmT,EAAMnT,MAE7DV,EAAWS,iBAAiBqT,EAAMpT,GAAIoT,EAAM1U,MAC5C6W,GAAgBnC,GAChB2F,GAAY3F,GACRrS,GACFiS,OAED,YAEA,GAAIiF,IAAW7E,EAAMpT,GAAI,CAC9BV,EAAWE,IAAX,UAAkBhB,EAAQ2U,EAAMzU,MAAM3D,KAAtC,cAAgDoY,EAAMpY,KAAtD,2CAA6FyD,EAAQ4U,EAAM1U,MAAMmL,UAAUhP,MAAMuY,EAAMnG,MAAMxR,QAAQE,QAArJ,MACI2c,EAAgB,GAClBhZ,EAAWE,IAAX,UAAkBhB,EAAQ2U,EAAMzU,MAAM3D,KAAtC,wCAA0EoY,EAAMpY,KAAhF,wBAEF,IAAI+d,EAAc/C,GAASvX,EAAQ2U,EAAMzU,MAAMmL,UAAUhP,MAAMsY,EAAMlG,MAAMxR,QAAQC,MACnF4D,EAAWE,IAAX,UAAkBhB,EAAQ2U,EAAMzU,MAAM3D,KAAtC,kBAAoD+d,EAAYxB,WAAhE,MAEApI,YAAW,WACTiH,GAAU2C,EAAa3F,EAAO,MAAM,KACnC,MACC2F,EAAY/E,MAAK,SAAArY,GAAI,OAAIA,EAAO4c,GAAiB9Z,EAAQ2U,EAAMzU,MAAMmL,UAAUhP,MAAMsY,EAAMlG,MAAMxR,QAAQE,WAC3G2D,EAAWE,IAAX,uCAA+C2T,EAAMpY,KAArD,gBAGAuE,EAAWE,IAAX,cAAsB2T,EAAMpY,KAA5B,gBACAmU,YAAW,WACTtJ,EAAOkM,OAASrD,GAChB0E,EAAM5I,SAAW,IAAInF,IAAgB,IAAMpH,KAAKC,MAAsB,IAAhBD,KAAKE,UAAiB,GAAI,IAAMF,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IACvHiV,EAAMpY,KAAO,QACboY,EAAMrG,YAAa,EACnBxN,EAAWS,iBAAiBoT,EAAMnT,GAAImT,EAAMzU,MAC5C6W,GAAgBpC,GAChBH,OACC,YAGL1T,EAAWE,IAAI,6BAMjBwZ,GAAa,uCAAG,gCAAA7Y,EAAA,yDACpBwR,IAAW,EACLsH,EAAU,SAACC,GAAD,OAAQ,IAAIC,SAAQ,SAAAC,GAAC,OAAIlK,WAAWkK,EAAGF,SACnDzH,IAAYC,IAAWA,GAAQrD,OAAS,GAHxB,wBAIdgL,EAAgB7a,EAAQsL,EAAYpL,MAAMQ,MAAMe,QAAO,SAAAL,GAAI,OAC7DkK,EAAY7O,KAAKJ,MAAM+E,EAAKqN,MAAM3R,MAAMM,KAAK+Z,GAAc/V,EAAM6R,MAAc,KAE7E6H,EAAgBD,EAAcpZ,QAAO,SAAAsZ,GAAK,OAAK7H,GAAQqC,MAAK,SAAAjC,GAAM,OAAIA,IAAWyH,QAPnE,SASZtL,GAAayD,GAAD,uCAAU,WAAOI,GAAP,SAAA3R,EAAA,6DACtBsR,IACF4G,GAAS5G,GAAUK,GAFK,SAIpBmH,EAAQ,KAJY,2CAAV,uDATA,WAedK,EAfc,kCAgBVrL,GAAaqL,EAAD,uCAAgB,WAAOC,GAAP,SAAApZ,EAAA,6DAC5BsR,IACF4G,GAASkB,EAAO9H,IAAU,GAFI,SAI1BwH,EAAQ,KAJkB,2CAAhB,uDAhBF,QAuBlB3Z,EAAWO,iBAAiBpB,EAAcC,MAC1CiF,EAAMoO,WAAWpO,EAAMqO,cAAc,UACrC8D,KACA9C,KACAgF,KACArG,IAAW,EAEqC,IAA5CnT,EAAQC,EAAcC,MAAMU,aAC9B8P,YAAW,WACTsC,OACC,MAjCa,4CAAH,qDAsCfY,GAAaoH,IAAWC,mBAAmB,aAAc,aAC7DrH,GAAW9F,MAAQ,QACnB8F,GAAWvT,OAAS,OACpBuT,GAAWjX,MAAQ,QACnBiX,GAAWsH,KAAO,MAClBtH,GAAWuH,IAAM,MACjBvH,GAAWwH,aAAe,GAC1BxH,GAAWjL,WAAa,QACxBiL,GAAWyH,OAAS,IACpBzH,GAAW0H,yBAAyBC,KAAI,WACjCpI,IACHqH,QAIJ,IAAIpG,GAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,GAAIpB,GAAU,CAUZ,GATKoB,IACHjB,GAASrH,SAAWkH,GAASlH,SAC7BkH,GAASlH,SAAW+D,GAAW/D,UAEjC6G,GAAS7G,SAAW,IAAInF,IAAgBqM,GAASlH,SAASI,EAAG,GAAI8G,GAASlH,SAASS,GACnFoG,GAAS5F,YAAW,GACpB7H,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiDwL,YAAW,GAGxDkJ,GAAiBjD,KAAaiD,GAAiBjD,IAAU1W,KAAK+X,SAAS,YAAa,CAClFnP,EAAMqO,cAAN,mBAAgCP,GAASzR,MAC3C2D,EAAMqO,cAAN,mBAAgCP,GAASzR,KAAMuK,SAASmB,EAA4B,GAAtB+F,GAASlH,SAASmB,EAChF/H,EAAMqO,cAAN,mBAAgCP,GAASzR,KAAMwL,YAAW,IAE1D7H,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiD8K,MAAjD,mBAAmE2G,GAASzR,KAAMuK,SAASmB,EAA4B,GAAtB+F,GAASlH,SAASmB,EAGjH/H,EAAMqO,cAAc,kBACtBrO,EAAMqO,cAAc,kBAAkBzH,SAASmB,EAAI+F,GAASlH,SAASmB,EAAI4B,GAAUmE,IAAY,EAAI,GAEnGL,GAAStG,MAAM,kBACfnH,EAAMqO,cAAc,kBAAkBjG,OAASqF,GAC/CzN,EAAMqO,cAAc,kBAAkBzH,SAAW,IAAInF,IAAgB,EAAGqM,GAASlH,SAASmB,EAAI4B,GAAUmE,IAAY,EAAI,EAAG,IAG7H,IAAIuI,EAAoB,8BAA0Bhc,KAAKic,MAAMvF,GAAiBjD,IAAUlH,SAASS,EAAI4C,GAAU8G,GAAiBjD,KAAa,GAArH,8CAA6JzT,KAAKic,MAAMvF,GAAiBjD,IAAUlH,SAASS,EAAI4C,GAAU8G,GAAiBjD,KAAa,GAAxP,8CAAgSzT,KAAKic,MAAMvF,GAAiBjD,IAAUlH,SAASI,EAAIgD,GAAS+G,GAAiBjD,KAAa,GAA1X,8CAAkazT,KAAKic,MAAMvF,GAAiBjD,IAAUlH,SAASI,EAAIgD,GAAS+G,GAAiBjD,KAAa,GAA5f,kBACpByI,EAAU,IAAItR,IAAe,UAAWjF,GAC5CuW,EAAQzT,MAAQ,IAChByT,EAAQrR,wBAAwBmR,GAChCE,EAAQhS,aAAevE,EAAMwW,kBAAkB1I,GAAS9B,OAAO,IAAIzH,aAEnEvE,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiDiH,SAAWiT,EAC5DvW,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiD+N,UAAUgC,SAAQ,SAAC/D,EAAKoC,GACvEpC,EAAI/E,SAAW,IAAI2B,IAAJ,iBAA6BwF,GAASzK,GACrDqI,EAAI/E,SAASR,MAAQ,IACrBuF,EAAI/E,SAAS4B,wBAAwBmR,GACrChO,EAAI/E,SAASiB,aAAevE,EAAMwW,kBAAkB1I,GAAS9B,OAAOvB,EAAQ,IAAIlG,gBAElFvE,EAAMqO,cAAc,kBAAkB/K,SAAW,IAAI2B,IAAJ,cAAkCjF,GACnFA,EAAMqO,cAAc,kBAAkB/K,SAASR,MAAQ,IACvD9C,EAAMqO,cAAc,kBAAkB/K,SAAS4B,wBAAwBmR,GACvErW,EAAMqO,cAAc,kBAAkBjE,UAAUgC,SAAQ,SAAAqK,GAAK,OAAIA,EAAM5O,YAAW,WAElF7H,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiDiH,SAAWtD,EAAMwW,kBAAkB1I,GAAS9B,OAAO,IACpGhM,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiD+N,UAAUgC,SAAQ,SAAC/D,EAAKoC,GAAN,OAAgBpC,EAAI/E,SAAWtD,EAAMwW,kBAAkB1I,GAAS9B,OAAOvB,EAAQ,OAClJmD,GAAUtK,SAAW0B,EACjBhF,EAAMqO,cAAN,mBAAgCP,GAASzR,MAC3C2D,EAAMqO,cAAN,mBAAgCP,GAASzR,KAAMiF,UAE7CtB,EAAMqO,cAAc,mBACtBrO,EAAMqO,cAAc,kBAAkB/M,UAI1C2M,GAASnG,SAAWgG,GAAShG,SAASX,QACtCa,IAAS,IAITyI,GAAmB,SAACxU,GACtB,IAAIuU,EAAU,IAAI/O,IAAgB,EAAG,GAAI,GACrC0P,EAAYlV,EAAKya,aAAalG,GAElC,OADAW,EAAUwF,YACHxF,GAGL7B,GAAoB,SAACX,GAEvB,GADAA,EAAIvN,iBACA0M,IAAY8I,GAAkBjI,GAAM,CACtC,IAAIkI,EAAQ/I,GAASlH,SAASI,EAAI4P,GAAkBjI,GAAK3H,EACrD8P,EAAQhJ,GAASlH,SAASS,EAAIuP,GAAkBjI,GAAKtH,EACzDyG,GAAShG,SAASC,EAAI1N,KAAK0c,MAAMF,EAAOC,KAIxCE,GAAe,SAACrI,GACA,IAAdA,EAAIE,OAAyC,IAA1BF,EAAIC,YAAYC,OACjCf,IAAY9F,KACdrM,EAAWO,iBAAiBpB,EAAcC,MAC1CiF,EAAMoO,WAAWpO,EAAMqO,cAAc,UACrCrG,IAAS,EACTiG,GAASrH,SAAW,KACpBqH,GAASnG,SAAW,KACpBuH,KAEgD,IAA5CxU,EAAQC,EAAcC,MAAMU,aAC9B8P,YAAW,WACTsC,OACC,OAMPoJ,GAAc,SAAUtI,GAE1B,IADAA,EAAIvN,iBACA0M,IAAY8I,GAAkBjI,OAClB,sBAAO9T,EAAQsL,EAAYpL,MAAMQ,OAAjC,YAA2CV,EAAQC,EAAcC,MAAMQ,MAAMe,QAAO,SAAAL,GAAI,OAAIA,EAAKI,KAAOyR,GAASzR,QAE/G+T,MAAK,SAAAnU,GAAI,OACvB2a,GAAkBjI,GAAK3H,EAAI/K,EAAK2K,SAASI,EAAIgD,GAAS/N,GAAQ,GAC9D2a,GAAkBjI,GAAK3H,EAAI/K,EAAK2K,SAASI,EAAIgD,GAAS/N,GAAQ,GAC9D2a,GAAkBjI,GAAKtH,EAAIpL,EAAK2K,SAASS,EAAI2C,GAAS/N,GAAQ,GAC9D2a,GAAkBjI,GAAKtH,EAAIpL,EAAK2K,SAASS,EAAI2C,GAAS/N,GAAQ,OAI3DqQ,GAAUhQ,QAAO,SAAA4a,GAAQ,OAAIvN,GAAUuN,GAAYA,EAAStQ,SAASmB,EAAK4B,GAAUuN,GAAY,EAAKvN,GAAUmE,IAAYA,GAASlH,SAASmB,KAAGqI,MAAK,SAAA8G,GAAQ,OAC5JN,GAAkBjI,GAAK3H,EAAIkQ,EAAStQ,SAASI,EAAIgD,GAASkN,GAAY,EAAIlN,GAAS8D,IAAY,GAC/F8I,GAAkBjI,GAAK3H,EAAIkQ,EAAStQ,SAASI,EAAIgD,GAASkN,GAAY,EAAIlN,GAAS8D,IAAY,GAC/F8I,GAAkBjI,GAAKtH,EAAI6P,EAAStQ,SAASS,EAAI4C,GAAUiN,GAAY,EAAIlN,GAAS8D,IAAY,GAChG8I,GAAkBjI,GAAKtH,EAAI6P,EAAStQ,SAASS,EAAI4C,GAAUiN,GAAY,EAAIlN,GAAS8D,IAAY,MAI9F8I,GAAkBjI,GAAK3H,GAAK,KAAO4P,GAAkBjI,GAAK3H,EAAI,KAAO4P,GAAkBjI,GAAKtH,GAAK,KAAOuP,GAAkBjI,GAAKtH,EAAI,KAAK,CAE1I,IAAI8P,EAAkB7K,GAAUhQ,QAAO,SAAA4a,GAAQ,OAAIvN,GAAUuN,GAAYvN,GAAUmE,IAAYA,GAASlH,SAASmB,EAAI,MAAIzL,QAAO,SAAA4a,GAAQ,OACtIN,GAAkBjI,GAAK3H,EAAIkQ,EAAStQ,SAASI,EAAIgD,GAASkN,GAAY,EAAIlN,GAAS8D,IAAY,GAC/F8I,GAAkBjI,GAAK3H,EAAIkQ,EAAStQ,SAASI,EAAIgD,GAASkN,GAAY,EAAIlN,GAAS8D,IAAY,GAC/F8I,GAAkBjI,GAAKtH,EAAI6P,EAAStQ,SAASS,EAAI4C,GAAUiN,GAAY,EAAIlN,GAAS8D,IAAY,GAChG8I,GAAkBjI,GAAKtH,EAAI6P,EAAStQ,SAASS,EAAI4C,GAAUiN,GAAY,EAAIlN,GAAS8D,IAAY,KAE9FqJ,GAAmBA,EAAgBzM,OAAS,EAE9CC,GAAW/D,SAAW,IAAInF,IAAgBmV,GAAkBjI,GAAK3H,EAAG2C,GAAUwN,EAAgB,IAAM,GAAIP,GAAkBjI,GAAKtH,GAG/HsD,GAAW/D,SAAW,IAAInF,IAAgBmV,GAAkBjI,GAAK3H,EAAG,GAAI4P,GAAkBjI,GAAKtH,KAQvGuP,GAAoB,WAEtB,IAAIQ,EAAWpX,EAAMqX,KAAKrX,EAAMsX,SAAUtX,EAAMuX,UAAU,SAAU3N,GAAQ,OAAOA,IAASkB,MAC5F,OAAIsM,EAAS/G,IACJ+G,EAASI,YAGX,MAGHC,GAAY,SAAC1F,GACjBlQ,EAAgB6V,WAAWjJ,IAC3BkJ,KACA,IAAIC,EAAc,IAAInW,IAAeiD,MACjCoJ,KAAaC,GAAQqC,MAAK,SAAAjC,GAAM,OAAIA,EAAO9R,KAAO0V,EAAY1V,QAC5DgN,GAAYyE,GAASxE,KAAMxO,EAAcC,KAAMiX,GAAclE,GAAUiE,MACzE6F,EAAcvO,GAAYyE,GAASxE,KAAMxO,EAAcC,KAAMiX,GAAclE,GAAUiE,KAEvFpP,EAAGyM,QAAQ2C,EAAa6F,GACxB7J,GAAQhS,KAAKgW,GAEgC,MAAzCC,GAAclE,GAAUiE,IAC1B8F,GAAgB/J,GAAUiE,GAAa,GAEzC+F,GAAe/F,GACfgG,OAIE3C,GAAc,SAACjH,GACfA,IACFA,EAAOI,aAAe,GAGxBR,GAAQ3B,SAAQ,SAAC+B,EAAQ1D,GACK,IAAxB0D,EAAOI,eACTR,GAAQ8F,OAAOpJ,EAAO,GACtB9H,EAAGyL,WAAWD,GACdG,GAAeH,GACfnO,EAAMoO,WAAWpO,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,aAAuC8R,EAAO9R,WAK/D4V,GAAmB,SAACzC,EAAOC,GAC/B,IAAIxX,EACAD,EAOJ,MANoC,MAAhCga,GAAcxC,EAAOC,GACvBzX,EAAU8C,EAAcxD,KAAKJ,MAAMsY,EAAMlG,MAAM1R,MAAMI,SAErDC,EAAOsc,GAAQ/E,EAAOC,GACtBzX,EAAU8C,EAAcxD,KAAKJ,MAAMsY,EAAMlG,MAAM3R,MAAMK,QAAUC,GAE1DD,GAGH8f,GAAiB,SAAC/F,GACtB,GAAIjE,GAAU,CACZ,IAAI/V,EAAOga,EAAYxD,aACnBvW,EAAUia,GAAiBnE,GAAUiE,GACrCiG,EAAW,IAAInC,IAAJ,UAAqB9D,EAAY1V,GAAjC,aACf2b,EAAS7a,KAAT,UAAmBpF,EAAnB,YAA2BC,EAA3B,KACAggB,EAASxgB,MAAQ,QACjBwgB,EAASC,WAAa,QACtBD,EAASE,SAAW,OACpBrW,EAAgB6V,WAAWM,GAE3BA,EAASG,aAAapG,GACtBiG,EAASI,aAAe,KAItB9J,GAAiB,SAACyD,GAClB7H,GAAiB,GAAD,OAAI6H,EAAY1V,GAAhB,cAClB6N,GAAiB,GAAD,OAAI6H,EAAY1V,GAAhB,aAA8BiF,WAI5CqW,GAAiB,WACjB5J,IAAWA,GAAQrD,OAAS,GAC9BqD,GAAQ3B,SAAQ,SAAA+B,GACdG,GAAeH,GACf2J,GAAe3J,OAKfkK,GAAe,SAACvG,GACpB,IAAIC,EAAcD,EAAG/C,iBAEjBuJ,EAAiBvK,GAAQjD,KAAI,SAAAqD,GAAM,OAAIA,EAAOI,gBAAcvD,QAAQ3Q,KAAK6Q,IAAL,MAAA7Q,KAAI,YAAQ0T,GAAQzR,QAAO,SAAA6R,GAAM,OAAIA,EAAO9R,KAAO0V,EAAY1V,MAAIyO,KAAI,SAAAqD,GAAM,OAAIA,EAAOI,mBAChK,GAAIT,IAAYiE,GAAeA,EAAY1V,GAAG8S,SAAS,SAAW6C,GAAclE,GAAUiE,IAAgBE,GAAiBnE,GAAUiE,IAAgB,EAEnJ,GADAtE,GAAS5F,YAAW,GACG,IAAnBkG,GAAQrD,OACVqH,EAAYxD,aAAezT,EAAcxD,KAAKJ,MAAM4W,GAASxE,MAAM3R,MAAMI,KACzE0f,GAAU1F,QACL,GAAIuG,GAAkB,GAAKvK,GAAQwK,QAAO,SAACC,EAAKrK,GAAN,OAAiBqK,EAAMrK,EAAOI,eAAc,KAAOzT,EAAcxD,KAAKJ,MAAM4W,GAASxE,MAAM3R,MAAMI,MAAQgW,GAAQzR,QAAO,SAAA6R,GAAM,OAAIA,EAAO9R,KAAO0V,EAAY1V,MAAIoc,OAAM,SAAAtK,GAAM,OAAIA,EAAOI,cAAgB,KACtPwD,EAAYxD,aAAewD,EAAYxD,cAAgB,EAAIwD,EAAYxD,aAAe,EACtFR,GAAQuK,GAAgB/J,cAAgB,EACxCkJ,GAAU1F,GACVqD,SACK,CACL,GAAIrH,GAAQrD,OAAS,GAAKqD,GAAQ0K,OAAM,SAAAtK,GAAM,OAA4B,IAAxBA,EAAOI,gBAAqB,CAC5E,IAAImK,EAAgB3K,GAAQ8F,OAAO9F,GAAQ/C,QAAQ+C,GAAQuK,IAAkB,GAAG,GAChFlD,GAAYsD,GACZ3G,EAAYxD,aAAewD,EAAYxD,cAAgB,EAAIwD,EAAYxD,aAAe,EACtFkJ,GAAU1F,GAERA,EAAYxD,eAAiBzT,EAAcxD,KAAKJ,MAAM4W,GAASxE,MAAM3R,MAAMI,OAC7Eqd,GAAYrD,GACZ7D,QAMF2J,GAAkB,SAACrI,EAAOC,EAAOrS,GACrC,IAAIsT,EACAvC,EACJ,GAAI/Q,EAAU,CACZsT,EAAS,IAAIjP,IAAgB+N,EAAM5I,SAASI,EAAGwI,EAAM5I,SAASmB,EAAuB,GAAnB4B,GAAU6F,GAAeA,EAAM5I,SAASS,GAC1G8G,EAAS,IAAI1M,IAAgBgO,EAAM7I,SAASI,EAAGyI,EAAM7I,SAASmB,EAAuB,GAAnB4B,GAAU8F,GAAeA,EAAM7I,SAASS,GAC1G,IAAIsR,EAAc,CAAC,IAAIlX,IAAe,IAAM,IAAK,IAAM,IAAK,GAAK,IAAK,GAAI,IAAIA,IAAe,EAAG,EAAG,EAAG,IACtGA,IAAoBmX,YAApB,UAAmCpJ,EAAMnT,GAAzC,aAAgDoT,EAAMpT,IAAM,CAAEwc,OAAQ,CAACnI,EAAQvC,GAAS2K,OAAQH,EAAaI,WAAW,GAAQ/Y,OAC3H,CACL0Q,EAAS,IAAIjP,IAAgB+N,EAAM5I,SAASI,EAAGwI,EAAM5I,SAASmB,EAAuB,GAAnB4B,GAAU6F,GAAeA,EAAM5I,SAASS,GAC1G8G,EAAS,IAAI1M,IAAgBgO,EAAM7I,SAASI,EAAGyI,EAAM7I,SAASmB,EAAuB,GAAnB4B,GAAU8F,GAAeA,EAAM7I,SAASS,GAC1G,IAAI2R,EAAc,CAAC,IAAIvX,IAAe,EAAG,EAAG,EAAG,GAAI,IAAIA,IAAe,EAAG,EAAG,EAAG,IAC/EA,IAAoBmX,YAApB,UAAmCpJ,EAAMnT,GAAzC,aAAgDoT,EAAMpT,IAAM,CAAEwc,OAAQ,CAACnI,EAAQvC,GAAS2K,OAAQE,EAAaD,WAAW,GAAQ/Y,KAI9H+X,GAAiB,WACjBjK,IAAYC,IACdlT,EAAQsL,EAAYpL,MAAMQ,MAAM6Q,SAAQ,SAAAnQ,GACjC+D,EAAMqO,cAAN,UAAuBpS,EAAKI,GAA5B,aAAmCyR,GAASzR,OAC3C8J,EAAY7O,KAAKJ,MAAM+E,EAAKqN,MAAM3R,MAAMM,KAAK+Z,GAAc/V,EAAM6R,MAAc,GAAK9N,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,aAAuCJ,EAAKI,OAClIwb,GAAgB5b,EAAM6R,IAAU,OAO1CzH,EAAkB4S,eAChB,IAAIxX,IAA0BA,IAAsByX,sBAAsB,SAAUpH,IAClFnH,GAAamD,GAAS3G,SACXP,SAAWkH,GAASlH,SAC/B+D,GAAWxB,YAAa,EACxBwB,GAAWP,UAAUgC,SAAQ,SAAAqK,GAAK,OAAIA,EAAM5O,YAAW,MAEvD8C,GAAWrH,SAAWP,EACtBpB,EAAOrB,iBAAiB,YAAa2W,IAAa,GAClDtV,EAAOrB,iBAAiB,QAAS2O,IAAY,OAIjD5I,EAAkB4S,eAChB,IAAIxX,IAA0BA,IAAsB0X,qBAAqB,SAAUrH,GACjFnH,GAAWrJ,UACXK,EAAOpB,oBAAoB,YAAa0W,IACxCtV,EAAOpB,oBAAoB,QAAS0O,QAIxC7I,EAAiB6S,eACf,IAAIxX,IAA0BA,IAAsByX,sBAAsB,SAAUpH,GAC9EhE,IAAY9F,IACdhI,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiDwL,YAAW,GAE1DG,KACFrG,EAAOrB,iBAAiB,YAAagP,IAAmB,GACxD3N,EAAOrB,iBAAiB,QAAS0W,IAAc,QAKrD5Q,EAAiB6S,eACf,IAAIxX,IAA0BA,IAAsB0X,qBAAqB,SAAUrH,GAC7EhE,KAAa9F,KACfhI,EAAMqO,cAAN,UAAuBP,GAASzR,GAAhC,gBAAiDwL,YAAW,GACxD7H,EAAMqO,cAAN,mBAAgCP,GAASzR,MAC3C2D,EAAMqO,cAAN,mBAAgCP,GAASzR,KAAMwL,YAAW,IAG9DlG,EAAOpB,oBAAoB,YAAa+O,IACxC3N,EAAOpB,oBAAoB,QAASyW,QAKxC1Q,EAAuB2S,eACrB,IAAIxX,IAA0BA,IAAsB2X,iBAAiB,SAAUtH,GAClD,cAAvBhX,EAAcC,MAAyBiT,KACrChG,GACFgP,GAAalF,GAEbpD,GAAUoD,QAMlBxL,EAAuB2S,eACrB,IAAIxX,IAA0BA,IAAsB4X,mBAAmB,SAAUvH,GACpD,cAAvBhX,EAAcC,MAAyBiN,IAAWgG,IACpDqK,GAAavG,OAMnBxL,EAAuB2S,eACrB,IAAIxX,IAA0BA,IAAsByX,sBAAsB,SAAUpH,GACvD,cAAvBhX,EAAcC,MAAyBiT,IACzC6D,GAAkBC,OAKxBxL,EAAuB2S,eACrB,IAAIxX,IAA0BA,IAAsB0X,qBAAqB,SAAUrH,GACtD,cAAvBhX,EAAcC,MAChBoX,SAON5L,EAAuB0S,eACrB,IAAIxX,IAA0BA,IAAsB2X,iBAAiB,SAAUtH,GAClD,cAAvBhX,EAAcC,MAAyBiT,KACrChG,GACFgP,GAAalF,GAEbpD,GAAUoD,QAMlBvL,EAAuB0S,eACrB,IAAIxX,IAA0BA,IAAsB4X,mBAAmB,SAAUvH,GACpD,cAAvBhX,EAAcC,MAAyBiN,IAAWgG,IACpDqK,GAAavG,OAMnBvL,EAAuB0S,eACrB,IAAIxX,IAA0BA,IAAsByX,sBAAsB,SAAUpH,GACvD,cAAvBhX,EAAcC,MAAyBiT,IACzC6D,GAAkBC,OAKxBvL,EAAuB0S,eACrB,IAAIxX,IAA0BA,IAAsB0X,qBAAqB,SAAUrH,GACtD,cAAvBhX,EAAcC,MAChBoX,SAKNxQ,EAAOrB,iBAAiB,cAAe+O,IAAiB,GACxDrP,EAAMsZ,UAAY,WAChB3X,EAAOpB,oBAAoB,YAAa0W,IACxCtV,EAAOpB,oBAAoB,cAAe8O,MAI/B,WAACnQ,GAAD,OACb,6BACE,kBAACqa,EAAD,CAAgBld,GAAG,YAAYmd,UAAU,gBAAgBja,WAAS,EAACK,aAAcA,MC7kDtE6Z,EA3IC,WAAO,IAAD,EACc5Z,oBAAS,GADvB,mBACX6Z,EADW,KACDC,EADC,OAEY9Z,oBAAS,GAAhC+Z,EAFW,oBAGZ9f,EAAQX,IAAMgG,WAAWjG,GAEzB2gB,EAAa,WACf,OAAOC,aAAY,WACf,OAAIC,eAAKjgB,EAAMc,UAEP,uBAAG4e,UAAU,yCACRO,eAAKjgB,EAAMc,SAASE,cAAc1D,MADvC,WAMA,yCAMV4iB,EAAc,WAChB,OAAOF,aAAY,WACf,GAAIC,eAAKjgB,EAAMc,UAAW,CACtB,IAAIqf,EAAmB5f,KAAKic,MAAM,IAAOyD,eAAKjgB,EAAMc,SAASC,QAAQS,UAAUC,OAAOmP,OAASqP,eAAKjgB,EAAMc,SAASC,QAAQS,UAAUpE,OAAOwT,OAAU,KAClJwP,EAAmB7f,KAAKic,MAAM,IAAOyD,eAAKjgB,EAAMc,SAASC,QAAQa,UAAUH,OAAOmP,OAASqP,eAAKjgB,EAAMc,SAASC,QAAQa,UAAUxE,OAAOwT,OAAU,KAEtJ,OACI,uBAAG8O,UAAU,6DAAb,sBACoBnf,KAAK6Q,IAAIgP,EAAkBD,GAD/C,MAKJ,OACI,yCAMVE,EAAQ,WACV,OAAOL,aAAY,WACf,GAAIC,eAAKjgB,EAAMc,UAAW,CACtB,IAAIwf,EAAOtgB,EAAMc,SAASC,QAAQf,EAAMc,SAASE,cAAcC,MAAMC,SACjEqf,EAAUhgB,KAAKC,MAAM8f,EAAK,IAC1BE,EAAUF,EAAiB,GAAVC,EACrB,OACI,0BAAMb,UAAU,wCAAhB,UAA2Da,EAA3D,YAAkF,IAAZC,EAAgB,KAAOA,IAGjG,OACI,0BAAMd,UAAU,wCAAhB,iBAMhB,OACI,yBAAKA,UAAU,kEACX,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,mDACX,0BAAMA,UAAU,wCAAhB,WAEJ,yBAAKA,UAAU,yBACX,uBAAGA,UAAU,mEAAb,iBACe1f,EAAMc,SAAS2f,cAE9B,kBAACP,EAAD,QAIR,yBAAKR,UAAU,6CACX,yBAAKA,UAAU,0BAGf,yBAAKA,UAAU,uDACX,kBAACK,EAAD,MACA,kBAACM,EAAD,QAIR,yBAAKX,UAAU,iBACX,4BAA6CgB,KAAK,SAAShB,UAAU,yHAE7DI,EACI,yBAAKa,QAAQ,YAAYC,KAAK,eAAelB,UAAU,qBAAoB,0BAAMmB,SAAS,UAAUC,EAAE,gdAAgdC,SAAS,aAC/jB,yBAAKJ,QAAQ,YAAYC,KAAK,eAAelB,UAAU,sBAAqB,0BAAMmB,SAAS,UAAUC,EAAE,kUAAkUC,SAAS,cAG9b,4BAAQC,QAAShhB,EAAMqB,iBAAkBqf,KAAK,SAAShB,UAAU,yHAC7D,yBAAKiB,QAAQ,YAAYC,KAAK,eAAelB,UAAU,yBAAwB,0BAAMmB,SAAS,UAAUC,EAAE,qZAAqZC,SAAS,cAE5gB,4BAAQC,QAAS,kBAAMnB,GAAaD,IAAWc,KAAK,SAAShB,UAAU,yGACnE,yBAAKiB,QAAQ,YAAYC,KAAK,eAAelB,UAAU,eAAc,0BAAMmB,SAAS,UAAUC,EAAE,+fAA+fC,SAAS,iBCvE7mBE,EAzBA,WACX,OACI,yBAAKvB,UAAU,2CACX,wBAAIA,UAAU,qGACV,wBAAIA,UAAU,QAAd,YAGA,wBAAIA,UAAU,QAAd,SAGA,wBAAIA,UAAU,QAAd,UAGA,wBAAIA,UAAU,QAAd,UAGA,wBAAIA,UAAU,QACV,uBAAG5b,KAAK,0BAA0BuQ,OAAO,SAAS6M,IAAI,sBAAsBC,MAAM,eAAlF,YCkBLC,EAnCA,SAAC,GAAiE,IAAhEngB,EAA+D,EAA/DA,KAAMogB,EAAyD,EAAzDA,WAAYC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,gBACvD,OACI,yBAAK9B,UAAS,iMACV,yBAAKA,UAAU,2DAEP8B,EACA,yBAAK9B,UAAU,8GACf,KAGA2B,EACA,yBAAK3B,UAAS,uFAAkFze,GAAQwgB,IAAG,qCAAgCJ,EAAWzP,cAA3C,WAAmE8P,IAAI,WAClL,yBAAKf,QAAQ,YAAYC,KAAK,eAAelB,UAAU,yBAAwB,0BAAMmB,SAAS,UAAUC,EAAE,+JAA+JC,SAAS,cAG1R,yBAAKrB,UAAU,0CACX,yBAAKA,UAAU,6FACX,uBAAGA,UAAS,mDAA8Cze,IAASogB,GACnE,uBAAG3B,UAAU,gBAAb,cAEJ,yBAAKA,UAAU,kFACX,yBAAKA,UAAU,wCACX,uBAAGA,UAAU,QAAb,YACA,uBAAGA,UAAU,aAAa4B,IAE9B,yBAAK5B,UAAU,mCACX,uBAAGA,UAAU,QAAb,UACA,uBAAGA,UAAU,aAAa6B,QCanCI,EApCC,WACZ,IAAM3hB,EAAQX,IAAMgG,WAAWjG,GAC/B,OAAO4gB,aAAY,WACf,GAAIhgB,EAAMc,SAAU,CAKhB,IAJA,IAAI8gB,EAAS3B,eAAKjgB,EAAMc,SAASS,SAC7BA,EAAU,GACVsgB,EAAS,GAEJpJ,EAAI,EAAGA,EAAImJ,EAAOhR,OAAQ6H,IAAK,CACpC,GAAImJ,EAAOnJ,IAAMmJ,EAAOnJ,GAAGpD,SAASrV,EAAMc,SAASC,QAAQS,UAAUlE,MAAO,CACxE,IAAIwkB,EAAMF,EAAOnJ,GAAGsJ,MAAM/hB,EAAMc,SAASC,QAAQS,UAAUlE,MAC3DukB,EAAS,CAAC,0BAAMG,IAAKF,EAAI,IAAKA,EAAI,IAAY,0BAAME,IAAKhiB,EAAMc,SAASC,QAAQS,UAAUlE,KAAMoiB,UAAU,wBAAwB1f,EAAMc,SAASC,QAAQS,UAAUlE,MAAc,0BAAM0kB,IAAKF,EAAI,IAAKA,EAAI,UACtM,GAAIF,EAAOnJ,IAAMmJ,EAAOnJ,GAAGpD,SAASrV,EAAMc,SAASC,QAAQa,UAAUtE,MAAO,CAC/E,IAAIwkB,EAAMF,EAAOnJ,GAAGsJ,MAAM/hB,EAAMc,SAASC,QAAQa,UAAUtE,MAC3DukB,EAAS,CAAC,0BAAMG,IAAKF,EAAI,IAAKA,EAAI,IAAY,0BAAME,IAAKhiB,EAAMc,SAASC,QAAQa,UAAUtE,KAAMoiB,UAAU,wBAAwB1f,EAAMc,SAASC,QAAQa,UAAUtE,MAAc,0BAAM0kB,IAAKF,EAAI,IAAKA,EAAI,UAEzMD,EAAS,CAACD,EAAOnJ,IAErBlX,EAAQ0gB,QACJ,yBAAKD,IAAKvJ,EAAGiH,UAAU,kDAClBmC,IAIb,OACI,yBAAKnC,UAAU,iEAAiEwC,MAAO,CAAC9gB,OAA4B,KAArBpB,EAAME,eAChGqB,GAIT,OAAO,yCCoBJ4gB,EAtDE,SAAC,GAAc,IAAZ3S,EAAW,EAAXA,KAChB,OACI,yBAAKkQ,UAAU,wDACX,yBAAKnd,GAAG,eAAemd,UAAU,8DAC7B,yBAAKA,UAAU,iBACX,wBAAIA,UAAS,kBAAalQ,EAAK9R,MAAlB,wBACR8R,EAAKhS,MAEV,wBAAIkiB,UAAU,8BAAd,UACQlQ,EAAK/R,MADb,WAIJ,yBAAKiiB,UAAU,0CACX,0BAAMA,UAAU,gCAAhB,WACA,0BAAMA,UAAU,+CAGxB,yBAAKnd,GAAG,gBAAgBmd,UAAU,mEAC9B,yBAAKA,UAAU,yBAAyB+B,IAAKjS,EAAKjS,MAAOmkB,IAAI,gBAC7D,yBAAKhC,UAAU,0DACX,2CACclQ,EAAKlS,OAEnB,gDACmBkS,EAAK5R,UAAUC,MADlC,cAC6C2R,EAAK5R,UAAUE,UAIpE,yBAAKyE,GAAG,gBAAgBmd,UAAU,UAC9B,2BAAOA,UAAU,sBACb,+BACI,wBAAIA,UAAU,eACV,wBAAIA,UAAU,eAAd,SACA,wBAAIA,UAAU,eAAd,UACA,wBAAIA,UAAU,eAAd,aAGR,+BACI,wBAAIA,UAAU,eACV,wBAAIA,UAAU,gCAAd,UAAiDlQ,EAAK1R,MAAMG,KAA5D,YAAoEuR,EAAK1R,MAAMI,QAA/E,MACA,wBAAIwhB,UAAU,gCAAd,UAAiDlQ,EAAK3R,MAAMI,KAA5D,YAAoEuR,EAAK3R,MAAMK,QAA/E,MACA,wBAAIwhB,UAAU,gCAAd,UAAiDlQ,EAAKxR,QAAQC,KAA9D,YAAsEuR,EAAKxR,QAAQE,QAAnF,UAKhB,yBAAKqE,GAAG,gBAAgBmd,UAAU,+CAAlC,6BAC2BlQ,EAAK7R,aCT7BykB,EAjCC,SAAC,GAAc,IAAZnhB,EAAW,EAAXA,KACTjB,EAAQX,IAAMgG,WAAWjG,GAC/B,OAAO4gB,aAAY,WACf,GAAIC,eAAKjgB,EAAMc,WAAamf,eAAKjgB,EAAMc,SAASC,QAAQE,GAAMQ,OAAQ,CAIlE,IAHA,IAAIA,EAAQwe,eAAKjgB,EAAMc,SAASC,QAAQE,GAAMQ,OAC1C4gB,EAAQ,GAEH5J,EAAI,EAAGA,EAAIhX,EAAMmP,OAAQ6H,IAC9B4J,EAAMpgB,KACF,kBAAC,EAAD,CAAU+f,IAAK/gB,EAAOwX,EAAGjJ,KAAMtS,EAAO+iB,eAAKjgB,EAAMc,SAASC,SAASE,GAAMzD,MAAMJ,MAAMqE,EAAMgX,GAAGjJ,SAGtG,OACI,oCACI,yBAAKkQ,UAAU,6CACX,yBAAKA,UAAU,4FACX,4BACI,0BAAMA,UAAS,eAAUze,EAAKoU,SAAS,SAAW,QAAU,QAA7C,eAAmE4K,eAAKjgB,EAAMc,SAASC,QAAQE,GAAM3D,OADxH,mBAIJ,yBAAKoiB,UAAU,wGACV2C,KAMjB,OAAO,yCC0CJC,EA5DH,WACV,IAAMtiB,EAAQX,IAAMgG,WAAWjG,GAE/BgH,qBAAU,WAQR,OAPApG,EAAMyC,gBACNzC,EAAMyE,gBACkB,KAApBzE,EAAMI,WACRJ,EAAMkE,cAERlE,EAAMY,WACNyF,OAAOG,iBAAiB,UAAW+b,GAC5B,WACLlc,OAAOI,oBAAoB,UAAW8b,OAI1C,IAAMA,EAAiB,SAAjBA,EAAkBC,GACJ,IAAdA,EAAEC,UACJ7e,SAASd,KAAK4f,UAAUpG,IAAI,mBAC5BjW,OAAOI,oBAAoB,UAAW8b,KAIpCI,EAAU,WACd,OAAO3C,aAAY,WACjB,OAAIC,eAAKjgB,EAAMc,UAEX,yBAAK4e,UAAS,UAAK1f,EAAMK,WAAa,SAAW,GAAnC,6CACZ,yBAAKqf,UAAU,yDACb,kBAAC,EAAD,CAAQze,KAAM,QAASogB,WAAYpB,eAAKjgB,EAAMc,SAASC,QAAQS,UAAUlE,MAAOgkB,YAAarB,eAAKjgB,EAAMc,SAASC,QAAQS,UAAUG,aAAc4f,UAAWtB,eAAKjgB,EAAMc,SAASC,QAAQS,UAAUC,MAAMmP,QAAS4Q,gBAAiBvB,eAAKjgB,EAAMc,SAASE,cAAc1D,QAAU2iB,eAAKjgB,EAAMc,SAASC,QAAQS,UAAUlE,QACpT,kBAAC,EAAD,CAAQ2D,KAAM,QAASogB,WAAYpB,eAAKjgB,EAAMc,SAASC,QAAQa,UAAUtE,MAAOgkB,YAAarB,eAAKjgB,EAAMc,SAASC,QAAQa,UAAUD,aAAc4f,UAAWtB,eAAKjgB,EAAMc,SAASC,QAAQa,UAAUH,MAAMmP,QAAS4Q,gBAAiBvB,eAAKjgB,EAAMc,SAASE,cAAc1D,QAAU2iB,eAAKjgB,EAAMc,SAASC,QAAQa,UAAUtE,SAEtT,kBAAC,EAAD,OAKF,yCAMR,OACE,yBAAKoiB,UAAU,sDACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,kBAAC5Y,EAAD,MACA,kBAAC,EAAD,CAAS7F,KAAK,cACd,kBAAC,EAAD,CAASA,KAAK,eAEhB,kBAAC0hB,EAAD,OAEF,kBAAC,EAAD,QC1DcC,QACW,cAA7Bvc,OAAOxC,SAASgf,UAEe,UAA7Bxc,OAAOxC,SAASgf,UAEhBxc,OAAOxC,SAASgf,SAASC,MACvB,2DCVNC,IAAS5b,OACP,kBAAC,IAAM6b,WAAP,KACE,kBAACljB,EAAD,KACE,kBAAC,EAAD,QAGJ8D,SAASqf,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjgB,MAAK,SAAAkgB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvf,QAAQuf,MAAMA,EAAMC,c","file":"static/js/main.7e516dd8.chunk.js","sourcesContent":["export const armies = {\r\n  tabForces: {\r\n    units: {\r\n      STLRW: {\r\n        name: \"Steeler bot\",\r\n        image: \"https://images.hive.blog/DQmVhaUTAscBfhxCJoUDYhi7SXhyJjaa8vmPS6up2Car12c/STLRW.png\",\r\n        army:\"T.A.B. Forces\",\r\n        class: \"Light\",\r\n        color:\"green\",\r\n        specials: \"N/A\",\r\n        equipment: {range: \"Laser gun\" , melee: \"Wakizashi\"},\r\n        move: 4,\r\n        defense: { roll: 1, success: 4 },\r\n        melee: { roll: 1, success: 3 },\r\n        range: { roll: 1, success: 3, mods: { s: -1, m: 1, l: 0, xl: -1 } },\r\n        maxRange: 1212,\r\n        maxInGame: undefined,\r\n        cost: 3\r\n      }\r\n    },\r\n  },\r\n  sysTroops: {\r\n    units: {\r\n      WBORK: {\r\n        name: \"Whiteboot troop\",\r\n        army:\"SYS Troops\",\r\n        class: \"Light\",\r\n        color: \"blue\",\r\n        specials: \"N/A\",\r\n        equipment: {range: \"Assault rifle\" , melee: \"Knife\"},\r\n        move: 4,\r\n        defense: { roll: 1, success: 4 },\r\n        melee: { roll: 1, success: 4 },\r\n        range: { roll: 2, success: 4, mods: { s: 0, m: 1, l: -1, xl: -1 } },\r\n        maxRange: 1212,\r\n        maxInGame: undefined,\r\n        cost: 3\r\n      }\r\n    }\r\n  },\r\n  rebels: {\r\n    units: {\r\n      OTTMK: {\r\n        name: \"Otto rebel\",\r\n        image: \"https://images.hive.blog/DQmRhgeaJftN7dH85hYdgQ49ySdFt5WD2XLErmxyHm2wLXF/OTTMK.png\",\r\n        army:\"Raging Rebels\",\r\n        class: \"Light\",\r\n        color: \"orange\",\r\n        specials: \"N/A\",\r\n        equipment: {range: \"Machine gun\" , melee: \"Hatchet\"},\r\n        move: 4,\r\n        defense: { roll: 1, success: 4 },\r\n        melee: { roll: 2, success: 4 },\r\n        range: { roll: 3, success: 5, mods: { s: 1, m: 0, l: -1, xl: -2 } },\r\n        maxRange: 1212,\r\n        maxInGame: undefined,\r\n        cost: 3\r\n      }\r\n    }\r\n  },\r\n  outerRing: {\r\n    units: {\r\n      SKNCK: {\r\n        name: \"Skinner savage\",\r\n        image: \"https://images.hive.blog/DQmeB4P34AG9BdNd7SjmEvjiqNk6Et93bcJtNrViH6eiwEC/SKN.png\",\r\n        army:\"Outer-Ring Savages\",\r\n        class: \"Light\",\r\n        color: \"yellow\",\r\n        specials: \"N/A\",\r\n        equipment: {range: \"Crossbow\" , melee: \"Kukri\"},\r\n        move: 4,\r\n        defense: { roll: 1, success: 4 },\r\n        melee: { roll: 2, success: 3 },\r\n        range: { roll: 1, success: 3, mods: { s: 1, m: 0, l: -2, xl: -2 } },\r\n        maxRange: 1212,\r\n        maxInGame: undefined,\r\n        cost: 3\r\n      }\r\n    }\r\n  },\r\n  voidWarriors: {\r\n    units: {\r\n      BACRC: {\r\n        name: \"Bac warrior\",\r\n        army:\"Void Warriors\",\r\n        class: \"Light unit\",\r\n        color: \"purple\",\r\n        specials: \"N/A\",\r\n        equipment: {range: \"Assault rifle\" , melee: \"Chainsaw attachment\"},\r\n        move: 4,\r\n        defense: { roll: 1, success: 4 },\r\n        melee: { roll: 4, success: 5 },\r\n        range: { roll: 3, success: 5, mods: { s: 0, m: 0, l: -1, xl: -2 } },\r\n        maxRange: 1212,\r\n        maxInGame: undefined,\r\n        cost: 3\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useLocalStore } from 'mobx-react';\r\nimport { runInAction } from 'mobx';\r\nimport { armies } from '../gameStats/armies';\r\n\r\nconst StoreContext = React.createContext();\r\n\r\n//Steem API\r\n//const { Client } = require('dsteem');\r\nlet opts = {};\r\n//connect to production server\r\nopts.addressPrefix = 'STM';\r\nopts.chainId =\r\n    '0000000000000000000000000000000000000000000000000000000000000000';\r\n//connect to server which is connected to the network/production\r\n//const client = new Client('https://anyx.io/');\r\n\r\n//Hivesigner\r\nvar hivesigner = require('hivesigner');\r\n\r\nvar api = new hivesigner.Client({\r\n    app: 'insys-game',\r\n    callbackURL: 'http://localhost:3000/insys-game',\r\n    accessToken: 'access_token',\r\n    scope: ['vote', 'posting'],\r\n});\r\n\r\nexport function StoreProvider({ children }) {\r\n    const store = useLocalStore(() => ({\r\n        // State Variables\r\n        canvasHeight: 400,\r\n        userDetail: {},\r\n        loginLink: \"\",\r\n        fullScreen: false,\r\n        generateTableNumber: () => {\r\n            return Math.floor(Math.random() * Math.floor(Math.random() * Date.now()));\r\n        },\r\n        setTimer: () => {\r\n            setInterval(function(){\r\n                store.gameInfo.players[store.gameInfo.currentPlayer.team].timeLeft -= 1; \r\n            }, 1000);\r\n        },\r\n        setCanvasHeight: (height) => {\r\n           store.canvasHeight = height; \r\n        },\r\n        toggleFullScreen: () => {\r\n            store.fullScreen = !store.fullScreen;\r\n        },\r\n        gameInfo: {\r\n            get tableNumber() { return store.generateTableNumber() },\r\n            currentPlayer: {\r\n                get name() { return store.gameInfo.players[this.team].name },\r\n                team: \"teamWhite\",\r\n            },\r\n            history: [],\r\n            players: {\r\n                teamWhite: {\r\n                    name: \"Jrej\",\r\n                    army: \"rebels\",\r\n                    get armyStats() { return armies[this.army] },\r\n                    units: [\"OTTMK\", \"OTTMK\", \"OTTMK\"],\r\n                    minis: [],\r\n                    startActions: 6,\r\n                    turnActions: 6,\r\n                    timeLeft: 1500,\r\n                    //Army value would be calculated at the time of unit selection\r\n                    //get armyValue() { return this.units.reduce((acc, value) => { return acc + this.armyStats.units[value][\"cost\"] }, 0) }\r\n                },\r\n                teamBlack: {\r\n                    name: \"Inkito\",\r\n                    army: \"tabForces\",\r\n                    get armyStats() { return armies[this.army] },\r\n                    units: [\"STLRW\", \"STLRW\", \"STLRW\"],\r\n                    minis: [],\r\n                    startActions: 6,\r\n                    turnActions: 6,\r\n                    timeLeft: 1500,\r\n                    //Army value would be calculated at the time of unit selection\r\n                    //get armyValue() { return this.units.reduce((acc, value) => { return acc + this.armyStats[\"units\"][value][\"cost\"] }, 0) }\r\n                }\r\n            }\r\n        },\r\n        gameUpdate: {\r\n            setCurrentPlayer: (currentPlayer) => {\r\n                store.gameInfo.currentPlayer = currentPlayer;\r\n            },\r\n            log: (string) => {\r\n                store.gameInfo.history.push(string);\r\n            },\r\n            addImportedMini : (mini, team) => {\r\n                store.gameInfo.players[team].minis.push(mini);\r\n            },\r\n            removeTurnAction: (team) => {\r\n                store.gameInfo.players[team].turnActions -= 1;\r\n            },\r\n            resetTurnActions : (team) => {\r\n                store.gameInfo.players[team].turnActions = store.gameInfo.players[team].startActions;\r\n            },\r\n            removePlayerMini: (id, team) => {\r\n                //Remove mini from mini array.\r\n                //Remove 2 actions from start actions.\r\n                store.gameInfo.players[team].minis = store.gameInfo.players[team].minis.filter(mini => mini.id !== id)\r\n                store.gameInfo.players[team].startActions -= 2;\r\n            }\r\n        },\r\n        //Temporal\r\n        temporalLogin: async () => {\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ username: 'jrej', app: \"inkito\" })\r\n            };\r\n            const response = await fetch('https://inkito-ipfs.herokuapp.com/login', requestOptions).then(res => res.text());\r\n            runInAction(() => {\r\n                if (response === \"success\") {\r\n                    store.ipfsState = true;\r\n                } else {\r\n                    store.ipfsState = false;\r\n                }\r\n            })\r\n        },\r\n        logOut: () => {\r\n            api.revokeToken(function (err, res) {\r\n                if (res && res.success) {\r\n                    store.userDetail = {};\r\n                    document.location.href = '/';\r\n                }\r\n                localStorage.setItem('access-token', \"\");\r\n                localStorage.setItem('users', \"\");\r\n                store.userDetail = {};\r\n                if (err) {\r\n                    console.log(err);\r\n                }\r\n            });\r\n            return false;\r\n        },\r\n        initHSLogin: () => {\r\n            let link = api.getLoginURL();\r\n            runInAction(() => {\r\n                store.loginLink = link;\r\n            })\r\n        },\r\n        login: (user) => {\r\n            let params = { username: user };\r\n\r\n            api.login(params, function (err, token) {\r\n                if (token) {\r\n                    store.getUserDetail(token, user)\r\n                } else if (err) {\r\n                    console.log(err);\r\n                }\r\n            })\r\n        },\r\n        getUserDetail: (localAccess, localUser) => {\r\n            store.userDetail = {};\r\n\r\n            if (localAccess && localUser) {\r\n                var access_token = localAccess;\r\n                var username = localUser;\r\n\r\n            } else {\r\n                access_token = new URLSearchParams(document.location.search).get('access_token');\r\n                username = new URLSearchParams(document.location.search).get('username');\r\n            }\r\n\r\n            if (access_token) {\r\n                // set access token after login\r\n                api.setAccessToken(access_token);\r\n\r\n                api.me((err, res) => {\r\n                    if (res) {\r\n                        runInAction(() => {\r\n                            store.userDetail = res;\r\n                            if (access_token) {\r\n                                localStorage.setItem('access-token', JSON.stringify(access_token));\r\n                            }\r\n                            if (username) {\r\n                                localStorage.setItem('users', JSON.stringify(username));\r\n                            }\r\n                        })\r\n                    }\r\n                    if (err) {\r\n                        console.log(err);\r\n                    }\r\n                })\r\n            }\r\n        },\r\n    }));\r\n    return <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\r\n};\r\n\r\nexport default StoreContext;","import { Engine, Scene } from '@babylonjs/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport StoreContext from '../../store/AppStore';\r\n\r\nexport default (props) => {\r\n    const store = React.useContext(StoreContext);\r\n    const reactCanvas = useRef(null);\r\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady, ...rest } = props;\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [scene, setScene] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (window) {\r\n            const resize = () => {\r\n                if (scene) {\r\n                    scene.getEngine().resize();\r\n                }\r\n            }\r\n            window.addEventListener('resize', resize);\r\n            \r\n            return () => {\r\n                window.removeEventListener('resize', resize);\r\n            }\r\n        }\r\n    }, [scene]);\r\n\r\n    useEffect(() => {\r\n        if (!loaded) {\r\n            setLoaded(true);\r\n            const engine = new Engine(reactCanvas.current, true, { stencil: true });\r\n            const scene = new Scene(engine, sceneOptions);\r\n            setScene(scene);\r\n            if (scene.isReady()) {\r\n                props.onSceneReady(scene, store.gameInfo.players, store.gameUpdate)\r\n            } else {\r\n                scene.onReadyObservable.addOnce(scene => props.onSceneReady(scene, store.gameInfo.players, store.gameUpdate));\r\n            }\r\n\r\n            engine.runRenderLoop(() => {\r\n                if (typeof onRender === 'function') {\r\n                    onRender(scene);\r\n                }\r\n                scene.render();\r\n            })\r\n        }\r\n        reactCanvas.current.onwheel = function(event){\r\n            event.preventDefault();\r\n        };\r\n        \r\n        reactCanvas.current.onmousewheel = function(event){\r\n            event.preventDefault();\r\n        };\r\n        store.setCanvasHeight(reactCanvas.current.height);\r\n        \r\n        return () => {\r\n            if (scene !== null) {\r\n                scene.dispose();\r\n            }\r\n        }\r\n    }, [loaded, sceneOptions, props, onRender, scene, store, store.gameInfo.players, store.gameUpdate])\r\n\r\n\r\n    return (\r\n        <canvas id=\"canvas\" tabIndex=\"1\" ref={reactCanvas} {...rest} />\r\n    );\r\n}","import React from 'react';\r\nimport * as BABYLON from '@babylonjs/core';\r\nimport * as GUI from '@babylonjs/gui';\r\nimport { AdvancedDynamicTexture } from '@babylonjs/gui/2D';\r\nimport { CustomMaterial } from '@babylonjs/materials';\r\nimport SceneComponent from './SceneComponent';\r\n\r\nBABYLON.Animation.AllowMatricesInterpolation = true;\r\n\r\nvar publicURL = \"\";\r\nif (process.env.NODE_ENV === \"development\") {\r\n  publicURL = process.env.PUBLIC_URL;\r\n}\r\n\r\nconst onSceneReady = (scene, players, gameUpdate) => {\r\n  const canvas = scene.getEngine().getRenderingCanvas();\r\n  var advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\r\n    \"sceneUI\"\r\n  );\r\n  advancedTexture.isForeground = true;\r\n  var camera = new BABYLON.ArcRotateCamera(\"arcCamera\",\r\n    BABYLON.Tools.ToRadians(0),\r\n    BABYLON.Tools.ToRadians(100),\r\n    780, new BABYLON.Vector3(-60, 400, 0), scene\r\n  );\r\n  //Setting up camera         \r\n  camera.attachControl(canvas, true);\r\n  camera.angularsensibility *= -1;\r\n  camera.checkCollisions = true;\r\n  camera.ellipsoid = new BABYLON.Vector3(1.5, 1, 1.5);\r\n\r\n  //Setting lights and shadows\r\n  var light = new BABYLON.PointLight(\"pointLight\", new BABYLON.Vector3(75, 400, 150), scene);\r\n  light.intensity = 1;\r\n  light.range = 5000;\r\n\r\n  var light2 = new BABYLON.HemisphericLight(\"hemiLight\", new BABYLON.Vector3(0, -4900, 0), scene);\r\n  //Colored backlight => \r\n  //light2.diffuse = new BABYLON.Color3(0.3, 0.2, 0.9);\r\n  light2.intensity = 0.7;\r\n\r\n  var shadowGenerator = new BABYLON.ShadowGenerator(1024, light);\r\n  shadowGenerator.usePoissonSampling = true;\r\n\r\n  var hl = new BABYLON.HighlightLayer(\"hl1\", scene);\r\n  hl.innerGlow = false;\r\n\r\n  //Materials;\r\n  var invisibleMaterial = new BABYLON.StandardMaterial(\"invisibleMaterial\", scene);\r\n  invisibleMaterial.alpha = 0;\r\n\r\n  var transparentMaterial = new BABYLON.StandardMaterial(\"transparentMaterial\", scene);\r\n  transparentMaterial.alpha = 0.5;\r\n\r\n  var skybox = BABYLON.MeshBuilder.CreateSphere(\"skyBox\", { diameter: 5500, diameterX: 5500 }, scene);\r\n  var skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n  skyboxMaterial.backFaceCulling = false;\r\n  skybox.material = skyboxMaterial;\r\n  skybox.receiveShadows = true;\r\n\r\n  var background = BABYLON.MeshBuilder.CreateCylinder(\"background\", { height: 1, diameter: 5000, tessellation: 5000 }, scene);\r\n  var backgroundMaterial = new BABYLON.StandardMaterial(\"background\", scene);\r\n  backgroundMaterial.opacityTexture = new BABYLON.Texture(`.${publicURL}/Textures/OpacityTemplate.png`, scene);\r\n  backgroundMaterial.backFaceCulling = false;\r\n  background.material = backgroundMaterial;\r\n  background.translate(BABYLON.Axis.Y, -1, scene);\r\n  background.visibility = 0.4;\r\n  background.receiveShadows = true;\r\n\r\n  var boardMaterial = new BABYLON.StandardMaterial(\"boardMaterial\", scene);\r\n  boardMaterial.diffuseTexture = new BABYLON.Texture(`.${publicURL}/Textures/Wood/Wood_021_basecolor.jpg`, scene);\r\n  boardMaterial.bumpTexture = new BABYLON.Texture(`.${publicURL}/Textures/Wood/Wood_021_normal.jpg`, scene);\r\n  boardMaterial.ambientTexture = new BABYLON.Texture(`.${publicURL}/Textures/Wood/Wood_021_ambientOcclusion.jpg`, scene);\r\n\r\n  var groundMaterial = new BABYLON.StandardMaterial(\"asphaltMaterial\", scene);\r\n  groundMaterial.diffuseTexture = new BABYLON.Texture(`.${publicURL}/Textures/Asphalt/Asphalt_001_COLOR.jpg`, scene);\r\n  groundMaterial.bumpTexture = new BABYLON.Texture(`.${publicURL}/Textures/Asphalt/Asphalt_001_NRM.jpg`, scene);\r\n  groundMaterial.specularTexture = new BABYLON.Texture(`.${publicURL}/Textures/Asphalt/Asphalt_001_SPEC.jpg`, scene);\r\n  groundMaterial.ambientTexture = new BABYLON.Texture(`.${publicURL}/Textures/Asphalt/Asphalt_001_OCC.jpg`, scene);\r\n\r\n  var miniMaterial = new BABYLON.StandardMaterial(\"plasticMaterial\", scene);\r\n  miniMaterial.diffuseColor = new BABYLON.Color3(220 / 255, 220 / 255, 220 / 255);\r\n\r\n  var tokenMaterialBlack = new BABYLON.StandardMaterial(\"tokenMaterial\", scene);\r\n  tokenMaterialBlack.diffuseTexture = new BABYLON.Texture(`.${publicURL}/Textures/Token/Coin_low_Coin_material_BaseColor2.png`, scene);\r\n  tokenMaterialBlack.bumpTexture = new BABYLON.Texture(`.${publicURL}/Textures/Token/Coin_low_Coin_material_Normal.png`, scene);\r\n\r\n  var tokenMaterialWhite = new BABYLON.StandardMaterial(\"tokenMaterial\", scene);\r\n  tokenMaterialWhite.diffuseTexture = new BABYLON.Texture(`.${publicURL}/Textures/Token/Coin_low_Coin_material_BaseColor.png`, scene);\r\n  tokenMaterialWhite.bumpTexture = new BABYLON.Texture(`.${publicURL}/Textures/Token/Coin_low_Coin_material_Normal.png`, scene);\r\n\r\n  var baseMaterialBlack = new BABYLON.StandardMaterial(\"baseMaterial\", scene);\r\n  baseMaterialBlack.diffuseColor = new BABYLON.Color3.Black();\r\n\r\n  var baseMaterialWhite = new BABYLON.StandardMaterial(\"baseMaterial\", scene);\r\n  baseMaterialWhite.diffuseColor = new BABYLON.Color3.White();\r\n\r\n  var diceMatWhite = new BABYLON.StandardMaterial(\"diceMatWhite\", scene);\r\n  diceMatWhite.diffuseColor = new BABYLON.Color3.White();\r\n\r\n  var diceMatBlack = new BABYLON.StandardMaterial(\"diceMatBlack\", scene);\r\n  //diceMatBlack.diffuseColor = new BABYLON.Color3(55 / 255, 71 / 255, 79 / 255);\r\n  diceMatBlack.diffuseColor = new BABYLON.Color3.Black();\r\n\r\n  var diceMatRed = new BABYLON.StandardMaterial(\"diceMatRed\", scene);\r\n  diceMatRed.diffuseColor = new BABYLON.Color3(164 / 255, 27 / 255, 7 / 255);\r\n\r\n  var gameAreaTemplate = 'if( vPositionW.z  < -340.){ discard; } if( vPositionW.z  > 340.){ discard; } if( vPositionW.x  > 450.){ discard; } if( vPositionW.x  < -450.){ discard; }';\r\n\r\n  var moveAreaMat = new CustomMaterial(\"moveAreaMat\", scene);\r\n  moveAreaMat.alpha = 0.25;\r\n  moveAreaMat.Fragment_Custom_Diffuse(gameAreaTemplate);\r\n\r\n  var lineOfSightTransparency = 0.25;\r\n\r\n  var lineOfSightMatW = new CustomMaterial(\"losMatSW\", scene);\r\n  lineOfSightMatW.alpha = lineOfSightTransparency;\r\n  lineOfSightMatW.Fragment_Custom_Diffuse(gameAreaTemplate);\r\n\r\n  var lineOfSightMMatW = new CustomMaterial(\"losMatMW\", scene);\r\n  lineOfSightMMatW.alpha = lineOfSightTransparency;\r\n  lineOfSightMMatW.Fragment_Custom_Diffuse(gameAreaTemplate);\r\n\r\n  var lineOfSightLMatW = new CustomMaterial(\"losMatLW\", scene);\r\n  lineOfSightLMatW.alpha = lineOfSightTransparency;\r\n  lineOfSightLMatW.Fragment_Custom_Diffuse(gameAreaTemplate);\r\n\r\n  var lineOfSightXLMatW = new CustomMaterial(\"losMatXLW\", scene);\r\n  lineOfSightXLMatW.alpha = lineOfSightTransparency;\r\n  lineOfSightXLMatW.Fragment_Custom_Diffuse(gameAreaTemplate);\r\n\r\n  var lineOfSightMatB = new CustomMaterial(\"losMatSB\", scene);\r\n  lineOfSightMatB.alpha = lineOfSightTransparency;\r\n  lineOfSightMatB.Fragment_Custom_Diffuse(gameAreaTemplate);\r\n\r\n  var lineOfSightMMatB = new CustomMaterial(\"losMatMB\", scene);\r\n  lineOfSightMMatB.alpha = lineOfSightTransparency;\r\n  lineOfSightMMatB.Fragment_Custom_Diffuse(gameAreaTemplate);\r\n\r\n  var lineOfSightLMatB = new CustomMaterial(\"losMatLB\", scene);\r\n  lineOfSightLMatB.alpha = lineOfSightTransparency;\r\n  lineOfSightLMatB.Fragment_Custom_Diffuse(gameAreaTemplate);\r\n\r\n  var lineOfSightXLMatB = new CustomMaterial(\"losMatXLB\", scene);\r\n  lineOfSightXLMatB.alpha = lineOfSightTransparency;\r\n  lineOfSightXLMatB.Fragment_Custom_Diffuse(gameAreaTemplate);\r\n\r\n  //Game initiation\r\n  // Associate Users with teams (teamWhite || teamBlack);\r\n  // example: teamWhite.player = \"@jrej\";\r\n  // example: teamBlack.player = \"@inkito\";\r\n  // Proceed to initiative roll to decide currentPlayer;\r\n  var currentPlayer = {\r\n    team: \"teamWhite\",\r\n    get name() { return players[this.team].name },\r\n    get army() { return players[this.team].armyStats },\r\n    get startActions() { return players[this.team].startActions },\r\n    get turnActions() { return players[this.team].turnActions },\r\n  };\r\n\r\n  var enemyPlayer = {\r\n    get team() { return currentPlayer.team === \"teamWhite\" ? \"teamBlack\" : \"teamWhite\" },\r\n    get name() { return players[currentPlayer.team === \"teamWhite\" ? \"teamBlack\" : \"teamWhite\"].name },\r\n    get army() { return players[currentPlayer.team === \"teamWhite\" ? \"teamBlack\" : \"teamWhite\"].armyStats }\r\n  }\r\n\r\n  //Action managers  \r\n  var mapActionManager = new BABYLON.ActionManager(scene);\r\n  var moveActionManager = new BABYLON.ActionManager(scene);\r\n  var teamBlackActionManager = new BABYLON.ActionManager(scene);\r\n  var teamWhiteActionManager = new BABYLON.ActionManager(scene);\r\n\r\n  var actionToken;\r\n\r\n  const importActionTokens = () => {\r\n    BABYLON.SceneLoader.ImportMesh(\r\n      \"\",\r\n      `.${publicURL}/Models/`,\r\n      \"token.babylon\",\r\n      scene,\r\n      function (newMeshes) {\r\n        actionToken = BABYLON.Mesh.MergeMeshes(newMeshes);\r\n        actionToken.position = new BABYLON.Vector3(150, -18, 440);\r\n        actionToken.scaling = new BABYLON.Vector3(800, 900, 800);\r\n        actionToken.name = \"token\"\r\n        actionToken.id = \"token1\"\r\n        actionToken.material = currentPlayer.team === \"teamWhite\" ? tokenMaterialWhite : tokenMaterialBlack;\r\n\r\n        var dx = actionToken.position.x;\r\n        var NB_CLONES = currentPlayer.startActions - 1;\r\n        var actionClone;\r\n        for (var nbclone = 0; nbclone < NB_CLONES; nbclone++) {\r\n          actionClone = actionToken.clone(`token${nbclone + 2}`);\r\n          actionClone.name = \"token\";\r\n          let randomX = Math.floor(Math.random() * 40) + 50;\r\n          actionClone.position.x = dx - randomX;\r\n          actionClone.position.z = actionToken.position.z + Math.floor(Math.random() * 30) - 15;\r\n          dx = dx - randomX;\r\n        };\r\n        gameUpdate.resetTurnActions(currentPlayer.team);\r\n      }\r\n    );\r\n  }\r\n  importActionTokens();\r\n\r\n  var dice1;\r\n  var dice2;\r\n  var dice3;\r\n  var dice4;\r\n  var dice5;\r\n  var dice6;\r\n  var dice = [];\r\n  BABYLON.SceneLoader.ImportMesh(\r\n    \"\",\r\n    `.${publicURL}/Models/`,\r\n    \"dice.babylon\",\r\n    scene,\r\n    function (newMeshes) {\r\n      dice1 = BABYLON.Mesh.MergeMeshes(newMeshes);\r\n      dice1.scaling = new BABYLON.Vector3(20, 20, 20);\r\n      dice1.translate(BABYLON.Axis.Y, 30, scene);\r\n      dice1.translate(BABYLON.Axis.X, 175, scene);\r\n      dice1.translate(BABYLON.Axis.Z, 50, scene);\r\n      shadowGenerator.getShadowMap().renderList.push(dice1);\r\n      dice1.id = \"dice1\";\r\n      dice1.name = \"dice\";\r\n      dice1.checkCollisions = true;\r\n      dice1.collisionGroup = 1;\r\n      dice1.collisionMask = 1;\r\n\r\n      dice1.setEnabled(false);\r\n      dice.push(dice1);\r\n    }\r\n  );\r\n\r\n  BABYLON.SceneLoader.ImportMesh(\r\n    \"\",\r\n    `.${publicURL}/Models/`,\r\n    \"dice2.babylon\",\r\n    scene,\r\n    function (newMeshes) {\r\n      dice2 = BABYLON.Mesh.MergeMeshes(newMeshes);\r\n      dice2.scaling = new BABYLON.Vector3(20, 20, 20);\r\n      dice2.rotation.y = BABYLON.Tools.ToRadians(90);\r\n      dice2.rotation.x = BABYLON.Tools.ToRadians(90);\r\n      dice2.translate(BABYLON.Axis.Y, 33, scene);\r\n      dice2.translate(BABYLON.Axis.X, 175, scene);\r\n      dice2.translate(BABYLON.Axis.Z, 50, scene);\r\n      shadowGenerator.getShadowMap().renderList.push(dice2);\r\n      dice2.id = \"dice2\";\r\n      dice2.name = \"dice\";\r\n      dice2.checkCollisions = true;\r\n      dice2.collisionGroup = 1;\r\n      dice2.collisionMask = 1;\r\n\r\n      dice2.setEnabled(false);\r\n      dice.push(dice2);\r\n    }\r\n  );\r\n\r\n  BABYLON.SceneLoader.ImportMesh(\r\n    \"\",\r\n    `.${publicURL}/Models/`,\r\n    \"dice3.babylon\",\r\n    scene,\r\n    function (newMeshes) {\r\n      dice3 = BABYLON.Mesh.MergeMeshes(newMeshes);\r\n      dice3.scaling = new BABYLON.Vector3(20, 20, 20);\r\n      dice3.translate(BABYLON.Axis.Y, 33, scene);\r\n      dice3.translate(BABYLON.Axis.X, 175, scene);\r\n      dice3.translate(BABYLON.Axis.Z, 50, scene);\r\n      shadowGenerator.getShadowMap().renderList.push(dice3);\r\n      dice3.id = \"dice3\";\r\n      dice3.name = \"dice\";\r\n      dice3.checkCollisions = true;\r\n      dice3.collisionGroup = 1;\r\n      dice3.collisionMask = 1;\r\n\r\n      dice3.setEnabled(false);\r\n      dice.push(dice3);\r\n    }\r\n  );\r\n\r\n  BABYLON.SceneLoader.ImportMesh(\r\n    \"\",\r\n    `.${publicURL}/Models/`,\r\n    \"dice4.babylon\",\r\n    scene,\r\n    function (newMeshes) {\r\n      dice4 = BABYLON.Mesh.MergeMeshes(newMeshes);\r\n      dice4.scaling = new BABYLON.Vector3(20, 20, 20);\r\n      dice4.translate(BABYLON.Axis.Y, 33, scene);\r\n      dice4.translate(BABYLON.Axis.X, 175, scene);\r\n      dice4.translate(BABYLON.Axis.Z, 50, scene);\r\n      shadowGenerator.getShadowMap().renderList.push(dice4);\r\n      dice4.id = \"dice4\";\r\n      dice4.name = \"dice\";\r\n      dice4.checkCollisions = true;\r\n      dice4.collisionGroup = 1;\r\n      dice4.collisionMask = 1;\r\n\r\n      dice4.setEnabled(false);\r\n      dice.push(dice4);\r\n    }\r\n  );\r\n\r\n  BABYLON.SceneLoader.ImportMesh(\r\n    \"\",\r\n    `.${publicURL}/Models/`,\r\n    \"dice5.babylon\",\r\n    scene,\r\n    function (newMeshes) {\r\n      dice5 = BABYLON.Mesh.MergeMeshes(newMeshes);\r\n      dice5.scaling = new BABYLON.Vector3(20, 20, 20);\r\n      dice5.rotation.x = BABYLON.Tools.ToRadians(180);\r\n      dice5.translate(BABYLON.Axis.Y, 33, scene);\r\n      dice5.translate(BABYLON.Axis.X, 175, scene);\r\n      dice5.translate(BABYLON.Axis.Z, 50, scene);\r\n      shadowGenerator.getShadowMap().renderList.push(dice5);\r\n      dice5.id = \"dice5\";\r\n      dice5.name = \"dice\";\r\n      dice5.checkCollisions = true;\r\n      dice5.collisionGroup = 1;\r\n      dice5.collisionMask = 1;\r\n\r\n      dice5.setEnabled(false);\r\n      dice.push(dice5);\r\n    }\r\n  );\r\n\r\n  BABYLON.SceneLoader.ImportMesh(\r\n    \"\",\r\n    `.${publicURL}/Models/`,\r\n    \"dice6.babylon\",\r\n    scene,\r\n    function (newMeshes) {\r\n      dice6 = BABYLON.Mesh.MergeMeshes(newMeshes);\r\n      dice6.scaling = new BABYLON.Vector3(20, 20, 20);\r\n      dice6.translate(BABYLON.Axis.Y, 33, scene);\r\n      dice6.translate(BABYLON.Axis.X, 175, scene);\r\n      dice6.translate(BABYLON.Axis.Z, 50, scene);\r\n      dice6.rotate(BABYLON.Axis.Y, BABYLON.Tools.ToRadians(90), scene);\r\n      shadowGenerator.getShadowMap().renderList.push(dice6);\r\n      dice6.id = \"dice6\";\r\n      dice6.name = \"dice\";\r\n      dice6.checkCollisions = true;\r\n      dice6.collisionGroup = 1;\r\n      dice6.collisionMask = 1;\r\n\r\n      dice6.setEnabled(false);\r\n      dice.push(dice6);\r\n    }\r\n  );\r\n\r\n  var miniWidth = 25.25;\r\n\r\n  var LOS = BABYLON.MeshBuilder.CreateCylinder(\"lineOfSights\", { height: 0.1, diameter: 202 * 2 + miniWidth, tessellation: 256 }, scene);\r\n  LOS.position = new BABYLON.Vector3(0, -100, 0);\r\n  var LOSM = BABYLON.MeshBuilder.CreateCylinder(\"lineOfSightm\", { height: 0.1, diameter: 404 * 2 + miniWidth, tessellation: 256 }, scene);\r\n  var LOSL = BABYLON.MeshBuilder.CreateCylinder(\"lineOfSightl\", { height: 0.1, diameter: 808 * 2 + miniWidth, tessellation: 256 }, scene);\r\n  //var LOSXL = BABYLON.MeshBuilder.CreateCylinder(\"lineOfSight\", { height: 0.1, diameter: 2424 + miniWidth, tessellation: 256 }, scene);\r\n  /*LOSXL.parent =*/ LOSL.parent = LOSM.parent = LOS;\r\n\r\n  var los = BABYLON.CSG.FromMesh(LOS);\r\n  var losM = BABYLON.CSG.FromMesh(LOSM);\r\n  var losL = BABYLON.CSG.FromMesh(LOSL);\r\n  //var losXL = BABYLON.CSG.FromMesh(LOSXL);\r\n\r\n  var slicer = BABYLON.MeshBuilder.CreateBox(\"LOSTemplate\", { width: 2424, height: 2500, depth: 1 }, scene);\r\n  slicer.rotate(BABYLON.Axis.X, BABYLON.Tools.ToRadians(90), scene);\r\n  slicer.position = new BABYLON.Vector3(1212, -100, 0);\r\n  slicer.visibility = 0;\r\n  var slicerCSG = BABYLON.CSG.FromMesh(slicer);\r\n\r\n  //losXL = losXL.subtract(slicerCSG).subtract(losL).subtract(losM).subtract(los);\r\n\r\n  losL = losL.subtract(slicerCSG).subtract(losM).subtract(los);\r\n\r\n  losM = losM.subtract(slicerCSG).subtract(los);\r\n\r\n  los = los.subtract(slicerCSG);\r\n\r\n  var lineOfSight = los.toMesh(\"lineOfSightS\");\r\n  var lineOfSightM = losM.toMesh(\"lineOfSightM\");\r\n  var lineOfSightL = losL.toMesh(\"lineOfSightL\");\r\n  //var lineOfSightXL = losXL.toMesh(\"lineOfSight\");\r\n\r\n  /*lineOfSightXL.parent =*/ lineOfSightL.parent = lineOfSightM.parent = lineOfSight;\r\n  /*lineOfSightXL.isPickable =*/ lineOfSightL.isPickable = lineOfSightM.isPickable = lineOfSight.isPickable = false;\r\n\r\n  lineOfSight.setEnabled(false);\r\n  slicer.dispose();\r\n  LOS.dispose();\r\n  LOSM.dispose();\r\n  LOSL.dispose();\r\n  //LOSXL.dispose();\r\n\r\n\r\n  const getLosColor = (unit, team, range) => {\r\n    var losColorBad = new BABYLON.Color3(164 / 255, 27 / 255, 7 / 255); //red\r\n    var losColorMalus = new BABYLON.Color3(215 / 255, 195 / 255, 58 / 255); //yellow\r\n    var losColorZero = new BABYLON.Color3(7 / 255, 66 / 255, 164 / 255); //blue\r\n    var losColorBonus = new BABYLON.Color3(7 / 255, 164 / 255, 27 / 255); //green\r\n\r\n    if (players[team].armyStats.units[unit].range.mods[range] > 0) {\r\n      return losColorBonus;\r\n    } else if (players[team].armyStats.units[unit].range.mods[range] === 0) {\r\n      return losColorZero;\r\n    } else if (players[team].armyStats.units[unit].range.mods[range] === -1) {\r\n      return losColorMalus;\r\n    } else if (players[team].armyStats.units[unit].range.mods[range] <= -2) {\r\n      return losColorBad;\r\n    }\r\n  }\r\n\r\n  const getHeight = (mesh) => {\r\n    return mesh.getBoundingInfo().boundingBox.extendSize.y * 2 * mesh.scaling.y\r\n  };\r\n\r\n  const getWidth = (mesh) => {\r\n    return mesh.getBoundingInfo().boundingBox.extendSize.x * 2 * mesh.scaling.x\r\n  };\r\n\r\n  const getLength = (mesh) => {\r\n    return mesh.getBoundingInfo().boundingBox.extendSize.z * 2 * mesh.scaling.z\r\n  };\r\n\r\n  const getControlByName = (name) => {\r\n    return advancedTexture._rootContainer._children.filter(control => control.name === name)[0]\r\n  }\r\n\r\n  async function asyncForEach(array, callback) {\r\n    for (let index = 0; index < array.length; index++) {\r\n      await callback(array[index], index, array);\r\n    }\r\n  }\r\n\r\n  var shield;\r\n  BABYLON.SceneLoader.ImportMesh(\r\n    \"\",\r\n    `.${publicURL}/Models/`,\r\n    \"shield.babylon\",\r\n    scene,\r\n    function (newMeshes) {\r\n      shield = BABYLON.Mesh.MergeMeshes(newMeshes);\r\n      shield.scaling = new BABYLON.Vector3(6, 5, 10);\r\n      shield.translate(BABYLON.Axis.Y, 80, scene);\r\n      shadowGenerator.getShadowMap().renderList.push(shield);\r\n      shield.id = \"shield\";\r\n      shield.name = \"shield\";\r\n\r\n      shield.setEnabled(false);\r\n    }\r\n  );\r\n\r\n  /*const createTextPlane = (mini) => {\r\n    let miniPlane = new BABYLON.Mesh.CreatePlane(`${mini.id}TextPlane`, 150, scene, true);\r\n    miniPlane.material = new BABYLON.StandardMaterial(`${mini.id}TextMat`, scene);\r\n    miniPlane.material.diffuseTexture = new BABYLON.DynamicTexture(`${mini.id}DynamicTexture`, { width: 100, height: 100 }, scene);\r\n    miniPlane.material.diffuseTexture.hasAlpha = true;\r\n    miniPlane.position = new BABYLON.Vector3(0, 40, 0);\r\n    miniPlane.parent = mini;\r\n    return miniPlane;\r\n  };*/\r\n\r\n  const createBase = (mini, team) => {\r\n    let base = BABYLON.MeshBuilder.CreateCylinder(`${mini.id}Base`, { height: 2.5, diameter: 27, tessellation: 128 }, scene);\r\n    base.material = new BABYLON.StandardMaterial(`baseMaterial${mini.id}`, scene);\r\n    base.material.diffuseColor = team === \"Black\" ? new BABYLON.Color3.Black() : new BABYLON.Color3.White();\r\n    base.position = new BABYLON.Vector3(0, 1.5, 0);\r\n    base.parent = mini;\r\n    return base;\r\n  };\r\n\r\n  const createLOS = (mini, team) => {\r\n    var miniLOS = lineOfSight.clone();\r\n    miniLOS.id = `${mini.id}lineOfSight`;\r\n    miniLOS.name = `${mini.id}lineOfSight`;\r\n    miniLOS.parent = mini;\r\n    miniLOS.position = new BABYLON.Vector3(0, 1, 0);\r\n    miniLOS.rotation.y = BABYLON.Tools.ToRadians(-90);\r\n    miniLOS.setEnabled(false);\r\n    miniLOS.material = team === \"Black\" ? lineOfSightMatB : lineOfSightMatW;\r\n    miniLOS._children[0].material = team === \"Black\" ? lineOfSightMMatB : lineOfSightMMatW;\r\n    miniLOS._children[1].material = team === \"Black\" ? lineOfSightLMatB : lineOfSightLMatW;\r\n    //miniLOS._children[2].material = team === \"Black\" ? lineOfSightXLMatB : lineOfSightXLMatW;\r\n    if (team === \"Black\") {\r\n      mini.losMat = [lineOfSightMatB.name, lineOfSightMMatB.name, lineOfSightLMatB.name, lineOfSightXLMatB.name]\r\n      lineOfSightMatB.diffuseColor = getLosColor(mini.unit, `team${team}`, \"s\"); //blue\r\n      lineOfSightMMatB.diffuseColor = getLosColor(mini.unit, `team${team}`, \"m\"); //green\r\n      lineOfSightLMatB.diffuseColor = getLosColor(mini.unit, `team${team}`, \"l\"); //yellow\r\n      //lineOfSightXLMatB.diffuseColor = getLosColor(mini.unit, `team${team}`, \"xl\"); //yellow  \r\n    } else {\r\n      mini.losMat = [lineOfSightMatW.name, lineOfSightMMatW.name, lineOfSightLMatW.name, lineOfSightXLMatW.name]\r\n      lineOfSightMatW.diffuseColor = getLosColor(mini.unit, `team${team}`, \"s\"); //blue\r\n      lineOfSightMMatW.diffuseColor = getLosColor(mini.unit, `team${team}`, \"m\"); //green\r\n      lineOfSightLMatW.diffuseColor = getLosColor(mini.unit, `team${team}`, \"l\"); //yellow\r\n      //lineOfSightXLMatW.diffuseColor = getLosColor(mini.unit, `team${team}`, \"xl\"); //yellow\r\n    }\r\n    return miniLOS;\r\n  };\r\n\r\n  const createShield = (mini, team) => {\r\n    let miniShield = shield.clone(`${mini.id}shield`);\r\n    miniShield.material = new BABYLON.StandardMaterial(`shieldMaterial${mini.id}`, scene);\r\n    miniShield.material.diffuseColor = team === \"Black\" ? new BABYLON.Color3.Black() : new BABYLON.Color3.White();\r\n    miniShield.parent = mini;\r\n    miniShield.position = new BABYLON.Vector3(0, 55, 0);\r\n    miniShield.setEnabled(false);\r\n    return miniShield;\r\n  }\r\n  var clonedMini;\r\n  //STLRW\r\n\r\n  var targetFurthestMini = () => {\r\n    if (players[currentPlayer.team].minis && players[currentPlayer.team].minis.length > 0) {\r\n      var miniPosition = players[currentPlayer.team].minis.map(mini => mini.position.x);\r\n      var furthestMiniIndex = currentPlayer.team === \"teamWhite\" ? miniPosition.indexOf(Math.min(...miniPosition)) : miniPosition.indexOf(Math.max(...miniPosition));\r\n      var furthestMini = players[currentPlayer.team].minis[furthestMiniIndex];\r\n      var furthestTarget = BABYLON.Mesh.CreateSphere(\"targetSphere\", { size: 10 }, scene);\r\n      furthestTarget.setEnabled(false);\r\n      furthestTarget.position = new BABYLON.Vector3(furthestMini.position.x, furthestMini.position.y + 30, 0);\r\n      camera.setTarget(furthestTarget);\r\n      setTimeout(() => {\r\n        furthestTarget.dispose();\r\n      }, 1100)\r\n    }\r\n  };\r\n\r\n  const importMiniModel = (miniUnit, team, index) => {\r\n    BABYLON.SceneLoader.ImportMesh(\r\n      \"\",\r\n      `.${publicURL}/Models/`,\r\n      `${miniUnit}.babylon`,\r\n      scene,\r\n      function (newMeshes) {\r\n        let mini = BABYLON.Mesh.MergeMeshes(newMeshes);\r\n        mini.translate(BABYLON.Axis.Y, 25, scene);\r\n        mini.translate(BABYLON.Axis.X, team === \"Black\" ? -300 : 300, scene);\r\n        mini.translate(BABYLON.Axis.Z, -200 + 200 * index, scene);\r\n        mini.id = `${team.toLowerCase()}Mini${index + 1}`;\r\n        mini.unit = miniUnit;\r\n        mini.team = `team${team}`;\r\n        mini.class = players[mini.team].armyStats.units[miniUnit].class;\r\n        mini.name = players[mini.team].armyStats.units[miniUnit].name;\r\n        mini.rotation.y = team === \"Black\" ? BABYLON.Tools.ToRadians(-90) : BABYLON.Tools.ToRadians(90);\r\n        mini.material = miniMaterial;\r\n        mini.actionManager = team === \"Black\" ? teamBlackActionManager : teamWhiteActionManager;\r\n        mini.enablePointerMoveEvents = true;\r\n\r\n        mini.width = getWidth(mini);\r\n        mini.height = getHeight(mini);\r\n\r\n        createBase(mini, team);\r\n        createLOS(mini, team);\r\n        createShield(mini, team);\r\n        //createTextPlane(mini);\r\n\r\n        shadowGenerator.getShadowMap().renderList.push(mini);\r\n        gameUpdate.addImportedMini(mini,`team${team}`);\r\n        if (players.teamWhite.minis && players.teamWhite.minis.length === players.teamWhite.units.length) {\r\n          targetFurthestMini();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  const importAllModels = () => {\r\n    players.teamBlack.units.forEach((miniName, index) => importMiniModel(miniName, \"Black\", index))\r\n    players.teamWhite.units.forEach((miniName, index) => importMiniModel(miniName, \"White\", index))\r\n  }\r\n  importAllModels();\r\n\r\n  var obstacles = [];\r\n  BABYLON.SceneLoader.ImportMesh(\r\n    \"\",\r\n    `.${publicURL}/Models/`,\r\n    \"container.babylon\",\r\n    scene,\r\n    function (newMeshes) {\r\n      var container = BABYLON.Mesh.MergeMeshes(newMeshes);\r\n\r\n      //container.material = diceMaterial;\r\n      container.scaling = new BABYLON.Vector3(2, 2, 2);\r\n      container.id = \"obstacle1\";\r\n      container.name = \"obstacle\";\r\n      container.receiveShadows = true;\r\n\r\n      container.width = getWidth(container);\r\n      container.length = getLength(container);\r\n      container.height = getHeight(container);\r\n\r\n      var redMat = new BABYLON.StandardMaterial(scene);\r\n      redMat.diffuseColor = new BABYLON.Color3(0.518, 0.271, 0.267);\r\n\r\n      var greyMat = new BABYLON.StandardMaterial(scene);\r\n      greyMat.diffuseColor = new BABYLON.Color3(0.671, 0.663, 0.733);\r\n\r\n      var greenMat = new BABYLON.StandardMaterial(scene);\r\n      greenMat.diffuseColor = new BABYLON.Color3(0.318, 0.502, 0.43);\r\n\r\n      var container0 = container.clone(\"obstacle\")\r\n      container0.position = new BABYLON.Vector3(22, 0, 2.5);\r\n      var container2 = container.clone(\"obstacle\")\r\n      container2.position = new BABYLON.Vector3(-22, 0, 2.5);\r\n\r\n      var container02 = BABYLON.Mesh.MergeMeshes([container0, container2]);\r\n      container02.material = redMat;\r\n      container02.name = container02.id = \"obstacle\";\r\n      container02.position = new BABYLON.Vector3(180, 50, 125);\r\n      container0.dispose();\r\n      container2.dispose();\r\n\r\n      var container3 = container.clone(\"obstacle\")\r\n      container3.position = new BABYLON.Vector3(100, 50, -125);\r\n      container3.material = redMat;\r\n\r\n      var container4 = container.clone(\"obstacle\")\r\n      container4.position = new BABYLON.Vector3(150, 50, -125);\r\n\r\n      var container5 = container.clone(\"obstacle\")\r\n      container5.position = new BABYLON.Vector3(-100, 50, 125);\r\n\r\n      var container6 = container.clone(\"obstacle\")\r\n      container6.position = new BABYLON.Vector3(-150, 50, 125);\r\n      container6.material = redMat;\r\n\r\n      var container7 = container.clone(\"obstacle\")\r\n      container7.position = new BABYLON.Vector3(22, 0, 2.5);\r\n\r\n      var container8 = container.clone(\"obstacle\")\r\n      container8.position = new BABYLON.Vector3(-22, 0, 2.5);\r\n\r\n      var container78 = BABYLON.Mesh.MergeMeshes([container7, container8]);\r\n      container78.material = greenMat;\r\n      container78.name = container78.id = \"obstacle\";\r\n      container78.position = new BABYLON.Vector3(-180, 50, -125);\r\n      container7.dispose();\r\n      container8.dispose();\r\n\r\n      var container9 = container.clone(\"obstacle\")\r\n      container9.position = new BABYLON.Vector3(-180, 100, -150);\r\n      container9.scaling.z = 1;\r\n\r\n      var container10 = container.clone(\"obstacle\")\r\n      container10.position = new BABYLON.Vector3(180, 100, 100);\r\n      container10.scaling.z = 1;\r\n      container10.material = greyMat;\r\n\r\n      var container11 = container.clone(\"obstacle\")\r\n      container11.position = new BABYLON.Vector3(250, 38, 150);\r\n      container11.scaling.z = 1;\r\n      container11.scaling.y = 1;\r\n      container11.material = greenMat;\r\n\r\n      var container12 = container.clone(\"obstacle\")\r\n      container12.position = new BABYLON.Vector3(-250, 38, -100);\r\n      container12.scaling.z = 1;\r\n      container12.scaling.y = 1;\r\n      container12.material = redMat;\r\n\r\n      shadowGenerator.getShadowMap().renderList.push(container02, container3, container4, container5, container6, container78, container9, container10, container11, container12);\r\n      obstacles.push(container02, container3, container4, container5, container6, container78, container9, container10, container11, container12);\r\n\r\n      container.setEnabled(false);\r\n    }\r\n  );\r\n\r\n  var moveArea = BABYLON.MeshBuilder.CreateCylinder(\"moveArea\", { height: 0.25, diameter: miniWidth * 8, tessellation: 256 }, scene);\r\n  moveArea.material = invisibleMaterial;\r\n  moveArea.actionManager = moveActionManager;\r\n  moveArea.setEnabled(false);\r\n  moveArea.position = new BABYLON.Vector3(0, 26, 0);\r\n\r\n  var moveArea2 = BABYLON.MeshBuilder.CreateCylinder(\"moveArea\", { height: 0.25, diameter: miniWidth * 8 + miniWidth, tessellation: 256 }, scene);\r\n  moveArea2.material = moveAreaMat;\r\n  moveArea2.parent = moveArea;\r\n\r\n  var board;\r\n  var map;\r\n  BABYLON.SceneLoader.ImportMesh(\r\n    \"\",\r\n    \"\",\r\n    `.${publicURL}/Models/setting.babylon`,\r\n    scene,\r\n    function (newMeshes) {\r\n      board = newMeshes[0];\r\n      board.scaling = new BABYLON.Vector3(1150, 1200, 1000);\r\n      board.material = boardMaterial;\r\n      shadowGenerator.getShadowMap().renderList.push(board);\r\n\r\n      map = BABYLON.MeshBuilder.CreateBox(\"map\", { width: 808, height: 606, depth: 1 }, scene);\r\n      map.rotate(BABYLON.Axis.X, BABYLON.Tools.ToRadians(90), scene);\r\n      map.material = groundMaterial;\r\n      map.receiveShadows = true;\r\n      map.translate(BABYLON.Axis.Y, 25, scene);\r\n      map.actionManager = mapActionManager;\r\n    }\r\n  );\r\n  //board is 24 inch to 32 inch;\r\n\r\n  //Should import action tokens after switching Player\r\n  var switchPlayer = () => {\r\n    if (currentPlayer.team === \"teamWhite\") {\r\n      currentPlayer.team = \"teamBlack\";\r\n      camera.position = new BABYLON.Vector3(-700, 300, 0);\r\n      targetFurthestMini();\r\n    } else if (currentPlayer.team === \"teamBlack\") {\r\n      currentPlayer.team = \"teamWhite\";\r\n      camera.position = new BABYLON.Vector3(700, 300, 0);\r\n      targetFurthestMini();\r\n    }\r\n    importActionTokens();\r\n    gameUpdate.setCurrentPlayer({name: currentPlayer.name, team: currentPlayer.team });\r\n  };\r\n\r\n  //Mini selected by player1;\r\n  var selected = \"\";\r\n  var targets = [];\r\n  var inAttack = false;\r\n  var rotate = false;\r\n  var previous = {\r\n    position: null,\r\n    rotation: null\r\n  };\r\n\r\n  const cancelTargeting = () => {\r\n    targets.forEach(target => {\r\n      hl.removeMesh(target);\r\n      if (scene.getMeshByName(`${selected.id}To${target.id}`)) {\r\n        scene.removeMesh(scene.getMeshByName(`${selected.id}To${target.id}`));\r\n      }\r\n    });\r\n    targets = [];\r\n    if (scene.getMeshByName(\"directLOS\")) {\r\n      scene.getMeshByName(\"directLOS\").dispose();\r\n    }\r\n    players[enemyPlayer.team].minis.forEach(mini => {\r\n      if (scene.getMeshByName(`${mini.id}To${selected.id}`)) {\r\n        scene.removeMesh(scene.getMeshByName(`${mini.id}To${selected.id}`));\r\n      }\r\n      removeDiceStat(mini);\r\n      mini.diceAssigned = 0;\r\n    })\r\n    advancedTexture.removeControl(rollButton);\r\n  }\r\n\r\n  var selection = function (evt) {\r\n    //left click\r\n    if (evt.sourceEvent.which === 1) {\r\n      let currentMesh = evt.meshUnderPointer;\r\n      scene.hoverCursor = \"pointer\";\r\n      if (selected === currentMesh) {\r\n        if (targets.length === 0) {\r\n          moveAction({ skip: true });\r\n        }\r\n        //camera.setTarget(board);\r\n      } else if (currentMesh.id.includes(\"Mini\")) {\r\n        if (selected) {\r\n          hl.removeMesh(selected);\r\n        }\r\n        if (currentPlayer.turnActions > 0) {\r\n          cancelTargeting();\r\n          hl.addMesh(currentMesh, BABYLON.Color3.White());\r\n          hl.addMesh(moveArea, BABYLON.Color3.White());\r\n          selected = currentMesh;\r\n          previous.position = selected.position;\r\n          moveArea.position = new BABYLON.Vector3(currentMesh.position.x, 26, currentMesh.position.z)\r\n          moveArea.setEnabled(true);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  var cancelSelection = () => {\r\n    if (selected && rotate && !inAttack) {\r\n      if (previous.position) {\r\n        selected.position = previous.position;\r\n        selected.rotation = previous.rotation;\r\n        moveArea.setEnabled(true);\r\n        moveArea.position = new BABYLON.Vector3(previous.position.x, 26, previous.position.z);\r\n        scene.getMeshByName(`${selected.id}lineOfSight`).setEnabled(false);\r\n        if (scene.getMeshByName(`groundLOS${selected.id}`)) {\r\n          scene.getMeshByName(`groundLOS${selected.id}`).setEnabled(false);\r\n        }\r\n      }\r\n      canvas.removeEventListener(\"mousemove\", rotateOnMouseMove);\r\n      rotate = false;\r\n    } else if (selected && !rotate) {\r\n      moveArea.setEnabled(false);\r\n      hl.removeMesh(selected);\r\n      hl.removeMesh(moveArea);\r\n      cancelTargeting();\r\n      scene.removeMesh(clonedMini);\r\n      scene.getMeshByName(`${selected.id}lineOfSight`).setEnabled(false);\r\n      if (scene.getMeshByName(`groundLOS${selected.id}`)) {\r\n        scene.getMeshByName(`groundLOS${selected.id}`).setEnabled(false);\r\n      }\r\n      targetFurthestMini();\r\n      selected = \"\";\r\n      scene.hoverCursor = \"pointer\";\r\n      if (clonedMini) {\r\n        clonedMini.dispose();\r\n      }\r\n    }\r\n  }\r\n\r\n  const noObstacle = (mini1, mini2) => {\r\n    let origin = new BABYLON.Vector3(mini1.position.x, mini1.position.y + getHeight(mini1) * 0.75, mini1.position.z);\r\n\r\n    let targetLeft = new BABYLON.Vector3(mini2.position.x, mini2.position.y + getHeight(mini2) * 0.75, mini2.position.z - mini2.width / 2 + mini2.width * 0.25);\r\n    let targetRight = new BABYLON.Vector3(mini2.position.x, mini2.position.y + getHeight(mini2) * 0.75, mini2.position.z + mini2.width / 2 - mini2.width * 0.25);\r\n\r\n    let directionLeft = targetLeft.subtract(origin);\r\n    directionLeft = BABYLON.Vector3.Normalize(directionLeft);\r\n\r\n    let directionRight = targetRight.subtract(origin);\r\n    directionRight = BABYLON.Vector3.Normalize(directionRight);\r\n\r\n    let length = BABYLON.Vector3.Distance(mini1.position, mini2.position) - getWidth(mini2) / 2;\r\n\r\n    let rayLeft = new BABYLON.Ray(origin, directionLeft, length);\r\n    let rayRight = new BABYLON.Ray(origin, directionRight, length);\r\n\r\n    //let rayHelperLeft = new BABYLON.RayHelper(rayLeft);\r\n    //let rayHelperRight = new BABYLON.RayHelper(rayRight);\r\n    //rayHelperLeft.show(scene);\r\n    //rayHelperRight.show(scene);\r\n\r\n    let hitsLeft = scene.multiPickWithRay(rayLeft);\r\n    let hitsRight = scene.multiPickWithRay(rayRight);\r\n\r\n    if (hitsLeft.some(hit => hit.pickedMesh.name.includes(\"obstacle\")) && hitsRight.some(hit => hit.pickedMesh.name.includes(\"obstacle\"))) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const isInCover = (mini1, mini2) => {\r\n    let originLeft = new BABYLON.Vector3(mini1.position.x, mini1.position.y + 5, mini1.position.z - mini1.width / 2);\r\n    let originRight = new BABYLON.Vector3(mini1.position.x, mini1.position.y + 5, mini1.position.z + mini1.width / 2);\r\n\r\n    let target = new BABYLON.Vector3(mini2.position.x, mini2.position.y + 5, mini2.position.z);\r\n\r\n    let directionLeft = target.subtract(originLeft);\r\n    directionLeft = BABYLON.Vector3.Normalize(directionLeft);\r\n\r\n    let directionRight = target.subtract(originRight);\r\n    directionRight = BABYLON.Vector3.Normalize(directionRight);\r\n\r\n    let length = getWidth(mini1) / 2 + getWidth(mini1);\r\n\r\n    let rayLeft = new BABYLON.Ray(originLeft, directionLeft, length);\r\n    let rayRight = new BABYLON.Ray(originRight, directionRight, length);\r\n\r\n    //let rayHelperLeft = new BABYLON.RayHelper(rayLeft);\r\n    //let rayHelperRight = new BABYLON.RayHelper(rayRight);\r\n    //rayHelperLeft.show(scene);\r\n    //rayHelperRight.show(scene);\r\n\r\n    let hitsLeft = scene.multiPickWithRay(rayLeft);\r\n    let hitsRight = scene.multiPickWithRay(rayRight);\r\n\r\n    if (hitsLeft.some(hit => hit.pickedMesh.name.includes(\"obstacle\"))) {\r\n      return true;\r\n    } else if (hitsRight.some(hit => hit.pickedMesh.name.includes(\"obstacle\"))) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const isInAngle = (mini1, mini2) => {\r\n    //Check here if angle forward and target < 90deg\r\n    let forward = forwardDirection(mini1);\r\n\r\n    let origin = new BABYLON.Vector3(mini1.position.x, 55, mini1.position.z);\r\n\r\n    let target = new BABYLON.Vector3(mini2.position.x, 55, mini2.position.z);\r\n\r\n    let directionTarget = target.subtract(origin);\r\n    directionTarget = BABYLON.Vector3.Normalize(directionTarget);\r\n\r\n    if (Math.acos(BABYLON.Vector3.Dot(forward, directionTarget)) * 180 / Math.PI > 90) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    };\r\n  };\r\n\r\n  const isHigher = (mini1, mini2) => {\r\n    if (mini1.position.y > mini2.position.y + getHeight(mini2)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    };\r\n  };\r\n\r\n  const whatIsUnderneath = (mini) => {\r\n    let origin = new BABYLON.Vector3(mini.position.x, mini.position.y, mini.position.z + getWidth(mini) / 2);\r\n    let origin2 = new BABYLON.Vector3(mini.position.x, mini.position.y, mini.position.z - getWidth(mini) / 2);\r\n    let origin3 = new BABYLON.Vector3(mini.position.x + getWidth(mini) / 2, mini.position.y, mini.position.z);\r\n    let origin4 = new BABYLON.Vector3(mini.position.x - getWidth(mini) / 2, mini.position.y, mini.position.z);\r\n\r\n    let direction = new BABYLON.Vector3(0, -1, 0);\r\n\r\n    let length = getHeight(mini) / 2;\r\n\r\n    let ray = new BABYLON.Ray(origin, direction, length);\r\n    let ray2 = new BABYLON.Ray(origin2, direction, length);\r\n    let ray3 = new BABYLON.Ray(origin3, direction, length);\r\n    let ray4 = new BABYLON.Ray(origin4, direction, length);\r\n\r\n    let hits = scene.multiPickWithRay(ray);\r\n    let hits2 = scene.multiPickWithRay(ray2);\r\n    let hits3 = scene.multiPickWithRay(ray3);\r\n    let hits4 = scene.multiPickWithRay(ray4);\r\n\r\n    if (hits.some(hit => hit.pickedMesh.name.includes(\"obstacle\"))) {\r\n      return hits.filter(hit => hit.pickedMesh.name.includes(\"obstacle\")).map(hit => hit.pickedMesh)[0]\r\n    } else if (hits2.some(hit => hit.pickedMesh.name.includes(\"obstacle\"))) {\r\n      return hits2.filter(hit => hit.pickedMesh.name.includes(\"obstacle\")).map(hit => hit.pickedMesh)[0]\r\n    } else if (hits3.some(hit => hit.pickedMesh.name.includes(\"obstacle\"))) {\r\n      return hits3.filter(hit => hit.pickedMesh.name.includes(\"obstacle\")).map(hit => hit.pickedMesh)[0]\r\n    } else if (hits4.some(hit => hit.pickedMesh.name.includes(\"obstacle\"))) {\r\n      return hits4.filter(hit => hit.pickedMesh.name.includes(\"obstacle\")).map(hit => hit.pickedMesh)[0]\r\n    } else if (hits.some(hit => hit.pickedMesh.name.includes(\"map\"))) {\r\n      return hits.filter(hit => hit.pickedMesh.name.includes(\"map\")).map(hit => hit.pickedMesh)[0]\r\n    }\r\n  };\r\n\r\n  var handleCoverLogo = (mini1, mini2) => {\r\n    if (isInCover(mini1, mini2)) {\r\n      scene.getMeshByName(`${mini1.id}shield`).setEnabled(true);\r\n    } else {\r\n      if (scene.getMeshByName(`${mini1.id}shield`)) {\r\n        scene.getMeshByName(`${mini1.id}shield`).setEnabled(false);\r\n      }\r\n    }\r\n    if (isInCover(mini2, mini1)) {\r\n      scene.getMeshByName(`${mini2.id}shield`).setEnabled(true);\r\n    } else {\r\n      if (scene.getMeshByName(`${mini2.id}shield`)) {\r\n        scene.getMeshByName(`${mini2.id}shield`).setEnabled(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  var removeCoverLogo = (mini) => {\r\n    if (scene.getMeshByName(`${mini.id}shield`)) {\r\n      scene.getMeshByName(`${mini.id}shield`).setEnabled(false);\r\n    }\r\n  }\r\n\r\n  var handleLineOfSight = (ev) => {\r\n    var enemyTarget = ev.meshUnderPointer;\r\n    if (selected && rangeToTarget(selected, enemyTarget) && calculateSuccess(selected, enemyTarget) <= 6) {\r\n      handleCoverLogo(selected, enemyTarget);\r\n      if (enemyTarget.intersectsMesh(selected, false)) {\r\n        //Melee position\r\n        //scene.hoverCursor = \"url('./Cursors/melee.cur') 10 10, auto\";\r\n\r\n      } else if (rangeToTarget(selected, enemyTarget)) {\r\n        scene.getMeshByName(`${selected.id}lineOfSight`).setEnabled(true)\r\n        if (scene.getMeshByName(`groundLOS${selected.id}`)) {\r\n          scene.getMeshByName(`groundLOS${selected.id}`).setEnabled(true);\r\n        }\r\n        moveArea.setEnabled(false);\r\n\r\n        //In range position\r\n        //scene.hoverCursor = \"url('./Cursors/aim.cur'), auto\";\r\n      } else if (!enemyTarget.intersectsMesh(selected, false) && !rangeToTarget(selected, enemyTarget)) {\r\n        //scene.hoverCursor = \"url('./Cursors/unavailable.cur') 15 15, auto\";\r\n        moveArea.setEnabled(false);\r\n        scene.getMeshByName(`${selected.id}lineOfSight`).setEnabled(true)\r\n        if (scene.getMeshByName(`groundLOS${selected.id}`)) {\r\n          scene.getMeshByName(`groundLOS${selected.id}`).setEnabled(true);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  var cancelLineOfSight = () => {\r\n    if (selected) {\r\n      scene.getMeshByName(`${selected.id}lineOfSight`).setEnabled(false);\r\n      scene.getMeshByName(`${selected.id}shield`).setEnabled(false);\r\n      players[enemyPlayer.team].minis.forEach(mini => scene.getMeshByName(`${mini.id}lineOfSight`).setEnabled(false));\r\n      if (scene.getMeshByName(`groundLOS${selected.id}`)) {\r\n        scene.getMeshByName(`groundLOS${selected.id}`).setEnabled(false);\r\n      }\r\n      if (!rotate && targets.length === 0) {\r\n        moveArea.setEnabled(true);\r\n      }\r\n      removeCoverLogo(selected);\r\n      players[enemyPlayer.team].minis.forEach(mini => {\r\n        removeCoverLogo(mini);\r\n      })\r\n    }\r\n    scene.hoverCursor = \"pointer\";\r\n  }\r\n\r\n  var diceRoll = (rolls) => {\r\n    let arrayResult = [];\r\n    for (let i = 0; i < rolls; i++) {\r\n      arrayResult.push(Math.floor(Math.random() * 6) + 1)\r\n    }\r\n\r\n    return arrayResult;\r\n  }\r\n\r\n  var cloneDice = (rolls, mini, delay, save) => {\r\n    var dicePosition1 = new BABYLON.Vector3(mini.position.x + 10, mini.position.y + 7, mini.position.z + 30)\r\n    var dicePosition2 = new BABYLON.Vector3(mini.position.x + 10, mini.position.y + 7, mini.position.z + 45)\r\n    var dicePosition3 = new BABYLON.Vector3(mini.position.x + -5, mini.position.y + 7, mini.position.z + 30)\r\n    var diceOddPosition3 = new BABYLON.Vector3(mini.position.x + -5, mini.position.y + 7, mini.position.z + 37.5)\r\n\r\n    var dicePosition4 = new BABYLON.Vector3(mini.position.x + -5, mini.position.y + 7, mini.position.z + 45)\r\n    var dicePosition5 = new BABYLON.Vector3(mini.position.x + -20, mini.position.y + 7, mini.position.z + 30)\r\n    var diceOddPosition5 = new BABYLON.Vector3(mini.position.x + -20, mini.position.y + 7, mini.position.z + 37.5)\r\n\r\n    var dicePosition6 = new BABYLON.Vector3(mini.position.x + -20, mini.position.y + 7, mini.position.z + 45)\r\n\r\n    var dicePositions = [dicePosition1, dicePosition2, dicePosition3, dicePosition4, dicePosition5, dicePosition6];\r\n\r\n    for (let i = 0; i < rolls.length; i++) {\r\n      var diceIndex = i + 1\r\n      if (save) {\r\n        dice[rolls[i] - 1].material = diceMatRed;\r\n      } else if (mini.team.includes(\"White\")) {\r\n        dice[rolls[i] - 1].material = diceMatWhite;\r\n      } else if (mini.team.includes(\"Black\")) {\r\n        dice[rolls[i] - 1].material = diceMatBlack;\r\n      }\r\n\r\n      if (rolls.length === 3 && diceIndex === 3) {\r\n        dice[rolls[i] - 1].clone(`diceClone${i}`).position = diceOddPosition3;\r\n      } else if (rolls.length === 5 && diceIndex === 5) {\r\n        dice[rolls[i] - 1].clone(`diceClone${i}`).position = diceOddPosition5;\r\n      } else {\r\n        dice[rolls[i] - 1].clone(`diceClone${i}`).position = dicePositions[i];\r\n      }\r\n\r\n      setTimeout(function () {\r\n        scene.removeMesh(scene.getMeshByName(`diceClone${i}`));\r\n      }, delay)\r\n    }\r\n  }\r\n\r\n  var compareRolls = (mini1, mini1Rolls, mini1Mod, mini2, mini2Rolls, mini2Mod) => {\r\n    //check if rolls successful, remove any unsuccessful rolls\r\n    var mini1Success = mini1Rolls.filter(roll => roll + mini1Mod >= players[mini1.team].armyStats.units[mini1.unit].range.success);\r\n    var mini2Success = mini2Rolls.filter(roll => roll + mini2Mod >= players[mini2.team].armyStats.units[mini2.unit].defense.success);\r\n    \r\n    gameUpdate.log(`${currentPlayer.name} rolls ${mini1Rolls.toString()} with ${mini1Mod === 0 ? 'no' : mini1Mod > 0 ? `a + ${mini1Mod}` : `a ${mini1Mod}`} modifier to dice roll.`);\r\n\r\n    if (mini1Success.length > 0){\r\n      gameUpdate.log(`${currentPlayer.name}'s success ${mini1Success.length > 1 ? 'rolls are' : 'roll is'} ${mini1Success.toString()}.`);\r\n    } else {\r\n      gameUpdate.log(`${currentPlayer.name} has no successful rolls.`);\r\n    }\r\n\r\n    gameUpdate.log(`${enemyPlayer.name} rolls ${mini2Rolls.toString()} with ${mini2Mod === 0 ? 'no' : mini2Mod > 0 ? `a + ${mini2Mod}` : `a ${mini2Mod}`} modifier to dice roll.`);\r\n\r\n    if (mini2Success.length > 0){\r\n      gameUpdate.log(`${enemyPlayer.name}'s success ${mini2Success.length > 1 ? 'rolls are' : 'roll is'} ${mini2Success.toString()}.`);\r\n    } else {\r\n      gameUpdate.log(`${enemyPlayer.name} has no successful rolls.`);\r\n    }\r\n\r\n    //check if duplicates, remove duplicates player enemy\r\n    for (let i = 0; i < mini1Success.length; i++) {\r\n      for (let j = 0; j < mini2Success.length; j++) {\r\n        if (mini1Success[i] === mini2Success[j]) {\r\n          mini1Success.splice(i, 1);\r\n          mini2Success.splice(j, 1)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (Math.max(...mini1Success) > Math.max(...mini2Success)) {\r\n      //player with the highest numbers win.   \r\n      gameUpdate.log(`${currentPlayer.name} wins with a higher roll!`);\r\n      return mini1.id;\r\n    } else if (Math.max(...mini2Success) > Math.max(...mini1Success)) {\r\n      gameUpdate.log(`${enemyPlayer.name} wins with a higher roll!`);\r\n      return mini2.id;\r\n    } else {\r\n      //if no result left or equal, both miss.\r\n      return null\r\n    }\r\n  }\r\n\r\n  var rangeToTarget = (mini1, mini2) => {\r\n    let rangeResult;\r\n\r\n    let distance = BABYLON.Vector3.Distance(mini1.position, mini2.position) - mini2.width / 2;\r\n    let mini1MaxRange = players[mini1.team].armyStats.units[mini1.unit].maxRange\r\n    //close combat if minis base are within 1 inch\r\n    if (distance <= mini1.width / 2 + mini2.width / 2) {\r\n      rangeResult = \"c\";\r\n      //8 inches\r\n    } else if (distance <= 202) {\r\n      rangeResult = \"s\";\r\n      // between 8 and 16 inches\r\n    } else if (distance > 202 && distance <= 404) {\r\n      rangeResult = \"m\";\r\n      // between 16 and 32 inches\r\n    } else if (distance > 404 && distance <= 808) {\r\n      rangeResult = \"l\";\r\n      // between 32 and max range\r\n    } else if (distance > 808 && distance <= mini1MaxRange) {\r\n      rangeResult = \"xl\";\r\n    } else if (distance > mini1MaxRange) {\r\n      rangeResult = null\r\n    }\r\n\r\n    //check if obstacles between minis;\r\n    //check if angle between mini1 front and mini2 is < 90deg\r\n    if (noObstacle(mini1, mini2) && isInAngle(mini1, mini2)) {\r\n      return rangeResult;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  var isTheGameOver = () => {\r\n    let winner = \"\";\r\n    if (players.teamBlack.startActions === 0 && players.teamWhite.startActions === 0) {\r\n      winner = null;\r\n      gameUpdate.log(`Game Over. It's a tie! No Winners this time.`);\r\n    } else if (players.teamBlack.startActions === 0) {\r\n      winner = \"Team White\";\r\n      gameUpdate.log(`Game Over. ${players.teamWhite.name} wins!`);\r\n    } else if (players.teamWhite.startActions === 0) {\r\n      winner = \"Team Black\";\r\n      gameUpdate.log(`Game Over. ${players.teamBlack.name} wins!`);\r\n    } else {\r\n      winner = undefined;\r\n    }\r\n\r\n    return winner;\r\n  }\r\n\r\n  var getMods = (mini1, mini2) => {\r\n    let range = rangeToTarget(mini1, mini2);\r\n    let higherMod = isHigher(mini1, mini2) ? 1 : 0;\r\n    let coverMod = isInCover(mini2, mini1) ? -1 : 0;\r\n    let mods = coverMod + higherMod + players[mini1.team].armyStats.units[mini1.unit].range.mods[range];\r\n    return mods;\r\n  }\r\n\r\n  var onAttack = (mini1, mini2, response) => {\r\n    let winner = \"\";\r\n    if (mini1) {\r\n      let range = rangeToTarget(mini1, mini2);\r\n      let mini1CoverMod = isInCover(mini1, mini2) ? 1 : 0;\r\n      let mini1Mods = getMods(mini1, mini2);\r\n\r\n      let mini2CoverMod = isInCover(mini2, mini1) ? 1 : 0;\r\n      let mini2Mods = getMods(mini2, mini1);\r\n\r\n      if (range && isInAngle(mini1, mini2)) {\r\n        if (mini2.intersectsMesh(mini1, false) || range === \"c\") {\r\n          //Melee attack\r\n          gameUpdate.log(`Melee attack of the ${mini1.name} on the ${mini2.name}.`);\r\n          gameUpdate.log(`${currentPlayer.name}'s target roll is ${currentPlayer.army.units[mini1.unit].melee.success}+.`);\r\n          let meleeRoll = diceRoll(currentPlayer.army.units[mini1.unit].melee.roll);\r\n\r\n          //Generate Dice\r\n          cloneDice(meleeRoll, mini1, 1000);\r\n\r\n          gameUpdate.log(`${enemyPlayer.name}'s target roll is ${enemyPlayer.army.units[mini1.unit].melee.success}+.`);\r\n          let mini2MeleeRoll = diceRoll(1);\r\n          //Generate Dice\r\n          cloneDice(mini2MeleeRoll, mini2, 1000);\r\n\r\n          winner = compareRolls(mini1, meleeRoll, 0, mini2, mini2MeleeRoll, 0);\r\n\r\n        } else {\r\n          //Range attack\r\n          var mini1Rolls = [];\r\n          var modedRolls = [];\r\n          var mini2Rolls = [];\r\n          \r\n          gameUpdate.log(`${players[mini1.team].name} is shooting the ${mini2.name}${response? ' in response' : \"\"} with the ${mini1.name} at range ${range.toUpperCase()}.`);\r\n          gameUpdate.log(`${players[mini1.team].name}'s target roll is ${currentPlayer.army.units[mini1.unit].range.success}+.`);\r\n\r\n          // Check for enemy roll (Should be enemy line of sight when rotation is implemented!)\r\n          if (!response) {\r\n            mini1Rolls = diceRoll(mini2.diceAssigned);\r\n          } else {\r\n            mini1Rolls = diceRoll(1);\r\n          }\r\n\r\n          //Generate Dice\r\n          cloneDice(mini1Rolls, mini1, 1000);\r\n\r\n          modedRolls = mini1Rolls.map(roll => roll + mini1Mods);\r\n\r\n          //Enemy Target Response\r\n          if (rangeToTarget(mini2, mini1) && !response) {\r\n            gameUpdate.log(`${enemyPlayer.name}'s target roll is ${enemyPlayer.army.units[mini2.unit].defense.success}+.`);\r\n\r\n            mini2Rolls = diceRoll(1);\r\n            //Generate Dice\r\n            cloneDice(mini2Rolls, mini2, 1000);\r\n\r\n            winner = compareRolls(mini1, mini1Rolls, mini1Mods, mini2, mini2Rolls, mini2Mods);\r\n          }\r\n\r\n          //No response from enemy (range difference || angle || one way response)\r\n          if (!winner) {\r\n            if (modedRolls.some(roll => roll >= currentPlayer.army.units[mini1.unit].range.success)) {\r\n              if (!response) {\r\n                gameUpdate.log(`${currentPlayer.name} rolls ${mini1Rolls.toString()}. Success! You shot your opponent's ${mini2.name}!`);\r\n              } else {\r\n                gameUpdate.log(`${enemyPlayer.name} rolls ${mini1Rolls.toString()}. Hot damn! The ${mini2.name} got shot!`);\r\n              }\r\n              winner = mini1.id;\r\n            }\r\n          }\r\n        }\r\n\r\n        //Defense Roll\r\n        if (winner === mini1.id) {\r\n          gameUpdate.log(`${players[mini2.team].name}'s ${mini2.name} is hit. Defense roll target is ${players[mini2.team].armyStats.units[mini2.unit].defense.success}+`);\r\n\r\n          if (mini2CoverMod > 0) {\r\n            gameUpdate.log(`${players[mini2.team].name} has +1 to dice roll for ${mini2.id} as it is in cover.`);\r\n          }\r\n          let defenseRoll = diceRoll(players[mini2.team].armyStats.units[mini2.unit].defense.roll)\r\n          gameUpdate.log(`${players[mini2.team].name} rolls ${defenseRoll.toString()}.`);\r\n\r\n          setTimeout(function () {\r\n            cloneDice(defenseRoll, mini2, 1250, true);\r\n          }, 1250);\r\n          //Cover modifiers to add here\r\n          if (defenseRoll.some(roll => roll + mini2CoverMod >= players[mini2.team].armyStats.units[mini2.unit].defense.success)) {\r\n            gameUpdate.log(`Defense roll successful. The ${mini2.name} is saved!`);\r\n          } else {\r\n            gameUpdate.log(`The ${mini2.name} is killed!`);\r\n            setTimeout(function () {\r\n              mini2.position = new BABYLON.Vector3(Math.floor(Math.random() * 190) - 200, 0, -440 + Math.floor(Math.random() * 30) - 15);\r\n              mini2.name = \"decor\";\r\n              mini2.isPickable = false;\r\n              if (scene.getMeshByName(`${mini2.id}To${mini1.id}`)) {\r\n                scene.removeMesh(scene.getMeshByName(`${mini2.id}To${mini1.id}`));\r\n              }\r\n              gameUpdate.removePlayerMini(mini2.id, mini2.team);\r\n              removeCoverLogo(mini2);\r\n              clearTarget(mini2);\r\n              if (response) {\r\n                cancelSelection();\r\n              }\r\n            }, 2500);\r\n          }\r\n        } else if (winner === mini2.id) {\r\n          gameUpdate.log(`${players[mini1.team].name}'s ${mini1.name} is hit. Defense roll target is ${players[mini2.team].armyStats.units[mini2.unit].defense.success}+`);\r\n          if (mini1CoverMod > 0) {\r\n            gameUpdate.log(`${players[mini1.team].name} has +1 to dice roll for the ${mini1.name} as it is in cover.`);\r\n          }\r\n          let defenseRoll = diceRoll(players[mini1.team].armyStats.units[mini1.unit].defense.roll, null, true, mini1);\r\n          gameUpdate.log(`${players[mini1.team].name} rolls ${defenseRoll.toString()}.`);\r\n\r\n          setTimeout(function () {\r\n            cloneDice(defenseRoll, mini1, 1250, true);\r\n          }, 1250);\r\n          if (defenseRoll.some(roll => roll + mini1CoverMod >= players[mini1.team].armyStats.units[mini1.unit].defense.success)) {\r\n            gameUpdate.log(`Defense roll successful. The ${mini1.name} is saved!`);\r\n\r\n          } else {\r\n            gameUpdate.log(`The ${mini1.name} is killed!`);\r\n            setTimeout(function () {\r\n              camera.target = map;\r\n              mini1.position = new BABYLON.Vector3(200 - Math.floor(Math.random() * 190), 0, -440 + Math.floor(Math.random() * 30) - 15);\r\n              mini1.name = \"decor\";\r\n              mini1.isPickable = false\r\n              gameUpdate.removePlayerMini(mini1.id, mini1.team);\r\n              removeCoverLogo(mini1);\r\n              cancelSelection();\r\n            }, 2500);\r\n          }\r\n        } else {\r\n          gameUpdate.log(\"No winners! Try again.\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const attackTargets = async () => {\r\n    inAttack = true;\r\n    const waitFor = (ms) => new Promise(r => setTimeout(r, ms));\r\n    if (selected && targets && targets.length > 0) {\r\n      let enemyResponse = players[enemyPlayer.team].minis.filter(mini =>\r\n        enemyPlayer.army.units[mini.unit].range.mods[rangeToTarget(mini, selected)] >= 0\r\n      );\r\n      let onWayResponse = enemyResponse.filter(enemy => !targets.some(target => target === enemy));\r\n\r\n      await asyncForEach(targets, async (target) => {\r\n        if (selected) {\r\n          onAttack(selected, target);\r\n        }\r\n        await waitFor(3000);\r\n      });\r\n      if (onWayResponse) {\r\n        await asyncForEach(onWayResponse, async (enemy) => {\r\n          if (selected) {\r\n            onAttack(enemy, selected, true);\r\n          }\r\n          await waitFor(3000);\r\n        });\r\n      }\r\n      gameUpdate.removeTurnAction(currentPlayer.team);\r\n      scene.removeMesh(scene.getMeshByName(\"token\"));\r\n      cancelLineOfSight();\r\n      cancelSelection();\r\n      isTheGameOver();\r\n      inAttack = false;\r\n\r\n      if (players[currentPlayer.team].turnActions === 0) {\r\n        setTimeout(function () {\r\n          switchPlayer();\r\n        }, 3500);\r\n      }\r\n    }\r\n  }\r\n\r\n  var rollButton = GUI.Button.CreateSimpleButton(\"rollButton\", \"Roll Dice\");\r\n  rollButton.width = \"120px\"\r\n  rollButton.height = \"60px\";\r\n  rollButton.color = \"white\";\r\n  rollButton.left = \"40%\";\r\n  rollButton.top = \"30%\";\r\n  rollButton.cornerRadius = 20;\r\n  rollButton.background = \"black\";\r\n  rollButton.zIndex = 2000;\r\n  rollButton.onPointerClickObservable.add(function () {\r\n    if (!inAttack) {\r\n      attackTargets();\r\n    }\r\n  });\r\n\r\n  var moveAction = ({ skip }) => {\r\n    if (selected) {\r\n      if (!skip) {\r\n        previous.position = selected.position;\r\n        selected.position = clonedMini.position;\r\n      }\r\n      moveArea.position = new BABYLON.Vector3(selected.position.x, 26, selected.position.z);\r\n      moveArea.setEnabled(false);\r\n      scene.getMeshByName(`${selected.id}lineOfSight`).setEnabled(true);\r\n\r\n      //Fragment diffuse on main LOS and creating ground LOS clone\r\n      if (whatIsUnderneath(selected) && whatIsUnderneath(selected).name.includes(\"obstacle\")) {\r\n        if (scene.getMeshByName(`groundLOS${selected.id}`)) {\r\n          scene.getMeshByName(`groundLOS${selected.id}`).position.y = - selected.position.y + 26;\r\n          scene.getMeshByName(`groundLOS${selected.id}`).setEnabled(true);\r\n        } else {\r\n          scene.getMeshByName(`${selected.id}lineOfSight`).clone(`groundLOS${selected.id}`).position.y = - selected.position.y + 26;\r\n        }\r\n\r\n        if (scene.getMeshByName(\"groundMoveArea\")) {\r\n          scene.getMeshByName(\"groundMoveArea\").position.y = selected.position.y - getHeight(selected) / 2 - 5;\r\n        } else {\r\n          moveArea.clone(\"groundMoveArea\");\r\n          scene.getMeshByName(\"groundMoveArea\").parent = moveArea;\r\n          scene.getMeshByName(\"groundMoveArea\").position = new BABYLON.Vector3(0, selected.position.y - getHeight(selected) / 2 - 5, 0);\r\n        }\r\n\r\n        let obstacleTemplateArea = `if( vPositionW.z  < ${Math.round(whatIsUnderneath(selected).position.z - getLength(whatIsUnderneath(selected)) / 2)}.){ discard; } if( vPositionW.z  > ${Math.round(whatIsUnderneath(selected).position.z + getLength(whatIsUnderneath(selected)) / 2)}.){ discard; } if( vPositionW.x  > ${Math.round(whatIsUnderneath(selected).position.x + getWidth(whatIsUnderneath(selected)) / 2)}.){ discard; } if( vPositionW.x  < ${Math.round(whatIsUnderneath(selected).position.x - getWidth(whatIsUnderneath(selected)) / 2)}.){ discard; }`;\r\n        let highMat = new CustomMaterial(\"highMat\", scene);\r\n        highMat.alpha = 0.25;\r\n        highMat.Fragment_Custom_Diffuse(obstacleTemplateArea);\r\n        highMat.diffuseColor = scene.getMaterialByName(selected.losMat[0]).diffuseColor;\r\n\r\n        scene.getMeshByName(`${selected.id}lineOfSight`).material = highMat;\r\n        scene.getMeshByName(`${selected.id}lineOfSight`)._children.forEach((los, index) => {\r\n          los.material = new CustomMaterial(`highMat${index}`, scene);\r\n          los.material.alpha = 0.25;\r\n          los.material.Fragment_Custom_Diffuse(obstacleTemplateArea);\r\n          los.material.diffuseColor = scene.getMaterialByName(selected.losMat[index + 1]).diffuseColor;\r\n        });\r\n        scene.getMeshByName(\"groundMoveArea\").material = new CustomMaterial(`highMoveMat`, scene);\r\n        scene.getMeshByName(\"groundMoveArea\").material.alpha = 0.25;\r\n        scene.getMeshByName(\"groundMoveArea\").material.Fragment_Custom_Diffuse(obstacleTemplateArea);\r\n        scene.getMeshByName(\"groundMoveArea\")._children.forEach(child => child.setEnabled(false));\r\n      } else {\r\n        scene.getMeshByName(`${selected.id}lineOfSight`).material = scene.getMaterialByName(selected.losMat[0]);\r\n        scene.getMeshByName(`${selected.id}lineOfSight`)._children.forEach((los, index) => los.material = scene.getMaterialByName(selected.losMat[index + 1]));\r\n        moveArea2.material = moveAreaMat;\r\n        if (scene.getMeshByName(`groundLOS${selected.id}`)) {\r\n          scene.getMeshByName(`groundLOS${selected.id}`).dispose();\r\n        }\r\n        if (scene.getMeshByName(\"groundMoveArea\")) {\r\n          scene.getMeshByName(\"groundMoveArea\").dispose();\r\n        }\r\n      };\r\n\r\n      previous.rotation = selected.rotation.clone();\r\n      rotate = true;\r\n    }\r\n  }\r\n\r\n  var forwardDirection = (mini) => {\r\n    let forward = new BABYLON.Vector3(0, 0, -1);\r\n    let direction = mini.getDirection(forward);\r\n    direction.normalize();\r\n    return direction;\r\n  }\r\n\r\n  var rotateOnMouseMove = (evt) => {\r\n    evt.preventDefault();\r\n    if (selected && getGroundPosition(evt)) {\r\n      var diffX = selected.position.x - getGroundPosition(evt).x;\r\n      var diffY = selected.position.z - getGroundPosition(evt).z;\r\n      selected.rotation.y = Math.atan2(diffX, diffY);\r\n    }\r\n  }\r\n\r\n  var rotateAction = (evt) => {\r\n    if (evt.which === 1 || evt.sourceEvent.which === 1) {\r\n      if (selected && rotate) {\r\n        gameUpdate.removeTurnAction(currentPlayer.team);\r\n        scene.removeMesh(scene.getMeshByName(\"token\"));\r\n        rotate = false;\r\n        previous.position = null;\r\n        previous.rotation = null;\r\n        cancelSelection();\r\n\r\n        if (players[currentPlayer.team].turnActions === 0) {\r\n          setTimeout(function () {\r\n            switchPlayer();\r\n          }, 1000);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  var onMouseMove = function (evt) {\r\n    evt.preventDefault();\r\n    if (selected && getGroundPosition(evt)) {\r\n      let otherMinis = [...players[enemyPlayer.team].minis, ...players[currentPlayer.team].minis.filter(mini => mini.id !== selected.id)];\r\n      //Miniature collision\r\n      if (!otherMinis.some(mini =>\r\n        getGroundPosition(evt).x < mini.position.x + getWidth(mini) - 2 &&\r\n        getGroundPosition(evt).x > mini.position.x - getWidth(mini) + 2 &&\r\n        getGroundPosition(evt).z < mini.position.z + getWidth(mini) - 2 &&\r\n        getGroundPosition(evt).z > mini.position.z - getWidth(mini) + 2\r\n      )) {\r\n        //Obstacle collision\r\n        if (\r\n          !obstacles.filter(obstacle => getHeight(obstacle) + obstacle.position.y - (getHeight(obstacle) / 2) > getHeight(selected) + selected.position.y).some(obstacle =>\r\n            getGroundPosition(evt).x < obstacle.position.x + getWidth(obstacle) / 2 + getWidth(selected) / 2 &&\r\n            getGroundPosition(evt).x > obstacle.position.x - getWidth(obstacle) / 2 - getWidth(selected) / 2 &&\r\n            getGroundPosition(evt).z < obstacle.position.z + getLength(obstacle) / 2 + getWidth(selected) / 2 &&\r\n            getGroundPosition(evt).z > obstacle.position.z - getLength(obstacle) / 2 - getWidth(selected) / 2\r\n          )\r\n        ) {\r\n          //game area limits\r\n          if (getGroundPosition(evt).x > -388 && getGroundPosition(evt).x < 388 && getGroundPosition(evt).z > -285 && getGroundPosition(evt).z < 285) {\r\n            //Filtering out obstacles shorter than mini size. Allows vertical move.\r\n            var currentObstacle = obstacles.filter(obstacle => getHeight(obstacle) < getHeight(selected) + selected.position.y - 25).filter(obstacle =>\r\n              getGroundPosition(evt).x < obstacle.position.x + getWidth(obstacle) / 2 + getWidth(selected) / 2 &&\r\n              getGroundPosition(evt).x > obstacle.position.x - getWidth(obstacle) / 2 - getWidth(selected) / 2 &&\r\n              getGroundPosition(evt).z < obstacle.position.z + getLength(obstacle) / 2 + getWidth(selected) / 2 &&\r\n              getGroundPosition(evt).z > obstacle.position.z - getLength(obstacle) / 2 - getWidth(selected) / 2\r\n            );\r\n            if (currentObstacle && currentObstacle.length > 0) {\r\n              //Vertical move\r\n              clonedMini.position = new BABYLON.Vector3(getGroundPosition(evt).x, getHeight(currentObstacle[0]) + 26, getGroundPosition(evt).z);\r\n            } else {\r\n              //Regular move\r\n              clonedMini.position = new BABYLON.Vector3(getGroundPosition(evt).x, 25, getGroundPosition(evt).z);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  var getGroundPosition = function () {\r\n    // Use a predicate to get position on the ground\r\n    var pickinfo = scene.pick(scene.pointerX, scene.pointerY, function (mesh) { return mesh === map; });\r\n    if (pickinfo.hit) {\r\n      return pickinfo.pickedPoint;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  const addTarget = (enemyTarget) => {\r\n    advancedTexture.addControl(rollButton);\r\n    updateDiceStat();\r\n    let targetColor = new BABYLON.Color3.Black();\r\n    if (selected && !targets.some(target => target.id === enemyTarget.id)) {\r\n      if (getLosColor(selected.unit, currentPlayer.team, rangeToTarget(selected, enemyTarget))) {\r\n        targetColor = getLosColor(selected.unit, currentPlayer.team, rangeToTarget(selected, enemyTarget));\r\n      }\r\n      hl.addMesh(enemyTarget, targetColor);\r\n      targets.push(enemyTarget);\r\n      // create direct line of sight\r\n      if (rangeToTarget(selected, enemyTarget) !== \"c\") {\r\n        createDirectLOS(selected, enemyTarget, false);\r\n      }\r\n      createDiceStat(enemyTarget);\r\n      targetResponse();\r\n    }\r\n  }\r\n\r\n  const clearTarget = (target) => {\r\n    if (target) {\r\n      target.diceAssigned = 0;\r\n    }\r\n    // Removed any target from the targets array with 0 dice assigned\r\n    targets.forEach((target, index) => {\r\n      if (target.diceAssigned === 0) {\r\n        targets.splice(index, 1);\r\n        hl.removeMesh(target);\r\n        removeDiceStat(target);\r\n        scene.removeMesh(scene.getMeshByName(`${selected.id}To${target.id}`));\r\n      }\r\n    });\r\n  }\r\n\r\n  const calculateSuccess = (mini1, mini2) => {\r\n    let mods;\r\n    let success;\r\n    if (rangeToTarget(mini1, mini2) === \"c\") {\r\n      success = currentPlayer.army.units[mini1.unit].melee.success;\r\n    } else {\r\n      mods = getMods(mini1, mini2);\r\n      success = currentPlayer.army.units[mini1.unit].range.success - mods\r\n    }\r\n    return success\r\n  }\r\n\r\n  const createDiceStat = (enemyTarget) => {\r\n    if (selected) {\r\n      let roll = enemyTarget.diceAssigned;\r\n      let success = calculateSuccess(selected, enemyTarget)\r\n      let diceStat = new GUI.TextBlock(`${enemyTarget.id}diceStat`);\r\n      diceStat.text = `${roll}d${success}+`;\r\n      diceStat.color = \"white\";\r\n      diceStat.fontFamily = \"Arial\";\r\n      diceStat.fontSize = \"15px\";\r\n      advancedTexture.addControl(diceStat);\r\n\r\n      diceStat.linkWithMesh(enemyTarget);\r\n      diceStat.linkOffsetY = -40;\r\n    }\r\n  };\r\n\r\n  const removeDiceStat = (enemyTarget) => {\r\n    if (getControlByName(`${enemyTarget.id}diceStat`)) {\r\n      getControlByName(`${enemyTarget.id}diceStat`).dispose();\r\n    }\r\n  };\r\n\r\n  const updateDiceStat = () => {\r\n    if (targets && targets.length > 0) {\r\n      targets.forEach(target => {\r\n        removeDiceStat(target);\r\n        createDiceStat(target);\r\n      });\r\n    }\r\n  }\r\n\r\n  const assignTarget = (ev) => {\r\n    let enemyTarget = ev.meshUnderPointer;\r\n\r\n    var whoHasMoreDice = targets.map(target => target.diceAssigned).indexOf(Math.max(...targets.filter(target => target.id !== enemyTarget.id).map(target => target.diceAssigned)));\r\n    if (selected && enemyTarget && enemyTarget.id.includes(\"Mini\") && rangeToTarget(selected, enemyTarget) && calculateSuccess(selected, enemyTarget) <= 6) {\r\n      moveArea.setEnabled(false);\r\n      if (targets.length === 0) {\r\n        enemyTarget.diceAssigned = currentPlayer.army.units[selected.unit].range.roll;\r\n        addTarget(enemyTarget);\r\n      } else if (whoHasMoreDice >= 0 && targets.reduce((acc, target) => acc + target.diceAssigned, 0) === currentPlayer.army.units[selected.unit].range.roll && targets.filter(target => target.id !== enemyTarget.id).every(target => target.diceAssigned >= 1)) {\r\n        enemyTarget.diceAssigned ? enemyTarget.diceAssigned += 1 : enemyTarget.diceAssigned = 1;\r\n        targets[whoHasMoreDice].diceAssigned -= 1;\r\n        addTarget(enemyTarget);\r\n        clearTarget();\r\n      } else {\r\n        if (targets.length > 1 && targets.every(target => target.diceAssigned === 1)) {\r\n          let removedTarget = targets.splice(targets.indexOf(targets[whoHasMoreDice]), 1)[0];\r\n          clearTarget(removedTarget);\r\n          enemyTarget.diceAssigned ? enemyTarget.diceAssigned += 1 : enemyTarget.diceAssigned = 1;\r\n          addTarget(enemyTarget);\r\n        }\r\n        if (enemyTarget.diceAssigned === currentPlayer.army.units[selected.unit].range.roll) {\r\n          clearTarget(enemyTarget);\r\n          cancelTargeting();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const createDirectLOS = (mini1, mini2, response) => {\r\n    let origin;\r\n    let target;\r\n    if (response) {\r\n      origin = new BABYLON.Vector3(mini1.position.x, mini1.position.y + getHeight(mini1) * 0.70, mini1.position.z);\r\n      target = new BABYLON.Vector3(mini2.position.x, mini2.position.y + getHeight(mini2) * 0.70, mini2.position.z);\r\n      let colorArray1 = [new BABYLON.Color4(215 / 255, 195 / 255, 58 / 255, 1), new BABYLON.Color4(0, 0, 0, 0)];\r\n      BABYLON.MeshBuilder.CreateLines(`${mini1.id}To${mini2.id}`, { points: [origin, target], colors: colorArray1, updatable: true }, scene);\r\n    } else {\r\n      origin = new BABYLON.Vector3(mini1.position.x, mini1.position.y + getHeight(mini1) * 0.80, mini1.position.z);\r\n      target = new BABYLON.Vector3(mini2.position.x, mini2.position.y + getHeight(mini2) * 0.80, mini2.position.z);\r\n      let colorArray2 = [new BABYLON.Color4(1, 1, 1, 1), new BABYLON.Color4(0, 0, 0, 0)]\r\n      BABYLON.MeshBuilder.CreateLines(`${mini1.id}To${mini2.id}`, { points: [origin, target], colors: colorArray2, updatable: true }, scene);\r\n    }\r\n  }\r\n\r\n  const targetResponse = () => {\r\n    if (selected && targets) {\r\n      players[enemyPlayer.team].minis.forEach(mini => {\r\n        if (!scene.getMeshByName(`${mini.id}To${selected.id}`)) {\r\n          if (enemyPlayer.army.units[mini.unit].range.mods[rangeToTarget(mini, selected)] >= 0 || scene.getMeshByName(`${selected.id}To${mini.id}`)) {\r\n            createDirectLOS(mini, selected, true);\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  moveActionManager.registerAction(\r\n    new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPointerOverTrigger, function (ev) {\r\n      clonedMini = selected.clone();\r\n      clonedMini.position = selected.position;\r\n      clonedMini.isPickable = false;\r\n      clonedMini._children.forEach(child => child.setEnabled(false));\r\n\r\n      clonedMini.material = transparentMaterial;\r\n      canvas.addEventListener(\"mousemove\", onMouseMove, false);\r\n      canvas.addEventListener(\"click\", moveAction, false);\r\n    })\r\n  );\r\n\r\n  moveActionManager.registerAction(\r\n    new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPointerOutTrigger, function (ev) {\r\n      clonedMini.dispose();\r\n      canvas.removeEventListener(\"mousemove\", onMouseMove);\r\n      canvas.removeEventListener(\"click\", moveAction);\r\n    })\r\n  );\r\n\r\n  mapActionManager.registerAction(\r\n    new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPointerOverTrigger, function (ev) {\r\n      if (selected && rotate) {\r\n        scene.getMeshByName(`${selected.id}lineOfSight`).setEnabled(true)\r\n      }\r\n      if (rotate) {\r\n        canvas.addEventListener(\"mousemove\", rotateOnMouseMove, false);\r\n        canvas.addEventListener(\"click\", rotateAction, false);\r\n      }\r\n    })\r\n  );\r\n\r\n  mapActionManager.registerAction(\r\n    new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPointerOutTrigger, function (ev) {\r\n      if (selected && !rotate) {\r\n        scene.getMeshByName(`${selected.id}lineOfSight`).setEnabled(false);\r\n        if (scene.getMeshByName(`groundLOS${selected.id}`)) {\r\n          scene.getMeshByName(`groundLOS${selected.id}`).setEnabled(false);\r\n        }\r\n      }\r\n      canvas.removeEventListener(\"mousemove\", rotateOnMouseMove);\r\n      canvas.removeEventListener(\"click\", rotateAction);\r\n    })\r\n  );\r\n\r\n  //Select current player mini\r\n  teamBlackActionManager.registerAction(\r\n    new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPickUpTrigger, function (ev) {\r\n      if (currentPlayer.team === \"teamBlack\" && !inAttack) {\r\n        if (rotate) {\r\n          rotateAction(ev);\r\n        } else {\r\n          selection(ev);\r\n        }\r\n      }\r\n    })\r\n  );\r\n  //Attack opposite team\r\n  teamBlackActionManager.registerAction(\r\n    new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnLeftPickTrigger, function (ev) {\r\n      if (currentPlayer.team === \"teamWhite\" && !rotate && !inAttack) {\r\n        assignTarget(ev);\r\n      }\r\n    })\r\n  );\r\n\r\n  //LOS on opposite team\r\n  teamBlackActionManager.registerAction(\r\n    new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPointerOverTrigger, function (ev) {\r\n      if (currentPlayer.team === \"teamWhite\" && !inAttack) {\r\n        handleLineOfSight(ev);\r\n      }\r\n    })\r\n  );\r\n\r\n  teamBlackActionManager.registerAction(\r\n    new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPointerOutTrigger, function (ev) {\r\n      if (currentPlayer.team === \"teamWhite\") {\r\n        cancelLineOfSight();\r\n      }\r\n    })\r\n  );\r\n\r\n\r\n  //Select current player mini\r\n  teamWhiteActionManager.registerAction(\r\n    new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPickUpTrigger, function (ev) {\r\n      if (currentPlayer.team === \"teamWhite\" && !inAttack) {\r\n        if (rotate) {\r\n          rotateAction(ev);\r\n        } else {\r\n          selection(ev);\r\n        }\r\n      }\r\n    })\r\n  );\r\n  //Attack opposite team\r\n  teamWhiteActionManager.registerAction(\r\n    new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnLeftPickTrigger, function (ev) {\r\n      if (currentPlayer.team === \"teamBlack\" && !rotate && !inAttack) {\r\n        assignTarget(ev);\r\n      }\r\n    })\r\n  );\r\n\r\n  //LOS on opposite team\r\n  teamWhiteActionManager.registerAction(\r\n    new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPointerOverTrigger, function (ev) {\r\n      if (currentPlayer.team === \"teamBlack\" && !inAttack) {\r\n        handleLineOfSight(ev);\r\n      }\r\n    })\r\n  );\r\n\r\n  teamWhiteActionManager.registerAction(\r\n    new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPointerOutTrigger, function (ev) {\r\n      if (currentPlayer.team === \"teamBlack\") {\r\n        cancelLineOfSight();\r\n      }\r\n    })\r\n  );\r\n\r\n  canvas.addEventListener('contextmenu', cancelSelection, false);\r\n  scene.onDispose = function () {\r\n    canvas.removeEventListener(\"mousemove\", onMouseMove);\r\n    canvas.removeEventListener(\"contextmenu\", cancelSelection);\r\n  }\r\n}\r\n\r\nexport default (props) => (\r\n  <div>\r\n    <SceneComponent id='my-canvas' className=\"w-full h-full\" antialias onSceneReady={onSceneReady} />\r\n  </div>\r\n)","import React, { useState } from 'react';\r\nimport { useObserver } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\nimport StoreContext from '../../store/AppStore';\r\n\r\nconst GameNav = () => {\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [sound, /*setSound*/] = useState(false);\r\n    const store = React.useContext(StoreContext);\r\n\r\n    const PlayerTurn = () => {\r\n        return useObserver(() => {\r\n            if (toJS(store.gameInfo)) {\r\n                return (\r\n                    <p className=\"block mt-0 inline-block text-gray-400\">\r\n                        {toJS(store.gameInfo.currentPlayer.name)}'s turn\r\n                    </p>\r\n                );\r\n            } else {\r\n                return (\r\n                    <></>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    const Progression = () => {\r\n        return useObserver(() => {\r\n            if (toJS(store.gameInfo)) {                \r\n                let percentWhiteLeft = Math.round(100 - (toJS(store.gameInfo.players.teamWhite.minis).length / toJS(store.gameInfo.players.teamWhite.units).length) * 100);\r\n                let percentBlackLeft = Math.round(100 - (toJS(store.gameInfo.players.teamBlack.minis).length / toJS(store.gameInfo.players.teamBlack.units).length) * 100);\r\n\r\n                return (\r\n                    <p className=\"hidden lg:block mt-0 inline-block mt-0 text-gray-400 mr-4\">\r\n                        {`Progression ${Math.max(percentBlackLeft, percentWhiteLeft)}%`}\r\n                    </p>\r\n                );\r\n            } else {\r\n                return (\r\n                    <></>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    const Timer = () => {\r\n        return useObserver(() => {\r\n            if (toJS(store.gameInfo)) {  \r\n                let time = store.gameInfo.players[store.gameInfo.currentPlayer.team].timeLeft; \r\n                let minutes = Math.floor(time/60);\r\n                let seconds = time - minutes * 60;     \r\n                return (\r\n                    <span className=\"font-semibold text-xl tracking-tight\">{`${minutes}:${seconds === 0 ? '00' : seconds}`}</span>\r\n                );\r\n            } else {\r\n                return (\r\n                    <span className=\"font-semibold text-xl tracking-tight\">Time left</span>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <nav className=\"flex items-center justify-between lg:flex-wrap bg-gray-700 p-4\">\r\n            <div className=\"flex flex-col lg:flex-row\">\r\n                <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\r\n                    <span className=\"font-semibold text-xl tracking-tight\">IN/SYS</span>\r\n                </div>\r\n                <div className=\"text-sm flex flex-col\">\r\n                    <p className=\"block mt-0 inline-block mt-0 text-gray-400 mr-4 hidden md:block\">\r\n                        {`Table #${store.gameInfo.tableNumber}`}\r\n                    </p>\r\n                    <Progression />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col items-center justify-center\">\r\n                <div className=\"text-sm flex flex-col\">\r\n\r\n                </div>\r\n                <div className=\"flex flex-col items-center flex-shrink-0 text-white\">\r\n                    <PlayerTurn />\r\n                    <Timer />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-row\">\r\n                <button /*onClick={() => setSound(!sound)}*/ type=\"button\" className=\"flex items-center px-3 py-2 rounded text-gray-200 border-gray-400 hover:text-white hover:border-white hidden md:block\">\r\n                    {\r\n                        sound ?\r\n                            <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"volume-up w-6 h-6\"><path fillRule=\"evenodd\" d=\"M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM14.657 2.929a1 1 0 011.414 0A9.972 9.972 0 0119 10a9.972 9.972 0 01-2.929 7.071 1 1 0 01-1.414-1.414A7.971 7.971 0 0017 10c0-2.21-.894-4.208-2.343-5.657a1 1 0 010-1.414zm-2.829 2.828a1 1 0 011.415 0A5.983 5.983 0 0115 10a5.984 5.984 0 01-1.757 4.243 1 1 0 01-1.415-1.415A3.984 3.984 0 0013 10a3.983 3.983 0 00-1.172-2.828 1 1 0 010-1.415z\" clipRule=\"evenodd\"></path></svg> :\r\n                            <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"volume-off w-6 h-6\"><path fillRule=\"evenodd\" d=\"M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM12.293 7.293a1 1 0 011.414 0L15 8.586l1.293-1.293a1 1 0 111.414 1.414L16.414 10l1.293 1.293a1 1 0 01-1.414 1.414L15 11.414l-1.293 1.293a1 1 0 01-1.414-1.414L13.586 10l-1.293-1.293a1 1 0 010-1.414z\" clipRule=\"evenodd\"></path></svg>\r\n                    }\r\n                </button>\r\n                <button onClick={store.toggleFullScreen} type=\"button\" className=\"flex items-center px-3 py-2 rounded text-gray-200 border-gray-400 hover:text-white hover:border-white hidden md:block\">\r\n                    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"arrows-expand w-6 h-6\"><path fillRule=\"evenodd\" d=\"M3 4a1 1 0 011-1h4a1 1 0 010 2H6.414l2.293 2.293a1 1 0 11-1.414 1.414L5 6.414V8a1 1 0 01-2 0V4zm9 1a1 1 0 010-2h4a1 1 0 011 1v4a1 1 0 01-2 0V6.414l-2.293 2.293a1 1 0 11-1.414-1.414L13.586 5H12zm-9 7a1 1 0 012 0v1.586l2.293-2.293a1 1 0 111.414 1.414L6.414 15H8a1 1 0 010 2H4a1 1 0 01-1-1v-4zm13-1a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 010-2h1.586l-2.293-2.293a1 1 0 111.414-1.414L15 13.586V12a1 1 0 011-1z\" clipRule=\"evenodd\"></path></svg>\r\n                </button>\r\n                <button onClick={() => setMenuOpen(!menuOpen)} type=\"button\" className=\"flex items-center px-3 py-2 rounded text-gray-200 border-gray-400 hover:text-white hover:border-white\">\r\n                    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"cog w-6 h-6\"><path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\"></path></svg>\r\n                </button>\r\n            </div>\r\n\r\n\r\n            {/*<div className=\"block lg:hidden\">\r\n                <button onClick={() => setNavbarOpen(!navbarOpen)} type=\"button\" className=\"flex items-center px-3 py-2 border rounded text-gray-200 border-gray-400 hover:text-white hover:border-white\">\r\n                    <svg className=\"fill-current h-3 w-3\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><title>Menu</title><path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" /></svg>\r\n                </button>\r\n            </div>\r\n            <div className={\r\n                \"w-full block flex-grow lg:flex lg:items-center lg:w-auto\" +\r\n                (navbarOpen ? \" flex\" : \" hidden\")\r\n            }>\r\n                <div className=\"text-sm lg:flex lg:flex-grow w-full\">\r\n                    <a href=\"#responsive-header\" className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-400 hover:text-white mr-4\">\r\n                        Play\r\n                    </a>\r\n                    <a href=\"#responsive-header\" className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-400 hover:text-white mr-4\">\r\n                        Game\r\n                    </a>\r\n                    <a href=\"#responsive-header\" className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-400 hover:text-white mr-4\">\r\n                        Shop\r\n                    </a>\r\n                    <a href=\"#responsive-header\" className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-400 hover:text-white mr-4\">\r\n                        Market\r\n                    </a>\r\n                    <a href=\"#responsive-header\" className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-400 hover:text-white mr-4\">\r\n                        Minis\r\n                    </a>\r\n                    <a href=\"#responsive-header\" className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-400 hover:text-white mr-4\">\r\n                        FAQ\r\n                    </a>\r\n                    <a href=\"#responsive-header\" className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-400 hover:text-white ml-auto mr-4\">\r\n                        Blog\r\n                    </a>\r\n                    <a href=\"#responsive-header\" className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-400 hover:text-white mr-4\">\r\n                        Profile\r\n                    </a>\r\n                </div>\r\n            </div>*/}\r\n        </nav>\r\n    )\r\n};\r\n\r\n\r\nexport default GameNav;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"w-screen bg-gray-700 py-6 px-8 lg:px-32\">\r\n            <ul className=\"w-full list-none flex flex-row flex-wrap justify-center lg:justify-around items-center text-white\">\r\n                <li className=\"px-2\">\r\n                    Factions\r\n                </li>\r\n                <li className=\"px-2\">\r\n                    Store\r\n                </li>\r\n                <li className=\"px-2\">\r\n                    Market\r\n                </li>\r\n                <li className=\"px-2\">\r\n                    Battle\r\n                </li>\r\n                <li className=\"px-2\">\r\n                    <a href=\"https://hive.blog/@jrej\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Inkito blog\">Blog</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Player = ({team, playerName, actionsLeft, minisLeft, isCurrentPlayer}) => {\r\n    return (\r\n        <div className={`w-full flex flex-col md:flex-row flex-grow items-center justify-center lg:justify-start bg-gray-500 p-2 lg:p-8 mx-4 my-2 lg:mb-0 lg:mr-0 lg:pr-8 rounded-md lg:rounded-l-md lg:rounded-r-none`}>\r\n            <div className=\"relative flex flex-col w-16 items-center justify-center\">\r\n                {\r\n                    isCurrentPlayer ?\r\n                    <div className=\"absolute loader ease-linear rounded-full border-8 border-t-8 border-gray-500 h-16 w-16 top-6/12 left-6/12\"/> :\r\n                    null\r\n                }\r\n                {\r\n                    playerName ?\r\n                    <img className={`z-10 w-12 h-12 rounded-full flex items-center justify-center border-4 border-${team}`} src={`https://images.hive.blog/u/${playerName.toLowerCase()}/avatar`} alt=\"avatar\" /> :\r\n                    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"user-circle w-10 h-10\"><path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\"></path></svg>\r\n                }\r\n            </div>\r\n            <div className=\"flex flex-col flex-grow justify-center\">\r\n                <div className=\"flex flex-col md:flex-row flex-wrap w-full items-center justify-center lg:justify-between\">\r\n                    <p className={`mt-0 mr-2 lg:ml-4 lg:mr-0 font-bold text-${team}`}>{playerName}</p>\r\n                    <p className=\"mt-0 lg:ml-4\">Time left</p>\r\n                </div>\r\n                <div className=\"flex flex-row flex-wrap justify-center items-center lg:justify-between lg:ml-4\">\r\n                    <div className=\"flex flex-row flex-wrap actions mr-2\">\r\n                        <p className=\"mt-0\">Actions:</p>\r\n                        <p className=\"mt-0 ml-2\">{actionsLeft}</p>\r\n                    </div>\r\n                    <div className=\"flex flex-row flex-wrap actions\">\r\n                        <p className=\"mt-0\">Minis:</p>\r\n                        <p className=\"mt-0 ml-2\">{minisLeft}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Player;","import React from 'react';\r\nimport { useObserver } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\nimport StoreContext from '../../store/AppStore';\r\n\r\n\r\nconst History = () => {\r\n    const store = React.useContext(StoreContext);\r\n    return useObserver(() => {\r\n        if (store.gameInfo) {\r\n            let events = toJS(store.gameInfo.history);\r\n            let history = [];\r\n            var result = [];\r\n\r\n            for (let i = 0; i < events.length; i++) {\r\n                if (events[i] && events[i].includes(store.gameInfo.players.teamWhite.name)) {\r\n                    let arr = events[i].split(store.gameInfo.players.teamWhite.name)\r\n                    result = [<span key={arr[0]}>{arr[0]}</span>, <span key={store.gameInfo.players.teamWhite.name} className=\"text-white font-bold\">{store.gameInfo.players.teamWhite.name}</span>, <span key={arr[1]}>{arr[1]}</span>]\r\n                } else if (events[i] && events[i].includes(store.gameInfo.players.teamBlack.name)) {\r\n                    let arr = events[i].split(store.gameInfo.players.teamBlack.name)\r\n                    result = [<span key={arr[0]}>{arr[0]}</span>, <span key={store.gameInfo.players.teamBlack.name} className=\"text-black font-bold\">{store.gameInfo.players.teamBlack.name}</span>, <span key={arr[1]}>{arr[1]}</span>]\r\n                } else {\r\n                    result = [events[i]]\r\n                }\r\n                history.unshift(\r\n                    <div key={i} className=\"bg-gray-500 hidden rounded-sm lg:block m-2 p-2\">\r\n                        {result}\r\n                    </div>\r\n                )\r\n            }\r\n            return (\r\n                <div className=\"scroll-bar overflow-auto my-4 pb-1 mx-1 hidden lg:block w-auto\" style={{height:store.canvasHeight * 1.75}}>\r\n                    {history}\r\n                </div>\r\n            )\r\n        } else {\r\n            return <></>\r\n        }\r\n    })\r\n};\r\n\r\n\r\nexport default History;","import React from 'react';\r\n\r\nconst UnitCard = ({ unit }) => {\r\n    return (\r\n        <div className=\"border flex-grow max-w-md lg:max-w-xs rounded-md m-4\">\r\n            <div id=\"unit-top-bar\" className=\"flex flex-row bg-gray-800 justify-between items-center p-2\">\r\n                <div className=\"flex flex-row\">\r\n                    <h1 className={`mr-2 bg-${unit.color}-600 p-2 rounded-md`}>\r\n                        {unit.army}\r\n                    </h1>\r\n                    <h2 className=\"bg-gray-400 p-2 rounded-md\">\r\n                        {`${unit.class} unit`} \r\n                    </h2>\r\n                </div>\r\n                <div className=\"flex flex-row justify-end items-center\">\r\n                    <span className=\"text-red-500 hidden sm:block\">Lives :</span>\r\n                    <span className=\"dot rounded-full w-4 h-4 bg-red-500 ml-2\"></span>\r\n                </div>\r\n            </div>\r\n            <div id=\"unit-info-bar\" className=\"flex flex-row px-4 py-2 justify-center items-center bg-gray-500\">\r\n                <img className=\"rounded-lg w-auto h-16\" src={unit.image} alt=\"unit-avatar\" />\r\n                <div className=\"flex flex-col flex-wrap justify-center items-start m-4\">\r\n                    <p>\r\n                        {`Name: ${unit.name}`} \r\n                    </p>\r\n                    <p>\r\n                        {`Equipment: ${unit.equipment.range} + ${unit.equipment.melee}`} \r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div id=\"unit-stat-bar\" className=\"w-auto\">\r\n                <table className=\"table-fixed w-full\">\r\n                    <thead>\r\n                        <tr className=\"bg-gray-600\">\r\n                            <th className=\"border px-4\">Melee</th>\r\n                            <th className=\"border px-4\">Ranged</th>\r\n                            <th className=\"border px-4\">Defense</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr className=\"bg-gray-500\">\r\n                            <td className=\"border px-4 py-2 text-center\">{`${unit.melee.roll}d${unit.melee.success}+`}</td>\r\n                            <td className=\"border px-4 py-2 text-center\">{`${unit.range.roll}d${unit.range.success}+`}</td>\r\n                            <td className=\"border px-4 py-2 text-center\">{`${unit.defense.roll}d${unit.defense.success}+`}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div id=\"unit-spec-bar\" className=\"flex flex-row p-2 h-8 bg-white items-center\">\r\n                {`Special abilities: ${unit.specials}`}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default UnitCard;","import React from 'react';\r\nimport { useObserver } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\nimport StoreContext from '../../store/AppStore';\r\nimport UnitCard from './UnitCard';\r\nimport { armies } from '../../gameStats/armies';\r\n\r\nconst InfoBar = ({ team }) => {\r\n    const store = React.useContext(StoreContext);\r\n    return useObserver(() => {\r\n        if (toJS(store.gameInfo) && toJS(store.gameInfo.players[team].minis)) {\r\n            let minis = toJS(store.gameInfo.players[team].minis);\r\n            let cards = [];\r\n\r\n            for (let i = 0; i < minis.length; i++) {\r\n                cards.push(\r\n                    <UnitCard key={team + i} unit={armies[toJS(store.gameInfo.players)[team].army].units[minis[i].unit]}/>\r\n                )\r\n            }\r\n            return (\r\n                <>\r\n                    <div className=\"w-auto h-auto min-h-full my-4 m-2 lg:mr-0\">\r\n                        <div className=\"w-full flex justify-start items-center bg-gray-600 border-b-2 border-gray-700 p-2 md:p-4\">\r\n                            <h1>\r\n                                <span className={`text-${team.includes(\"White\") ? 'white' : 'black'} font-bold`}>{toJS(store.gameInfo.players[team].name)}</span>'s miniatures:\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"flex flex-row flex-wrap justify-center lg:justify-start items-center bg-gray-600 p-1 md:p-4 lg:px-12\">\r\n                            {cards}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        } else {\r\n            return <></>\r\n        }\r\n    })\r\n};\r\n\r\n\r\nexport default InfoBar;","import React, { useEffect } from 'react';\nimport { useObserver } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport 'mobx-react-lite/batchingForReactDom';\nimport StoreContext from './store/AppStore';\nimport './App.scss';\n\n//Components\nimport Scene from './components/Scene/Scene';\n//import Nav from './components/Nav/Nav';\nimport GameNav from './components/Nav/GameNav';\nimport Footer from './components/Nav/Footer';\nimport Player from './components/Sidebar/Player';\nimport History from './components/Sidebar/History';\nimport InfoBar from './components/Sidebar/InfoBar';\n\nconst App = () => {\n  const store = React.useContext(StoreContext);\n\n  useEffect(() => {\n    store.temporalLogin();\n    store.getUserDetail();\n    if (store.loginLink === \"\") {\n      store.initHSLogin();\n    }\n    store.setTimer();\n    window.addEventListener('keydown', handleFirstTab);\n    return () => {\n      window.removeEventListener('keydown', handleFirstTab);\n    }\n  })\n\n  const handleFirstTab = (e) => {\n    if (e.keyCode === 9) { // the \"I am a keyboard user\" key\n      document.body.classList.add('user-is-tabbing');\n      window.removeEventListener('keydown', handleFirstTab);\n    }\n  }\n\n  const SideBar = () => {\n    return useObserver(() => {\n      if (toJS(store.gameInfo)) {\n        return (\n          <div className={`${store.fullScreen ? \"hidden\" : \"\"} flex flex-col justify-between lg:w-3/12`} >\n            <div className=\"flex flex-row lg:flex-col items-center justify-center\" >\n              <Player team={\"white\"} playerName={toJS(store.gameInfo.players.teamWhite.name)} actionsLeft={toJS(store.gameInfo.players.teamWhite.turnActions)} minisLeft={toJS(store.gameInfo.players.teamWhite.minis.length)} isCurrentPlayer={toJS(store.gameInfo.currentPlayer.name) === toJS(store.gameInfo.players.teamWhite.name) ? true : false}/>\n              <Player team={\"black\"} playerName={toJS(store.gameInfo.players.teamBlack.name)} actionsLeft={toJS(store.gameInfo.players.teamBlack.turnActions)} minisLeft={toJS(store.gameInfo.players.teamBlack.minis.length)} isCurrentPlayer={toJS(store.gameInfo.currentPlayer.name) === toJS(store.gameInfo.players.teamBlack.name) ? true : false}/>\n            </div>\n            <History />\n          </div>\n        );\n      } else {\n        return (\n          <></>\n        )\n      }\n    })\n  } \n\n  return (\n    <div className=\"side-bar w-full h-full bg-gray-800 overflow-hidden\">\n      <GameNav />\n      <div className=\"flex flex-col-reverse lg:flex-row\">\n        <div className=\"w-full h-full\">\n          <Scene />\n          <InfoBar team=\"teamWhite\"/>\n          <InfoBar team=\"teamBlack\"/>\n        </div>\n        <SideBar />\n      </div>\n      <Footer />\n    </div>\n  )\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.output.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './store/AppStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}